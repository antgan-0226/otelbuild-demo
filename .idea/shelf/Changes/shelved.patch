Index: .otel-build/instrument/service/otel_trampoline.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.otel-build/instrument/service/otel_trampoline.go b/.otel-build/instrument/service/otel_trampoline.go
new file mode 100644
--- /dev/null	(date 1732095847996)
+++ b/.otel-build/instrument/service/otel_trampoline.go	(date 1732095847996)
@@ -0,0 +1,5 @@
+package service
+
+// Variable Template
+var OtelGetStackImpl func() []byte = nil
+var OtelPrintStackImpl func([]byte) = nil
Index: .otel-build/instrument/model/user.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.otel-build/instrument/model/user.go b/.otel-build/instrument/model/user.go
new file mode 100644
--- /dev/null	(date 1732095826205)
+++ b/.otel-build/instrument/model/user.go	(date 1732095826205)
@@ -0,0 +1,7 @@
+package model
+
+type UserModel struct {
+	Id       int64
+	Nickname string
+	Age      int
+}
Index: .otel-build/instrument/http/roundtrip.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.otel-build/instrument/http/roundtrip.go b/.otel-build/instrument/http/roundtrip.go
new file mode 100644
--- /dev/null	(date 1732095864672)
+++ b/.otel-build/instrument/http/roundtrip.go	(date 1732095864672)
@@ -0,0 +1,151 @@
+// Copyright 2018 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+//go:build !js
+
+package http
+
+import _ "unsafe" // for linkname
+
+// RoundTrip should be an internal detail,
+// but widely used packages access it using linkname.
+// Notable members of the hall of shame include:
+//   - github.com/erda-project/erda-infra
+//
+// Do not remove or change the type signature.
+// See go.dev/issue/67401.
+//
+//go:linkname badRoundTrip net/http.(*Transport).RoundTrip
+func badRoundTrip(*Transport, *Request) (*Response, error)
+
+// RoundTrip implements the [RoundTripper] interface.
+//
+// For higher-level HTTP client support (such as handling of cookies
+// and redirects), see [Get], [Post], and the [Client] type.
+//
+// Like the RoundTripper interface, the error types returned
+// by RoundTrip are unspecified.
+func (t *Transport) RoundTrip(req *Request) (retVal0 *Response, retVal1 error) {
+	if  callContext84013, _ := OtelOnEnterTrampoline_RoundTrip84013(&t, &req); false { /* NO_NEWWLINE_PLACEHOLDER */ ;	} else {  		defer OtelOnExitTrampoline_RoundTrip84013(callContext84013, &retVal0, &retVal1) ;	}  
+	return t.roundTrip(req)
+}
+
+// Seeing is not always believing. The following template is a bit tricky, see
+// trampoline.go for more details
+// Struct Template
+type CallContextImpl84013 struct {
+	Params     []interface{}
+	ReturnVals []interface{}
+	SkipCall   bool
+	Data       interface{}
+}
+
+func (c *CallContextImpl84013) SetSkipCall(skip bool)    { c.SkipCall = skip }
+func (c *CallContextImpl84013) IsSkipCall() bool         { return c.SkipCall }
+func (c *CallContextImpl84013) SetData(data interface{}) { c.Data = data }
+func (c *CallContextImpl84013) GetData() interface{}     { return c.Data }
+func (c *CallContextImpl84013) GetKeyData(key string) interface{} {
+	if c.Data == nil {
+		return nil
+	}
+	return c.Data.(map[string]interface{})[key]
+}
+func (c *CallContextImpl84013) SetKeyData(key string, val interface{}) {
+	if c.Data == nil {
+		c.Data = make(map[string]interface{})
+	}
+	c.Data.(map[string]interface{})[key] = val
+}
+func (c *CallContextImpl84013) HasKeyData(key string) bool {
+	if c.Data == nil {
+		return false
+	}
+	_, ok := c.Data.(map[string]interface{})[key]
+	return ok
+}
+func (c *CallContextImpl84013) GetParam(idx int) interface{} {
+	switch idx {
+	case 0:
+		return *(c.Params[0].(**Transport))
+	case 1:
+		return *(c.Params[1].(**Request))
+	}
+	return nil
+}
+func (c *CallContextImpl84013) SetParam(idx int, val interface{}) {
+	if val == nil {
+		c.Params[idx] = nil
+		return
+	}
+	switch idx {
+	case 0:
+		*(c.Params[0].(**Transport)) = val.(*Transport)
+	case 1:
+		*(c.Params[1].(**Request)) = val.(*Request)
+	}
+}
+func (c *CallContextImpl84013) GetReturnVal(idx int) interface{} {
+	switch idx {
+	case 0:
+		return *(c.ReturnVals[0].(**Response))
+	case 1:
+		return *(c.ReturnVals[1].(*error))
+	}
+	return nil
+}
+func (c *CallContextImpl84013) SetReturnVal(idx int, val interface{}) {
+	if val == nil {
+		c.ReturnVals[idx] = nil
+		return
+	}
+	switch idx {
+	case 0:
+		*(c.ReturnVals[0].(**Response)) = val.(*Response)
+	case 1:
+		*(c.ReturnVals[1].(*error)) = val.(error)
+	}
+}
+
+// Trampoline Template
+func OtelOnEnterTrampoline_RoundTrip84013(t **Transport, req **Request) (CallContext, bool) {
+	defer func() {
+		if err := recover(); err != nil {
+			println("failed to exec onEnter hook", "httpClientEnterHook")
+			if e, ok := err.(error); ok {
+				println(e.Error())
+			}
+			fetchStack, printStack := OtelGetStackImpl, OtelPrintStackImpl
+			if fetchStack != nil && printStack != nil {
+				printStack(fetchStack())
+			}
+		}
+	}()
+	callContext := &CallContextImpl84013{}
+	callContext.Params = []interface{}{t, req}
+	if HttpClientEnterHookImpl != nil {
+		HttpClientEnterHookImpl(callContext, *t, *req)
+	}
+	return callContext, callContext.SkipCall
+}
+func OtelOnExitTrampoline_RoundTrip84013(callContext CallContext, retVal0 **Response, retVal1 *error) {
+	defer func() {
+		if err := recover(); err != nil {
+			println("failed to exec onExit hook", "httpClientExitHook")
+			if e, ok := err.(error); ok {
+				println(e.Error())
+			}
+			fetchStack, printStack := OtelGetStackImpl, OtelPrintStackImpl
+			if fetchStack != nil && printStack != nil {
+				printStack(fetchStack())
+			}
+		}
+	}()
+	callContext.(*CallContextImpl84013).ReturnVals = []interface{}{retVal0, retVal1}
+	if HttpClientExitHookImpl != nil {
+		HttpClientExitHookImpl(callContext, *retVal0, *retVal1)
+	}
+}
+
+var HttpClientEnterHookImpl func(callContext CallContext, t *Transport, req *Request)
+var HttpClientExitHookImpl func(callContext CallContext, retVal0 *Response, retVal1 error)
Index: .otel-build/instrument/http/otel_trampoline.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.otel-build/instrument/http/otel_trampoline.go b/.otel-build/instrument/http/otel_trampoline.go
new file mode 100644
--- /dev/null	(date 1732095864674)
+++ b/.otel-build/instrument/http/otel_trampoline.go	(date 1732095864674)
@@ -0,0 +1,5 @@
+package http
+
+// Variable Template
+var OtelGetStackImpl func() []byte = nil
+var OtelPrintStackImpl func([]byte) = nil
Index: .otel-build/preprocess/dry_run.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.otel-build/preprocess/dry_run.log b/.otel-build/preprocess/dry_run.log
new file mode 100644
--- /dev/null	(date 1732095811193)
+++ b/.otel-build/preprocess/dry_run.log	(date 1732095811193)
@@ -0,0 +1,6608 @@
+
+#
+# internal/goarch
+#
+
+mkdir -p $WORK\b006\
+echo '# import config' > $WORK\b006\importcfg # internal
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b006\\_pkg_.a" -trimpath "$WORK\\b006=>" -p internal/goarch -lang=go1.23 -std -complete -buildid gXTFM2fAmC7X4dUYcM1T/gXTFM2fAmC7X4dUYcM1T -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b006\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\goarch\\goarch.go" "E:\\go1.23.3\\src\\internal\\goarch\\goarch_amd64.go" "E:\\go1.23.3\\src\\internal\\goarch\\zgoarch_amd64.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b006\\_pkg_.a" # internal
+
+#
+# internal/abi
+#
+
+mkdir -p $WORK\b005\
+echo -n > $WORK\b005\go_asm.h # internal
+cd E:\go1.23.3\src\internal\abi
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p internal/abi -trimpath "$WORK\\b005=>" -I "$WORK\\b005\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b005\\symabis" "E:\\go1.23.3\\src\\internal\\abi\\abi_test.s" "E:\\go1.23.3\\src\\internal\\abi\\stub.s"
+cat >$WORK\b005\importcfg << 'EOF' # internal
+# import config
+packagefile internal/goarch=$WORK\b006\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b005\\_pkg_.a" -trimpath "$WORK\\b005=>" -p internal/abi -lang=go1.23 -std -buildid ijMn7ajRqUb9SU7S6r7r/ijMn7ajRqUb9SU7S6r7r -goversion go1.23.3 -symabis "$WORK\\b005\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b005\\importcfg" -pack -asmhdr "$WORK\\b005\\go_asm.h" "E:\\go1.23.3\\src\\internal\\abi\\abi.go" "E:\\go1.23.3\\src\\internal\\abi\\abi_amd64.go" "E:\\go1.23.3\\src\\internal\\abi\\compiletype.go" "E:\\go1.23.3\\src\\internal\\abi\\escape.go" "E:\\go1.23.3\\src\\internal\\abi\\funcpc.go" "E:\\go1.23.3\\src\\internal\\abi\\iface.go" "E:\\go1.23.3\\src\\internal\\abi\\map.go" "E:\\go1.23.3\\src\\internal\\abi\\rangefuncconsts.go" "E:\\go1.23.3\\src\\internal\\abi\\runtime.go" "E:\\go1.23.3\\src\\internal\\abi\\stack.go" "E:\\go1.23.3\\src\\internal\\abi\\switch.go" "E:\\go1.23.3\\src\\internal\\abi\\symtab.go" "E:\\go1.23.3\\src\\internal\\abi\\type.go"
+cd E:\go1.23.3\src\internal\abi
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p internal/abi -trimpath "$WORK\\b005=>" -I "$WORK\\b005\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b005\\abi_test.o" "E:\\go1.23.3\\src\\internal\\abi\\abi_test.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p internal/abi -trimpath "$WORK\\b005=>" -I "$WORK\\b005\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b005\\stub.o" "E:\\go1.23.3\\src\\internal\\abi\\stub.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b005\\_pkg_.a" "$WORK\\b005\\abi_test.o" "$WORK\\b005\\stub.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b005\\_pkg_.a" # internal
+
+#
+# internal/unsafeheader
+#
+
+mkdir -p $WORK\b008\
+echo '# import config' > $WORK\b008\importcfg # internal
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b008\\_pkg_.a" -trimpath "$WORK\\b008=>" -p internal/unsafeheader -lang=go1.23 -std -complete -buildid soeLwBKla8oLLPNiyBOC/soeLwBKla8oLLPNiyBOC -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b008\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\unsafeheader\\unsafeheader.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b008\\_pkg_.a" # internal
+
+#
+# internal/cpu
+#
+
+mkdir -p $WORK\b011\
+echo -n > $WORK\b011\go_asm.h # internal
+cd E:\go1.23.3\src\internal\cpu
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p internal/cpu -trimpath "$WORK\\b011=>" -I "$WORK\\b011\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b011\\symabis" "E:\\go1.23.3\\src\\internal\\cpu\\cpu.s" "E:\\go1.23.3\\src\\internal\\cpu\\cpu_x86.s"
+echo '# import config' > $WORK\b011\importcfg # internal
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b011\\_pkg_.a" -trimpath "$WORK\\b011=>" -p internal/cpu -lang=go1.23 -std -buildid 06Z_dsRIuIg1s5pxw37w/06Z_dsRIuIg1s5pxw37w -goversion go1.23.3 -symabis "$WORK\\b011\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b011\\importcfg" -pack -asmhdr "$WORK\\b011\\go_asm.h" "E:\\go1.23.3\\src\\internal\\cpu\\cpu.go" "E:\\go1.23.3\\src\\internal\\cpu\\cpu_x86.go"
+cd E:\go1.23.3\src\internal\cpu
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p internal/cpu -trimpath "$WORK\\b011=>" -I "$WORK\\b011\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b011\\cpu.o" "E:\\go1.23.3\\src\\internal\\cpu\\cpu.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p internal/cpu -trimpath "$WORK\\b011=>" -I "$WORK\\b011\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b011\\cpu_x86.o" "E:\\go1.23.3\\src\\internal\\cpu\\cpu_x86.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b011\\_pkg_.a" "$WORK\\b011\\cpu.o" "$WORK\\b011\\cpu_x86.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b011\\_pkg_.a" # internal
+
+#
+# internal/bytealg
+#
+
+mkdir -p $WORK\b010\
+echo -n > $WORK\b010\go_asm.h # internal
+cd E:\go1.23.3\src\internal\bytealg
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p internal/bytealg -trimpath "$WORK\\b010=>" -I "$WORK\\b010\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b010\\symabis" "E:\\go1.23.3\\src\\internal\\bytealg\\compare_amd64.s" "E:\\go1.23.3\\src\\internal\\bytealg\\count_amd64.s" "E:\\go1.23.3\\src\\internal\\bytealg\\equal_amd64.s" "E:\\go1.23.3\\src\\internal\\bytealg\\index_amd64.s" "E:\\go1.23.3\\src\\internal\\bytealg\\indexbyte_amd64.s"
+cat >$WORK\b010\importcfg << 'EOF' # internal
+# import config
+packagefile internal/cpu=$WORK\b011\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b010\\_pkg_.a" -trimpath "$WORK\\b010=>" -p internal/bytealg -lang=go1.23 -std -buildid uAfiL2u_Atna1Pk-A497/uAfiL2u_Atna1Pk-A497 -goversion go1.23.3 -symabis "$WORK\\b010\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b010\\importcfg" -pack -asmhdr "$WORK\\b010\\go_asm.h" "E:\\go1.23.3\\src\\internal\\bytealg\\bytealg.go" "E:\\go1.23.3\\src\\internal\\bytealg\\compare_native.go" "E:\\go1.23.3\\src\\internal\\bytealg\\count_native.go" "E:\\go1.23.3\\src\\internal\\bytealg\\equal_generic.go" "E:\\go1.23.3\\src\\internal\\bytealg\\equal_native.go" "E:\\go1.23.3\\src\\internal\\bytealg\\index_amd64.go" "E:\\go1.23.3\\src\\internal\\bytealg\\index_native.go" "E:\\go1.23.3\\src\\internal\\bytealg\\indexbyte_native.go" "E:\\go1.23.3\\src\\internal\\bytealg\\lastindexbyte_generic.go"
+cd E:\go1.23.3\src\internal\bytealg
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p internal/bytealg -trimpath "$WORK\\b010=>" -I "$WORK\\b010\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b010\\compare_amd64.o" "E:\\go1.23.3\\src\\internal\\bytealg\\compare_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p internal/bytealg -trimpath "$WORK\\b010=>" -I "$WORK\\b010\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b010\\count_amd64.o" "E:\\go1.23.3\\src\\internal\\bytealg\\count_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p internal/bytealg -trimpath "$WORK\\b010=>" -I "$WORK\\b010\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b010\\equal_amd64.o" "E:\\go1.23.3\\src\\internal\\bytealg\\equal_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p internal/bytealg -trimpath "$WORK\\b010=>" -I "$WORK\\b010\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b010\\index_amd64.o" "E:\\go1.23.3\\src\\internal\\bytealg\\index_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p internal/bytealg -trimpath "$WORK\\b010=>" -I "$WORK\\b010\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b010\\indexbyte_amd64.o" "E:\\go1.23.3\\src\\internal\\bytealg\\indexbyte_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b010\\_pkg_.a" "$WORK\\b010\\compare_amd64.o" "$WORK\\b010\\count_amd64.o" "$WORK\\b010\\equal_amd64.o" "$WORK\\b010\\index_amd64.o" "$WORK\\b010\\indexbyte_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b010\\_pkg_.a" # internal
+
+#
+# internal/byteorder
+#
+
+mkdir -p $WORK\b013\
+echo '# import config' > $WORK\b013\importcfg # internal
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b013\\_pkg_.a" -trimpath "$WORK\\b013=>" -p internal/byteorder -lang=go1.23 -std -complete -buildid BIdPFw_7dL1zfLBja1A0/BIdPFw_7dL1zfLBja1A0 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b013\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\byteorder\\byteorder.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b013\\_pkg_.a" # internal
+
+#
+# internal/chacha8rand
+#
+
+mkdir -p $WORK\b012\
+echo -n > $WORK\b012\go_asm.h # internal
+cd E:\go1.23.3\src\internal\chacha8rand
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p internal/chacha8rand -trimpath "$WORK\\b012=>" -I "$WORK\\b012\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b012\\symabis" "E:\\go1.23.3\\src\\internal\\chacha8rand\\chacha8_amd64.s"
+cat >$WORK\b012\importcfg << 'EOF' # internal
+# import config
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile internal/goarch=$WORK\b006\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b012\\_pkg_.a" -trimpath "$WORK\\b012=>" -p internal/chacha8rand -lang=go1.23 -std -buildid kWpLSuCDN9iRJWhtKCXO/kWpLSuCDN9iRJWhtKCXO -goversion go1.23.3 -symabis "$WORK\\b012\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b012\\importcfg" -pack -asmhdr "$WORK\\b012\\go_asm.h" "E:\\go1.23.3\\src\\internal\\chacha8rand\\chacha8.go" "E:\\go1.23.3\\src\\internal\\chacha8rand\\chacha8_generic.go"
+cd E:\go1.23.3\src\internal\chacha8rand
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p internal/chacha8rand -trimpath "$WORK\\b012=>" -I "$WORK\\b012\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b012\\chacha8_amd64.o" "E:\\go1.23.3\\src\\internal\\chacha8rand\\chacha8_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b012\\_pkg_.a" "$WORK\\b012\\chacha8_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b012\\_pkg_.a" # internal
+
+#
+# internal/coverage/rtcov
+#
+
+mkdir -p $WORK\b014\
+echo '# import config' > $WORK\b014\importcfg # internal
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b014\\_pkg_.a" -trimpath "$WORK\\b014=>" -p internal/coverage/rtcov -lang=go1.23 -std -complete -buildid 8qd0NyLPbZQ_IPFcTFgB/8qd0NyLPbZQ_IPFcTFgB -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b014\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\coverage\\rtcov\\rtcov.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b014\\_pkg_.a" # internal
+
+#
+# internal/godebugs
+#
+
+mkdir -p $WORK\b015\
+echo '# import config' > $WORK\b015\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b015\\_pkg_.a" -trimpath "$WORK\\b015=>" -p internal/godebugs -lang=go1.23 -std -complete -buildid nw-Sqy3GS5tCCkv2JMiJ/nw-Sqy3GS5tCCkv2JMiJ -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b015\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\godebugs\\table.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b015\\_pkg_.a" # internal
+
+#
+# internal/goexperiment
+#
+
+mkdir -p $WORK\b016\
+echo '# import config' > $WORK\b016\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b016\\_pkg_.a" -trimpath "$WORK\\b016=>" -p internal/goexperiment -lang=go1.23 -std -complete -buildid X3HCh4RzYqbFRwVkq08_/X3HCh4RzYqbFRwVkq08_ -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b016\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\goexperiment\\exp_aliastypeparams_off.go" "E:\\go1.23.3\\src\\internal\\goexperiment\\exp_arenas_off.go" "E:\\go1.23.3\\src\\internal\\goexperiment\\exp_boringcrypto_off.go" "E:\\go1.23.3\\src\\internal\\goexperiment\\exp_cacheprog_off.go" "E:\\go1.23.3\\src\\internal\\goexperiment\\exp_cgocheck2_off.go" "E:\\go1.23.3\\src\\internal\\goexperiment\\exp_coverageredesign_on.go" "E:\\go1.23.3\\src\\internal\\goexperiment\\exp_fieldtrack_off.go" "E:\\go1.23.3\\src\\internal\\goexperiment\\exp_heapminimum512kib_off.go" "E:\\go1.23.3\\src\\internal\\goexperiment\\exp_loopvar_off.go" "E:\\go1.23.3\\src\\internal\\goexperiment\\exp_newinliner_off.go" "E:\\go1.23.3\\src\\internal\\goexperiment\\exp_preemptibleloops_off.go" "E:\\go1.23.3\\src\\internal\\goexperiment\\exp_rangefunc_off.go" "E:\\go1.23.3\\src\\internal\\goexperiment\\exp_regabiargs_on.go" "E:\\go1.23.3\\src\\internal\\goexperiment\\exp_regabiwrappers_on.go" "E:\\go1.23.3\\src\\internal\\goexperiment\\exp_staticlockranking_off.go" "E:\\go1.23.3\\src\\internal\\goexperiment\\flags.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b016\\_pkg_.a" # internal
+
+#
+# internal/goos
+#
+
+mkdir -p $WORK\b017\
+echo '# import config' > $WORK\b017\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b017\\_pkg_.a" -trimpath "$WORK\\b017=>" -p internal/goos -lang=go1.23 -std -complete -buildid 8WmQKpriS1R6aVImC_RS/8WmQKpriS1R6aVImC_RS -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b017\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\goos\\goos.go" "E:\\go1.23.3\\src\\internal\\goos\\nonunix.go" "E:\\go1.23.3\\src\\internal\\goos\\zgoos_windows.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b017\\_pkg_.a" # internal
+
+#
+# internal/profilerecord
+#
+
+mkdir -p $WORK\b018\
+echo '# import config' > $WORK\b018\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b018\\_pkg_.a" -trimpath "$WORK\\b018=>" -p internal/profilerecord -lang=go1.23 -std -complete -buildid k7oHT1hq_J2fBVluwH3K/k7oHT1hq_J2fBVluwH3K -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b018\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\profilerecord\\profilerecord.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b018\\_pkg_.a" # internal
+
+#
+# internal/runtime/atomic
+#
+
+mkdir -p $WORK\b019\
+echo -n > $WORK\b019\go_asm.h # internal
+cd E:\go1.23.3\src\internal\runtime\atomic
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p internal/runtime/atomic -trimpath "$WORK\\b019=>" -I "$WORK\\b019\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b019\\symabis" "E:\\go1.23.3\\src\\internal\\runtime\\atomic\\atomic_amd64.s"
+echo '# import config' > $WORK\b019\importcfg # internal
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b019\\_pkg_.a" -trimpath "$WORK\\b019=>" -p internal/runtime/atomic -lang=go1.23 -std -buildid VCsOBD9M46362t4WCg5O/VCsOBD9M46362t4WCg5O -goversion go1.23.3 -symabis "$WORK\\b019\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b019\\importcfg" -pack -asmhdr "$WORK\\b019\\go_asm.h" "E:\\go1.23.3\\src\\internal\\runtime\\atomic\\atomic_amd64.go" "E:\\go1.23.3\\src\\internal\\runtime\\atomic\\doc.go" "E:\\go1.23.3\\src\\internal\\runtime\\atomic\\stubs.go" "E:\\go1.23.3\\src\\internal\\runtime\\atomic\\types.go" "E:\\go1.23.3\\src\\internal\\runtime\\atomic\\types_64bit.go" "E:\\go1.23.3\\src\\internal\\runtime\\atomic\\unaligned.go"
+cd E:\go1.23.3\src\internal\runtime\atomic
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p internal/runtime/atomic -trimpath "$WORK\\b019=>" -I "$WORK\\b019\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b019\\atomic_amd64.o" "E:\\go1.23.3\\src\\internal\\runtime\\atomic\\atomic_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b019\\_pkg_.a" "$WORK\\b019\\atomic_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b019\\_pkg_.a" # internal
+
+#
+# internal/runtime/exithook
+#
+
+mkdir -p $WORK\b020\
+cat >$WORK\b020\importcfg << 'EOF' # internal
+# import config
+packagefile internal/runtime/atomic=$WORK\b019\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b020\\_pkg_.a" -trimpath "$WORK\\b020=>" -p internal/runtime/exithook -lang=go1.23 -std -complete -buildid _u7gX3AN0o94XDh7AYNv/_u7gX3AN0o94XDh7AYNv -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b020\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\runtime\\exithook\\hooks.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b020\\_pkg_.a" # internal
+
+#
+# internal/stringslite
+#
+
+mkdir -p $WORK\b021\
+cat >$WORK\b021\importcfg << 'EOF' # internal
+# import config
+packagefile internal/bytealg=$WORK\b010\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b021\\_pkg_.a" -trimpath "$WORK\\b021=>" -p internal/stringslite -lang=go1.23 -std -complete -buildid YxlV3zvFGRi6wc18D_sn/YxlV3zvFGRi6wc18D_sn -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b021\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\stringslite\\strings.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b021\\_pkg_.a" # internal
+
+#
+# runtime/internal/math
+#
+
+mkdir -p $WORK\b022\
+cat >$WORK\b022\importcfg << 'EOF' # internal
+# import config
+packagefile internal/goarch=$WORK\b006\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b022\\_pkg_.a" -trimpath "$WORK\\b022=>" -p runtime/internal/math -lang=go1.23 -std -complete -buildid mMg7CX2NYvhVFsiQp0YQ/mMg7CX2NYvhVFsiQp0YQ -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b022\\importcfg" -pack "E:\\go1.23.3\\src\\runtime\\internal\\math\\math.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b022\\_pkg_.a" # internal
+
+#
+# runtime/internal/sys
+#
+
+mkdir -p $WORK\b023\
+cat >$WORK\b023\importcfg << 'EOF' # internal
+# import config
+packagefile internal/goarch=$WORK\b006\_pkg_.a
+packagefile internal/goos=$WORK\b017\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b023\\_pkg_.a" -trimpath "$WORK\\b023=>" -p runtime/internal/sys -lang=go1.23 -std -complete -buildid VhWNFRbCigspJDkRxsW-/VhWNFRbCigspJDkRxsW- -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b023\\importcfg" -pack "E:\\go1.23.3\\src\\runtime\\internal\\sys\\consts.go" "E:\\go1.23.3\\src\\runtime\\internal\\sys\\consts_norace.go" "E:\\go1.23.3\\src\\runtime\\internal\\sys\\intrinsics.go" "E:\\go1.23.3\\src\\runtime\\internal\\sys\\nih.go" "E:\\go1.23.3\\src\\runtime\\internal\\sys\\sys.go" "E:\\go1.23.3\\src\\runtime\\internal\\sys\\zversion.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b023\\_pkg_.a" # internal
+
+#
+# runtime
+#
+
+mkdir -p $WORK\b009\
+echo -n > $WORK\b009\go_asm.h # internal
+cd E:\go1.23.3\src\runtime
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p runtime -trimpath "$WORK\\b009=>" -I "$WORK\\b009\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b009\\symabis" "E:\\go1.23.3\\src\\runtime\\asm.s" "E:\\go1.23.3\\src\\runtime\\asm_amd64.s" "E:\\go1.23.3\\src\\runtime\\duff_amd64.s" "E:\\go1.23.3\\src\\runtime\\memclr_amd64.s" "E:\\go1.23.3\\src\\runtime\\memmove_amd64.s" "E:\\go1.23.3\\src\\runtime\\preempt_amd64.s" "E:\\go1.23.3\\src\\runtime\\rt0_windows_amd64.s" "E:\\go1.23.3\\src\\runtime\\sys_windows_amd64.s" "E:\\go1.23.3\\src\\runtime\\test_amd64.s" "E:\\go1.23.3\\src\\runtime\\time_windows_amd64.s" "E:\\go1.23.3\\src\\runtime\\zcallback_windows.s"
+cat >$WORK\b009\importcfg << 'EOF' # internal
+# import config
+packagefile internal/abi=$WORK\b005\_pkg_.a
+packagefile internal/bytealg=$WORK\b010\_pkg_.a
+packagefile internal/chacha8rand=$WORK\b012\_pkg_.a
+packagefile internal/coverage/rtcov=$WORK\b014\_pkg_.a
+packagefile internal/cpu=$WORK\b011\_pkg_.a
+packagefile internal/goarch=$WORK\b006\_pkg_.a
+packagefile internal/godebugs=$WORK\b015\_pkg_.a
+packagefile internal/goexperiment=$WORK\b016\_pkg_.a
+packagefile internal/goos=$WORK\b017\_pkg_.a
+packagefile internal/profilerecord=$WORK\b018\_pkg_.a
+packagefile internal/runtime/atomic=$WORK\b019\_pkg_.a
+packagefile internal/runtime/exithook=$WORK\b020\_pkg_.a
+packagefile internal/stringslite=$WORK\b021\_pkg_.a
+packagefile runtime/internal/math=$WORK\b022\_pkg_.a
+packagefile runtime/internal/sys=$WORK\b023\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b009\\_pkg_.a" -trimpath "$WORK\\b009=>" -p runtime -lang=go1.23 -std -buildid h_fkMwNm8cQq_N3s6B7e/h_fkMwNm8cQq_N3s6B7e -goversion go1.23.3 -symabis "$WORK\\b009\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b009\\importcfg" -pack -asmhdr "$WORK\\b009\\go_asm.h" "E:\\go1.23.3\\src\\runtime\\alg.go" "E:\\go1.23.3\\src\\runtime\\arena.go" "E:\\go1.23.3\\src\\runtime\\asan0.go" "E:\\go1.23.3\\src\\runtime\\atomic_pointer.go" "E:\\go1.23.3\\src\\runtime\\auxv_none.go" "E:\\go1.23.3\\src\\runtime\\badlinkname.go" "E:\\go1.23.3\\src\\runtime\\cgo.go" "E:\\go1.23.3\\src\\runtime\\cgocall.go" "E:\\go1.23.3\\src\\runtime\\cgocallback.go" "E:\\go1.23.3\\src\\runtime\\cgocheck.go" "E:\\go1.23.3\\src\\runtime\\chan.go" "E:\\go1.23.3\\src\\runtime\\checkptr.go" "E:\\go1.23.3\\src\\runtime\\compiler.go" "E:\\go1.23.3\\src\\runtime\\complex.go" "E:\\go1.23.3\\src\\runtime\\coro.go" "E:\\go1.23.3\\src\\runtime\\covercounter.go" "E:\\go1.23.3\\src\\runtime\\covermeta.go" "E:\\go1.23.3\\src\\runtime\\cpuflags.go" "E:\\go1.23.3\\src\\runtime\\cpuflags_amd64.go" "E:\\go1.23.3\\src\\runtime\\cpuprof.go" "E:\\go1.23.3\\src\\runtime\\cputicks.go" "E:\\go1.23.3\\src\\runtime\\create_file_nounix.go" "E:\\go1.23.3\\src\\runtime\\debug.go" "E:\\go1.23.3\\src\\runtime\\debugcall.go" "E:\\go1.23.3\\src\\runtime\\debuglog.go" "E:\\go1.23.3\\src\\runtime\\debuglog_off.go" "E:\\go1.23.3\\src\\runtime\\defs_windows.go" "E:\\go1.23.3\\src\\runtime\\defs_windows_amd64.go" "E:\\go1.23.3\\src\\runtime\\env_posix.go" "E:\\go1.23.3\\src\\runtime\\error.go" "E:\\go1.23.3\\src\\runtime\\extern.go" "E:\\go1.23.3\\src\\runtime\\fastlog2.go" "E:\\go1.23.3\\src\\runtime\\fastlog2table.go" "E:\\go1.23.3\\src\\runtime\\fds_nonunix.go" "E:\\go1.23.3\\src\\runtime\\float.go" "E:\\go1.23.3\\src\\runtime\\hash64.go" "E:\\go1.23.3\\src\\runtime\\heapdump.go" "E:\\go1.23.3\\src\\runtime\\histogram.go" "E:\\go1.23.3\\src\\runtime\\iface.go" "E:\\go1.23.3\\src\\runtime\\lfstack.go" "E:\\go1.23.3\\src\\runtime\\linkname.go" "E:\\go1.23.3\\src\\runtime\\lock_sema.go" "E:\\go1.23.3\\src\\runtime\\lockrank.go" "E:\\go1.23.3\\src\\runtime\\lockrank_off.go" "E:\\go1.23.3\\src\\runtime\\malloc.go" "E:\\go1.23.3\\src\\runtime\\map.go" "E:\\go1.23.3\\src\\runtime\\map_fast32.go" "E:\\go1.23.3\\src\\runtime\\map_fast64.go" "E:\\go1.23.3\\src\\runtime\\map_faststr.go" "E:\\go1.23.3\\src\\runtime\\mbarrier.go" "E:\\go1.23.3\\src\\runtime\\mbitmap.go" "E:\\go1.23.3\\src\\runtime\\mcache.go" "E:\\go1.23.3\\src\\runtime\\mcentral.go" "E:\\go1.23.3\\src\\runtime\\mcheckmark.go" "E:\\go1.23.3\\src\\runtime\\mem.go" "E:\\go1.23.3\\src\\runtime\\mem_windows.go" "E:\\go1.23.3\\src\\runtime\\metrics.go" "E:\\go1.23.3\\src\\runtime\\mfinal.go" "E:\\go1.23.3\\src\\runtime\\mfixalloc.go" "E:\\go1.23.3\\src\\runtime\\mgc.go" "E:\\go1.23.3\\src\\runtime\\mgclimit.go" "E:\\go1.23.3\\src\\runtime\\mgcmark.go" "E:\\go1.23.3\\src\\runtime\\mgcpacer.go" "E:\\go1.23.3\\src\\runtime\\mgcscavenge.go" "E:\\go1.23.3\\src\\runtime\\mgcstack.go" "E:\\go1.23.3\\src\\runtime\\mgcsweep.go" "E:\\go1.23.3\\src\\runtime\\mgcwork.go" "E:\\go1.23.3\\src\\runtime\\mheap.go" "E:\\go1.23.3\\src\\runtime\\minmax.go" "E:\\go1.23.3\\src\\runtime\\mpagealloc.go" "E:\\go1.23.3\\src\\runtime\\mpagealloc_64bit.go" "E:\\go1.23.3\\src\\runtime\\mpagecache.go" "E:\\go1.23.3\\src\\runtime\\mpallocbits.go" "E:\\go1.23.3\\src\\runtime\\mprof.go" "E:\\go1.23.3\\src\\runtime\\mranges.go" "E:\\go1.23.3\\src\\runtime\\msan0.go" "E:\\go1.23.3\\src\\runtime\\msize.go" "E:\\go1.23.3\\src\\runtime\\mspanset.go" "E:\\go1.23.3\\src\\runtime\\mstats.go" "E:\\go1.23.3\\src\\runtime\\mwbbuf.go" "E:\\go1.23.3\\src\\runtime\\netpoll.go" "E:\\go1.23.3\\src\\runtime\\netpoll_windows.go" "E:\\go1.23.3\\src\\runtime\\os_nonopenbsd.go" "E:\\go1.23.3\\src\\runtime\\os_windows.go" "E:\\go1.23.3\\src\\runtime\\panic.go" "E:\\go1.23.3\\src\\runtime\\pinner.go" "E:\\go1.23.3\\src\\runtime\\plugin.go" "E:\\go1.23.3\\src\\runtime\\preempt.go" "E:\\go1.23.3\\src\\runtime\\print.go" "E:\\go1.23.3\\src\\runtime\\proc.go" "E:\\go1.23.3\\src\\runtime\\profbuf.go" "E:\\go1.23.3\\src\\runtime\\proflabel.go" "E:\\go1.23.3\\src\\runtime\\race0.go" "E:\\go1.23.3\\src\\runtime\\rand.go" "E:\\go1.23.3\\src\\runtime\\rdebug.go" "E:\\go1.23.3\\src\\runtime\\runtime.go" "E:\\go1.23.3\\src\\runtime\\runtime1.go" "E:\\go1.23.3\\src\\runtime\\runtime2.go" "E:\\go1.23.3\\src\\runtime\\runtime_boring.go" "E:\\go1.23.3\\src\\runtime\\rwmutex.go" "E:\\go1.23.3\\src\\runtime\\security_nonunix.go" "E:\\go1.23.3\\src\\runtime\\select.go" "E:\\go1.23.3\\src\\runtime\\sema.go" "E:\\go1.23.3\\src\\runtime\\signal_windows.go" "E:\\go1.23.3\\src\\runtime\\sigqueue.go" "E:\\go1.23.3\\src\\runtime\\sigqueue_note.go" "E:\\go1.23.3\\src\\runtime\\sizeclasses.go" "E:\\go1.23.3\\src\\runtime\\slice.go" "E:\\go1.23.3\\src\\runtime\\softfloat64.go" "E:\\go1.23.3\\src\\runtime\\stack.go" "E:\\go1.23.3\\src\\runtime\\stkframe.go" "E:\\go1.23.3\\src\\runtime\\string.go" "E:\\go1.23.3\\src\\runtime\\stubs.go" "E:\\go1.23.3\\src\\runtime\\stubs3.go" "E:\\go1.23.3\\src\\runtime\\stubs_amd64.go" "E:\\go1.23.3\\src\\runtime\\stubs_nonlinux.go" "E:\\go1.23.3\\src\\runtime\\symtab.go" "E:\\go1.23.3\\src\\runtime\\symtabinl.go" "E:\\go1.23.3\\src\\runtime\\sys_nonppc64x.go" "E:\\go1.23.3\\src\\runtime\\sys_x86.go" "E:\\go1.23.3\\src\\runtime\\syscall_windows.go" "E:\\go1.23.3\\src\\runtime\\tagptr.go" "E:\\go1.23.3\\src\\runtime\\tagptr_64bit.go" "E:\\go1.23.3\\src\\runtime\\test_amd64.go" "E:\\go1.23.3\\src\\runtime\\time.go" "E:\\go1.23.3\\src\\runtime\\time_nofake.go" "E:\\go1.23.3\\src\\runtime\\timeasm.go" "E:\\go1.23.3\\src\\runtime\\tls_windows_amd64.go" "E:\\go1.23.3\\src\\runtime\\trace.go" "E:\\go1.23.3\\src\\runtime\\traceallocfree.go" "E:\\go1.23.3\\src\\runtime\\traceback.go" "E:\\go1.23.3\\src\\runtime\\tracebuf.go" "E:\\go1.23.3\\src\\runtime\\tracecpu.go" "E:\\go1.23.3\\src\\runtime\\traceevent.go" "E:\\go1.23.3\\src\\runtime\\traceexp.go" "E:\\go1.23.3\\src\\runtime\\tracemap.go" "E:\\go1.23.3\\src\\runtime\\traceregion.go" "E:\\go1.23.3\\src\\runtime\\traceruntime.go" "E:\\go1.23.3\\src\\runtime\\tracestack.go" "E:\\go1.23.3\\src\\runtime\\tracestatus.go" "E:\\go1.23.3\\src\\runtime\\tracestring.go" "E:\\go1.23.3\\src\\runtime\\tracetime.go" "E:\\go1.23.3\\src\\runtime\\tracetype.go" "E:\\go1.23.3\\src\\runtime\\type.go" "E:\\go1.23.3\\src\\runtime\\typekind.go" "E:\\go1.23.3\\src\\runtime\\unsafe.go" "E:\\go1.23.3\\src\\runtime\\utf8.go" "E:\\go1.23.3\\src\\runtime\\vdso_in_none.go" "E:\\go1.23.3\\src\\runtime\\write_err.go" "E:\\go1.23.3\\src\\runtime\\zcallback_windows.go"
+cp E:\go1.23.3\src\runtime\asm_amd64.h $WORK\b009\asm_GOARCH.h
+cp E:\go1.23.3\src\runtime\time_windows.h $WORK\b009\time_GOOS.h
+cd E:\go1.23.3\src\runtime
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p runtime -trimpath "$WORK\\b009=>" -I "$WORK\\b009\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b009\\asm.o" "E:\\go1.23.3\\src\\runtime\\asm.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p runtime -trimpath "$WORK\\b009=>" -I "$WORK\\b009\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b009\\asm_amd64.o" "E:\\go1.23.3\\src\\runtime\\asm_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p runtime -trimpath "$WORK\\b009=>" -I "$WORK\\b009\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b009\\duff_amd64.o" "E:\\go1.23.3\\src\\runtime\\duff_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p runtime -trimpath "$WORK\\b009=>" -I "$WORK\\b009\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b009\\memclr_amd64.o" "E:\\go1.23.3\\src\\runtime\\memclr_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p runtime -trimpath "$WORK\\b009=>" -I "$WORK\\b009\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b009\\memmove_amd64.o" "E:\\go1.23.3\\src\\runtime\\memmove_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p runtime -trimpath "$WORK\\b009=>" -I "$WORK\\b009\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b009\\preempt_amd64.o" "E:\\go1.23.3\\src\\runtime\\preempt_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p runtime -trimpath "$WORK\\b009=>" -I "$WORK\\b009\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b009\\rt0_windows_amd64.o" "E:\\go1.23.3\\src\\runtime\\rt0_windows_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p runtime -trimpath "$WORK\\b009=>" -I "$WORK\\b009\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b009\\sys_windows_amd64.o" "E:\\go1.23.3\\src\\runtime\\sys_windows_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p runtime -trimpath "$WORK\\b009=>" -I "$WORK\\b009\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b009\\test_amd64.o" "E:\\go1.23.3\\src\\runtime\\test_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p runtime -trimpath "$WORK\\b009=>" -I "$WORK\\b009\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b009\\time_windows_amd64.o" "E:\\go1.23.3\\src\\runtime\\time_windows_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p runtime -trimpath "$WORK\\b009=>" -I "$WORK\\b009\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b009\\zcallback_windows.o" "E:\\go1.23.3\\src\\runtime\\zcallback_windows.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b009\\_pkg_.a" "$WORK\\b009\\asm.o" "$WORK\\b009\\asm_amd64.o" "$WORK\\b009\\duff_amd64.o" "$WORK\\b009\\memclr_amd64.o" "$WORK\\b009\\memmove_amd64.o" "$WORK\\b009\\preempt_amd64.o" "$WORK\\b009\\rt0_windows_amd64.o" "$WORK\\b009\\sys_windows_amd64.o" "$WORK\\b009\\test_amd64.o" "$WORK\\b009\\time_windows_amd64.o" "$WORK\\b009\\zcallback_windows.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b009\\_pkg_.a" # internal
+
+#
+# internal/reflectlite
+#
+
+mkdir -p $WORK\b004\
+echo -n > $WORK\b004\go_asm.h # internal
+cd E:\go1.23.3\src\internal\reflectlite
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p internal/reflectlite -trimpath "$WORK\\b004=>" -I "$WORK\\b004\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b004\\symabis" "E:\\go1.23.3\\src\\internal\\reflectlite\\asm.s"
+cat >$WORK\b004\importcfg << 'EOF' # internal
+# import config
+packagefile internal/abi=$WORK\b005\_pkg_.a
+packagefile internal/goarch=$WORK\b006\_pkg_.a
+packagefile internal/unsafeheader=$WORK\b008\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b004\\_pkg_.a" -trimpath "$WORK\\b004=>" -p internal/reflectlite -lang=go1.23 -std -buildid qCmy5Q5migx-76A-qNob/qCmy5Q5migx-76A-qNob -goversion go1.23.3 -symabis "$WORK\\b004\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b004\\importcfg" -pack -asmhdr "$WORK\\b004\\go_asm.h" "E:\\go1.23.3\\src\\internal\\reflectlite\\swapper.go" "E:\\go1.23.3\\src\\internal\\reflectlite\\type.go" "E:\\go1.23.3\\src\\internal\\reflectlite\\value.go"
+cd E:\go1.23.3\src\internal\reflectlite
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p internal/reflectlite -trimpath "$WORK\\b004=>" -I "$WORK\\b004\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b004\\asm.o" "E:\\go1.23.3\\src\\internal\\reflectlite\\asm.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b004\\_pkg_.a" "$WORK\\b004\\asm.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b004\\_pkg_.a" # internal
+
+#
+# errors
+#
+
+mkdir -p $WORK\b003\
+cat >$WORK\b003\importcfg << 'EOF' # internal
+# import config
+packagefile internal/reflectlite=$WORK\b004\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b003\\_pkg_.a" -trimpath "$WORK\\b003=>" -p errors -lang=go1.23 -std -complete -buildid CccwrimA_TCN5nEzySx3/CccwrimA_TCN5nEzySx3 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b003\\importcfg" -pack "E:\\go1.23.3\\src\\errors\\errors.go" "E:\\go1.23.3\\src\\errors\\join.go" "E:\\go1.23.3\\src\\errors\\wrap.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b003\\_pkg_.a" # internal
+
+#
+# internal/race
+#
+
+mkdir -p $WORK\b025\
+echo '# import config' > $WORK\b025\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b025\\_pkg_.a" -trimpath "$WORK\\b025=>" -p internal/race -lang=go1.23 -std -complete -buildid qiC7H3yLwuFzX5hWMMGW/qiC7H3yLwuFzX5hWMMGW -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b025\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\race\\doc.go" "E:\\go1.23.3\\src\\internal\\race\\norace.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b025\\_pkg_.a" # internal
+
+#
+# sync/atomic
+#
+
+mkdir -p $WORK\b026\
+echo -n > $WORK\b026\go_asm.h # internal
+cd E:\go1.23.3\src\sync\atomic
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p sync/atomic -trimpath "$WORK\\b026=>" -I "$WORK\\b026\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b026\\symabis" "E:\\go1.23.3\\src\\sync\\atomic\\asm.s"
+echo '# import config' > $WORK\b026\importcfg # internal
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b026\\_pkg_.a" -trimpath "$WORK\\b026=>" -p sync/atomic -lang=go1.23 -std -buildid iXzvEB5Dk92hmBWQluwt/iXzvEB5Dk92hmBWQluwt -goversion go1.23.3 -symabis "$WORK\\b026\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b026\\importcfg" -pack -asmhdr "$WORK\\b026\\go_asm.h" "E:\\go1.23.3\\src\\sync\\atomic\\doc.go" "E:\\go1.23.3\\src\\sync\\atomic\\type.go" "E:\\go1.23.3\\src\\sync\\atomic\\value.go"
+cd E:\go1.23.3\src\sync\atomic
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p sync/atomic -trimpath "$WORK\\b026=>" -I "$WORK\\b026\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b026\\asm.o" "E:\\go1.23.3\\src\\sync\\atomic\\asm.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b026\\_pkg_.a" "$WORK\\b026\\asm.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b026\\_pkg_.a" # internal
+
+#
+# sync
+#
+
+mkdir -p $WORK\b024\
+cat >$WORK\b024\importcfg << 'EOF' # internal
+# import config
+packagefile internal/race=$WORK\b025\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b024\\_pkg_.a" -trimpath "$WORK\\b024=>" -p sync -lang=go1.23 -std -buildid Z4KYkCACxg1dy66T24dp/Z4KYkCACxg1dy66T24dp -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b024\\importcfg" -pack "E:\\go1.23.3\\src\\sync\\cond.go" "E:\\go1.23.3\\src\\sync\\map.go" "E:\\go1.23.3\\src\\sync\\mutex.go" "E:\\go1.23.3\\src\\sync\\once.go" "E:\\go1.23.3\\src\\sync\\oncefunc.go" "E:\\go1.23.3\\src\\sync\\pool.go" "E:\\go1.23.3\\src\\sync\\poolqueue.go" "E:\\go1.23.3\\src\\sync\\runtime.go" "E:\\go1.23.3\\src\\sync\\runtime2.go" "E:\\go1.23.3\\src\\sync\\rwmutex.go" "E:\\go1.23.3\\src\\sync\\waitgroup.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b024\\_pkg_.a" # internal
+
+#
+# internal/bisect
+#
+
+mkdir -p $WORK\b029\
+cat >$WORK\b029\importcfg << 'EOF' # internal
+# import config
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b029\\_pkg_.a" -trimpath "$WORK\\b029=>" -p internal/bisect -lang=go1.23 -std -complete -buildid dPuLd49AdcfExjy5N_UP/dPuLd49AdcfExjy5N_UP -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b029\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\bisect\\bisect.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b029\\_pkg_.a" # internal
+
+#
+# internal/godebug
+#
+
+mkdir -p $WORK\b028\
+cat >$WORK\b028\importcfg << 'EOF' # internal
+# import config
+packagefile internal/bisect=$WORK\b029\_pkg_.a
+packagefile internal/godebugs=$WORK\b015\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b028\\_pkg_.a" -trimpath "$WORK\\b028=>" -p internal/godebug -lang=go1.23 -std -complete -buildid HDgo2gtFMacwf4QTPedO/HDgo2gtFMacwf4QTPedO -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b028\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\godebug\\godebug.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b028\\_pkg_.a" # internal
+
+#
+# internal/syscall/windows/sysdll
+#
+
+mkdir -p $WORK\b031\
+echo '# import config' > $WORK\b031\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b031\\_pkg_.a" -trimpath "$WORK\\b031=>" -p internal/syscall/windows/sysdll -lang=go1.23 -std -complete -buildid 4AXT3jajBG9Mao_SwdVj/4AXT3jajBG9Mao_SwdVj -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b031\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\syscall\\windows\\sysdll\\sysdll.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b031\\_pkg_.a" # internal
+
+#
+# internal/asan
+#
+
+mkdir -p $WORK\b033\
+echo '# import config' > $WORK\b033\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b033\\_pkg_.a" -trimpath "$WORK\\b033=>" -p internal/asan -lang=go1.23 -std -complete -buildid 8UwP4GFUhNSNCdIIX_zm/8UwP4GFUhNSNCdIIX_zm -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b033\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\asan\\doc.go" "E:\\go1.23.3\\src\\internal\\asan\\noasan.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b033\\_pkg_.a" # internal
+
+#
+# internal/itoa
+#
+
+mkdir -p $WORK\b034\
+echo '# import config' > $WORK\b034\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b034\\_pkg_.a" -trimpath "$WORK\\b034=>" -p internal/itoa -lang=go1.23 -std -complete -buildid UZ2Q1ohFfMF2dM5UKF25/UZ2Q1ohFfMF2dM5UKF25 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b034\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\itoa\\itoa.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b034\\_pkg_.a" # internal
+
+#
+# internal/msan
+#
+
+mkdir -p $WORK\b035\
+echo '# import config' > $WORK\b035\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b035\\_pkg_.a" -trimpath "$WORK\\b035=>" -p internal/msan -lang=go1.23 -std -complete -buildid yMlL_vCjEZ2R8Km7IKn_/yMlL_vCjEZ2R8Km7IKn_ -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b035\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\msan\\doc.go" "E:\\go1.23.3\\src\\internal\\msan\\nomsan.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b035\\_pkg_.a" # internal
+
+#
+# internal/oserror
+#
+
+mkdir -p $WORK\b036\
+cat >$WORK\b036\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b036\\_pkg_.a" -trimpath "$WORK\\b036=>" -p internal/oserror -lang=go1.23 -std -complete -buildid v4D5laQ4XehYwZ-W1CGd/v4D5laQ4XehYwZ-W1CGd -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b036\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\oserror\\errors.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b036\\_pkg_.a" # internal
+
+#
+# unicode/utf16
+#
+
+mkdir -p $WORK\b037\
+echo '# import config' > $WORK\b037\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b037\\_pkg_.a" -trimpath "$WORK\\b037=>" -p unicode/utf16 -lang=go1.23 -std -complete -buildid CKhCsSR2FB0kA5VTMR0i/CKhCsSR2FB0kA5VTMR0i -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b037\\importcfg" -pack "E:\\go1.23.3\\src\\unicode\\utf16\\utf16.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b037\\_pkg_.a" # internal
+
+#
+# unicode/utf8
+#
+
+mkdir -p $WORK\b038\
+echo '# import config' > $WORK\b038\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b038\\_pkg_.a" -trimpath "$WORK\\b038=>" -p unicode/utf8 -lang=go1.23 -std -complete -buildid se47_ZjOqU8hUmm5Da_k/se47_ZjOqU8hUmm5Da_k -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b038\\importcfg" -pack "E:\\go1.23.3\\src\\unicode\\utf8\\utf8.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b038\\_pkg_.a" # internal
+
+#
+# syscall
+#
+
+mkdir -p $WORK\b032\
+cat >$WORK\b032\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/asan=$WORK\b033\_pkg_.a
+packagefile internal/bytealg=$WORK\b010\_pkg_.a
+packagefile internal/itoa=$WORK\b034\_pkg_.a
+packagefile internal/msan=$WORK\b035\_pkg_.a
+packagefile internal/oserror=$WORK\b036\_pkg_.a
+packagefile internal/race=$WORK\b025\_pkg_.a
+packagefile internal/syscall/windows/sysdll=$WORK\b031\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile unicode/utf16=$WORK\b037\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b032\\_pkg_.a" -trimpath "$WORK\\b032=>" -p syscall -lang=go1.23 -std -buildid N4c3cgjHGuLNyoj1g9kI/N4c3cgjHGuLNyoj1g9kI -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b032\\importcfg" -pack "E:\\go1.23.3\\src\\syscall\\dll_windows.go" "E:\\go1.23.3\\src\\syscall\\env_windows.go" "E:\\go1.23.3\\src\\syscall\\exec_windows.go" "E:\\go1.23.3\\src\\syscall\\net.go" "E:\\go1.23.3\\src\\syscall\\security_windows.go" "E:\\go1.23.3\\src\\syscall\\syscall.go" "E:\\go1.23.3\\src\\syscall\\syscall_windows.go" "E:\\go1.23.3\\src\\syscall\\time_nofake.go" "E:\\go1.23.3\\src\\syscall\\types_windows.go" "E:\\go1.23.3\\src\\syscall\\types_windows_amd64.go" "E:\\go1.23.3\\src\\syscall\\wtf8_windows.go" "E:\\go1.23.3\\src\\syscall\\zerrors_windows.go" "E:\\go1.23.3\\src\\syscall\\zsyscall_windows.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b032\\_pkg_.a" # internal
+
+#
+# internal/syscall/windows/registry
+#
+
+mkdir -p $WORK\b030\
+cat >$WORK\b030\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/syscall/windows/sysdll=$WORK\b031\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile syscall=$WORK\b032\_pkg_.a
+packagefile unicode/utf16=$WORK\b037\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b030\\_pkg_.a" -trimpath "$WORK\\b030=>" -p internal/syscall/windows/registry -lang=go1.23 -std -complete -buildid CUM8FT7-SIULw2cSR6Nn/CUM8FT7-SIULw2cSR6Nn -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b030\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\syscall\\windows\\registry\\key.go" "E:\\go1.23.3\\src\\internal\\syscall\\windows\\registry\\syscall.go" "E:\\go1.23.3\\src\\internal\\syscall\\windows\\registry\\value.go" "E:\\go1.23.3\\src\\internal\\syscall\\windows\\registry\\zsyscall_windows.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b030\\_pkg_.a" # internal
+
+#
+# time
+#
+
+mkdir -p $WORK\b027\
+cat >$WORK\b027\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/bytealg=$WORK\b010\_pkg_.a
+packagefile internal/godebug=$WORK\b028\_pkg_.a
+packagefile internal/stringslite=$WORK\b021\_pkg_.a
+packagefile internal/syscall/windows/registry=$WORK\b030\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile syscall=$WORK\b032\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b027\\_pkg_.a" -trimpath "$WORK\\b027=>" -p time -lang=go1.23 -std -buildid luHeiWbHcKqlprn3nxKa/luHeiWbHcKqlprn3nxKa -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b027\\importcfg" -pack "E:\\go1.23.3\\src\\time\\format.go" "E:\\go1.23.3\\src\\time\\format_rfc3339.go" "E:\\go1.23.3\\src\\time\\sleep.go" "E:\\go1.23.3\\src\\time\\sys_windows.go" "E:\\go1.23.3\\src\\time\\tick.go" "E:\\go1.23.3\\src\\time\\time.go" "E:\\go1.23.3\\src\\time\\zoneinfo.go" "E:\\go1.23.3\\src\\time\\zoneinfo_abbrs_windows.go" "E:\\go1.23.3\\src\\time\\zoneinfo_goroot.go" "E:\\go1.23.3\\src\\time\\zoneinfo_read.go" "E:\\go1.23.3\\src\\time\\zoneinfo_windows.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b027\\_pkg_.a" # internal
+
+#
+# context
+#
+
+mkdir -p $WORK\b002\
+cat >$WORK\b002\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/reflectlite=$WORK\b004\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b002\\_pkg_.a" -trimpath "$WORK\\b002=>" -p context -lang=go1.23 -std -complete -buildid huu1BIpmbHHrM3wX1NNb/huu1BIpmbHHrM3wX1NNb -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b002\\importcfg" -pack "E:\\go1.23.3\\src\\context\\context.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b002\\_pkg_.a" # internal
+
+#
+# cmp
+#
+
+mkdir -p $WORK\b041\
+echo '# import config' > $WORK\b041\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b041\\_pkg_.a" -trimpath "$WORK\\b041=>" -p cmp -lang=go1.23 -std -complete -buildid bpk_-foQpfm6NQgQhtG1/bpk_-foQpfm6NQgQhtG1 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b041\\importcfg" -pack "E:\\go1.23.3\\src\\cmp\\cmp.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b041\\_pkg_.a" # internal
+
+#
+# iter
+#
+
+mkdir -p $WORK\b043\
+cat >$WORK\b043\importcfg << 'EOF' # internal
+# import config
+packagefile internal/race=$WORK\b025\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b043\\_pkg_.a" -trimpath "$WORK\\b043=>" -p iter -lang=go1.23 -std -complete -buildid UeDWqrlNtOMvt_jdG13o/UeDWqrlNtOMvt_jdG13o -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b043\\importcfg" -pack "E:\\go1.23.3\\src\\iter\\iter.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b043\\_pkg_.a" # internal
+
+#
+# math/bits
+#
+
+mkdir -p $WORK\b045\
+echo '# import config' > $WORK\b045\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b045\\_pkg_.a" -trimpath "$WORK\\b045=>" -p math/bits -lang=go1.23 -std -complete -buildid XZ1ohhlavMIvqduNWCzB/XZ1ohhlavMIvqduNWCzB -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b045\\importcfg" -pack "E:\\go1.23.3\\src\\math\\bits\\bits.go" "E:\\go1.23.3\\src\\math\\bits\\bits_errors.go" "E:\\go1.23.3\\src\\math\\bits\\bits_tables.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b045\\_pkg_.a" # internal
+
+#
+# math
+#
+
+mkdir -p $WORK\b044\
+echo -n > $WORK\b044\go_asm.h # internal
+cd E:\go1.23.3\src\math
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p math -trimpath "$WORK\\b044=>" -I "$WORK\\b044\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b044\\symabis" "E:\\go1.23.3\\src\\math\\dim_amd64.s" "E:\\go1.23.3\\src\\math\\exp_amd64.s" "E:\\go1.23.3\\src\\math\\floor_amd64.s" "E:\\go1.23.3\\src\\math\\hypot_amd64.s" "E:\\go1.23.3\\src\\math\\log_amd64.s"
+cat >$WORK\b044\importcfg << 'EOF' # internal
+# import config
+packagefile internal/cpu=$WORK\b011\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b044\\_pkg_.a" -trimpath "$WORK\\b044=>" -p math -lang=go1.23 -std -buildid 7YGP-XCVfteLammCXuaF/7YGP-XCVfteLammCXuaF -goversion go1.23.3 -symabis "$WORK\\b044\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b044\\importcfg" -pack -asmhdr "$WORK\\b044\\go_asm.h" "E:\\go1.23.3\\src\\math\\abs.go" "E:\\go1.23.3\\src\\math\\acosh.go" "E:\\go1.23.3\\src\\math\\asin.go" "E:\\go1.23.3\\src\\math\\asinh.go" "E:\\go1.23.3\\src\\math\\atan.go" "E:\\go1.23.3\\src\\math\\atan2.go" "E:\\go1.23.3\\src\\math\\atanh.go" "E:\\go1.23.3\\src\\math\\bits.go" "E:\\go1.23.3\\src\\math\\cbrt.go" "E:\\go1.23.3\\src\\math\\const.go" "E:\\go1.23.3\\src\\math\\copysign.go" "E:\\go1.23.3\\src\\math\\dim.go" "E:\\go1.23.3\\src\\math\\dim_asm.go" "E:\\go1.23.3\\src\\math\\erf.go" "E:\\go1.23.3\\src\\math\\erfinv.go" "E:\\go1.23.3\\src\\math\\exp.go" "E:\\go1.23.3\\src\\math\\exp2_noasm.go" "E:\\go1.23.3\\src\\math\\exp_amd64.go" "E:\\go1.23.3\\src\\math\\exp_asm.go" "E:\\go1.23.3\\src\\math\\expm1.go" "E:\\go1.23.3\\src\\math\\floor.go" "E:\\go1.23.3\\src\\math\\floor_asm.go" "E:\\go1.23.3\\src\\math\\fma.go" "E:\\go1.23.3\\src\\math\\frexp.go" "E:\\go1.23.3\\src\\math\\gamma.go" "E:\\go1.23.3\\src\\math\\hypot.go" "E:\\go1.23.3\\src\\math\\hypot_asm.go" "E:\\go1.23.3\\src\\math\\j0.go" "E:\\go1.23.3\\src\\math\\j1.go" "E:\\go1.23.3\\src\\math\\jn.go" "E:\\go1.23.3\\src\\math\\ldexp.go" "E:\\go1.23.3\\src\\math\\lgamma.go" "E:\\go1.23.3\\src\\math\\log.go" "E:\\go1.23.3\\src\\math\\log10.go" "E:\\go1.23.3\\src\\math\\log1p.go" "E:\\go1.23.3\\src\\math\\log_asm.go" "E:\\go1.23.3\\src\\math\\logb.go" "E:\\go1.23.3\\src\\math\\mod.go" "E:\\go1.23.3\\src\\math\\modf.go" "E:\\go1.23.3\\src\\math\\modf_noasm.go" "E:\\go1.23.3\\src\\math\\nextafter.go" "E:\\go1.23.3\\src\\math\\pow.go" "E:\\go1.23.3\\src\\math\\pow10.go" "E:\\go1.23.3\\src\\math\\remainder.go" "E:\\go1.23.3\\src\\math\\signbit.go" "E:\\go1.23.3\\src\\math\\sin.go" "E:\\go1.23.3\\src\\math\\sincos.go" "E:\\go1.23.3\\src\\math\\sinh.go" "E:\\go1.23.3\\src\\math\\sqrt.go" "E:\\go1.23.3\\src\\math\\stubs.go" "E:\\go1.23.3\\src\\math\\tan.go" "E:\\go1.23.3\\src\\math\\tanh.go" "E:\\go1.23.3\\src\\math\\trig_reduce.go" "E:\\go1.23.3\\src\\math\\unsafe.go"
+cd E:\go1.23.3\src\math
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p math -trimpath "$WORK\\b044=>" -I "$WORK\\b044\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b044\\dim_amd64.o" "E:\\go1.23.3\\src\\math\\dim_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p math -trimpath "$WORK\\b044=>" -I "$WORK\\b044\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b044\\exp_amd64.o" "E:\\go1.23.3\\src\\math\\exp_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p math -trimpath "$WORK\\b044=>" -I "$WORK\\b044\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b044\\floor_amd64.o" "E:\\go1.23.3\\src\\math\\floor_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p math -trimpath "$WORK\\b044=>" -I "$WORK\\b044\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b044\\hypot_amd64.o" "E:\\go1.23.3\\src\\math\\hypot_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p math -trimpath "$WORK\\b044=>" -I "$WORK\\b044\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b044\\log_amd64.o" "E:\\go1.23.3\\src\\math\\log_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b044\\_pkg_.a" "$WORK\\b044\\dim_amd64.o" "$WORK\\b044\\exp_amd64.o" "$WORK\\b044\\floor_amd64.o" "$WORK\\b044\\hypot_amd64.o" "$WORK\\b044\\log_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b044\\_pkg_.a" # internal
+
+#
+# strconv
+#
+
+mkdir -p $WORK\b046\
+cat >$WORK\b046\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/bytealg=$WORK\b010\_pkg_.a
+packagefile internal/stringslite=$WORK\b021\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b046\\_pkg_.a" -trimpath "$WORK\\b046=>" -p strconv -lang=go1.23 -std -complete -buildid 84sOn3lGVDUcv7IZg8_n/84sOn3lGVDUcv7IZg8_n -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b046\\importcfg" -pack "E:\\go1.23.3\\src\\strconv\\atob.go" "E:\\go1.23.3\\src\\strconv\\atoc.go" "E:\\go1.23.3\\src\\strconv\\atof.go" "E:\\go1.23.3\\src\\strconv\\atoi.go" "E:\\go1.23.3\\src\\strconv\\bytealg.go" "E:\\go1.23.3\\src\\strconv\\ctoa.go" "E:\\go1.23.3\\src\\strconv\\decimal.go" "E:\\go1.23.3\\src\\strconv\\doc.go" "E:\\go1.23.3\\src\\strconv\\eisel_lemire.go" "E:\\go1.23.3\\src\\strconv\\ftoa.go" "E:\\go1.23.3\\src\\strconv\\ftoaryu.go" "E:\\go1.23.3\\src\\strconv\\isprint.go" "E:\\go1.23.3\\src\\strconv\\itoa.go" "E:\\go1.23.3\\src\\strconv\\quote.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b046\\_pkg_.a" # internal
+
+#
+# unicode
+#
+
+mkdir -p $WORK\b047\
+echo '# import config' > $WORK\b047\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b047\\_pkg_.a" -trimpath "$WORK\\b047=>" -p unicode -lang=go1.23 -std -complete -buildid ESx40FbuiLJnXKbv64Fw/ESx40FbuiLJnXKbv64Fw -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b047\\importcfg" -pack "E:\\go1.23.3\\src\\unicode\\casetables.go" "E:\\go1.23.3\\src\\unicode\\digit.go" "E:\\go1.23.3\\src\\unicode\\graphic.go" "E:\\go1.23.3\\src\\unicode\\letter.go" "E:\\go1.23.3\\src\\unicode\\tables.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b047\\_pkg_.a" # internal
+
+#
+# reflect
+#
+
+mkdir -p $WORK\b042\
+echo -n > $WORK\b042\go_asm.h # internal
+cd E:\go1.23.3\src\reflect
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p reflect -trimpath "$WORK\\b042=>" -I "$WORK\\b042\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b042\\symabis" "E:\\go1.23.3\\src\\reflect\\asm_amd64.s"
+cat >$WORK\b042\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/abi=$WORK\b005\_pkg_.a
+packagefile internal/bytealg=$WORK\b010\_pkg_.a
+packagefile internal/goarch=$WORK\b006\_pkg_.a
+packagefile internal/itoa=$WORK\b034\_pkg_.a
+packagefile internal/unsafeheader=$WORK\b008\_pkg_.a
+packagefile iter=$WORK\b043\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b042\\_pkg_.a" -trimpath "$WORK\\b042=>" -p reflect -lang=go1.23 -std -buildid 4RlCumWB-LWWGPGlE8ci/4RlCumWB-LWWGPGlE8ci -goversion go1.23.3 -symabis "$WORK\\b042\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b042\\importcfg" -pack -asmhdr "$WORK\\b042\\go_asm.h" "E:\\go1.23.3\\src\\reflect\\abi.go" "E:\\go1.23.3\\src\\reflect\\badlinkname.go" "E:\\go1.23.3\\src\\reflect\\deepequal.go" "E:\\go1.23.3\\src\\reflect\\float32reg_generic.go" "E:\\go1.23.3\\src\\reflect\\iter.go" "E:\\go1.23.3\\src\\reflect\\makefunc.go" "E:\\go1.23.3\\src\\reflect\\swapper.go" "E:\\go1.23.3\\src\\reflect\\type.go" "E:\\go1.23.3\\src\\reflect\\value.go" "E:\\go1.23.3\\src\\reflect\\visiblefields.go"
+cd E:\go1.23.3\src\reflect
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p reflect -trimpath "$WORK\\b042=>" -I "$WORK\\b042\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b042\\asm_amd64.o" "E:\\go1.23.3\\src\\reflect\\asm_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b042\\_pkg_.a" "$WORK\\b042\\asm_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b042\\_pkg_.a" # internal
+
+#
+# slices
+#
+
+mkdir -p $WORK\b048\
+cat >$WORK\b048\importcfg << 'EOF' # internal
+# import config
+packagefile cmp=$WORK\b041\_pkg_.a
+packagefile iter=$WORK\b043\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b048\\_pkg_.a" -trimpath "$WORK\\b048=>" -p slices -lang=go1.23 -std -complete -buildid fCpiduwMar8MvT_zcesY/fCpiduwMar8MvT_zcesY -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b048\\importcfg" -pack "E:\\go1.23.3\\src\\slices\\iter.go" "E:\\go1.23.3\\src\\slices\\slices.go" "E:\\go1.23.3\\src\\slices\\sort.go" "E:\\go1.23.3\\src\\slices\\zsortanyfunc.go" "E:\\go1.23.3\\src\\slices\\zsortordered.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b048\\_pkg_.a" # internal
+
+#
+# internal/fmtsort
+#
+
+mkdir -p $WORK\b040\
+cat >$WORK\b040\importcfg << 'EOF' # internal
+# import config
+packagefile cmp=$WORK\b041\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b040\\_pkg_.a" -trimpath "$WORK\\b040=>" -p internal/fmtsort -lang=go1.23 -std -complete -buildid -pfsfKgZhgI-eKaDoJnW/-pfsfKgZhgI-eKaDoJnW -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b040\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\fmtsort\\sort.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b040\\_pkg_.a" # internal
+
+#
+# io
+#
+
+mkdir -p $WORK\b049\
+cat >$WORK\b049\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b049\\_pkg_.a" -trimpath "$WORK\\b049=>" -p io -lang=go1.23 -std -complete -buildid X1FQFddJ4wyv6Zu6Zp3d/X1FQFddJ4wyv6Zu6Zp3d -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b049\\importcfg" -pack "E:\\go1.23.3\\src\\io\\io.go" "E:\\go1.23.3\\src\\io\\multi.go" "E:\\go1.23.3\\src\\io\\pipe.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b049\\_pkg_.a" # internal
+
+#
+# path
+#
+
+mkdir -p $WORK\b053\
+cat >$WORK\b053\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/bytealg=$WORK\b010\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b053\\_pkg_.a" -trimpath "$WORK\\b053=>" -p path -lang=go1.23 -std -complete -buildid 6SMOdFIsDzIUXQvmrLbe/6SMOdFIsDzIUXQvmrLbe -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b053\\importcfg" -pack "E:\\go1.23.3\\src\\path\\match.go" "E:\\go1.23.3\\src\\path\\path.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b053\\_pkg_.a" # internal
+
+#
+# io/fs
+#
+
+mkdir -p $WORK\b052\
+cat >$WORK\b052\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/bytealg=$WORK\b010\_pkg_.a
+packagefile internal/oserror=$WORK\b036\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile path=$WORK\b053\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b052\\_pkg_.a" -trimpath "$WORK\\b052=>" -p io/fs -lang=go1.23 -std -complete -buildid y2-MtW3tK0LG8sZlMAZT/y2-MtW3tK0LG8sZlMAZT -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b052\\importcfg" -pack "E:\\go1.23.3\\src\\io\\fs\\format.go" "E:\\go1.23.3\\src\\io\\fs\\fs.go" "E:\\go1.23.3\\src\\io\\fs\\glob.go" "E:\\go1.23.3\\src\\io\\fs\\readdir.go" "E:\\go1.23.3\\src\\io\\fs\\readfile.go" "E:\\go1.23.3\\src\\io\\fs\\stat.go" "E:\\go1.23.3\\src\\io\\fs\\sub.go" "E:\\go1.23.3\\src\\io\\fs\\walk.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b052\\_pkg_.a" # internal
+
+#
+# internal/filepathlite
+#
+
+mkdir -p $WORK\b051\
+cat >$WORK\b051\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/bytealg=$WORK\b010\_pkg_.a
+packagefile internal/stringslite=$WORK\b021\_pkg_.a
+packagefile io/fs=$WORK\b052\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile syscall=$WORK\b032\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b051\\_pkg_.a" -trimpath "$WORK\\b051=>" -p internal/filepathlite -lang=go1.23 -std -complete -buildid FN3pXrQ6IP40WWETQQXG/FN3pXrQ6IP40WWETQQXG -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b051\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\filepathlite\\path.go" "E:\\go1.23.3\\src\\internal\\filepathlite\\path_windows.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b051\\_pkg_.a" # internal
+
+#
+# internal/syscall/windows
+#
+
+mkdir -p $WORK\b055\
+cat >$WORK\b055\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/syscall/windows/sysdll=$WORK\b031\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile syscall=$WORK\b032\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b055\\_pkg_.a" -trimpath "$WORK\\b055=>" -p internal/syscall/windows -lang=go1.23 -std -complete -buildid 1-AjbxzuOWCZsmSSIcAX/1-AjbxzuOWCZsmSSIcAX -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b055\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\syscall\\windows\\memory_windows.go" "E:\\go1.23.3\\src\\internal\\syscall\\windows\\net_windows.go" "E:\\go1.23.3\\src\\internal\\syscall\\windows\\psapi_windows.go" "E:\\go1.23.3\\src\\internal\\syscall\\windows\\reparse_windows.go" "E:\\go1.23.3\\src\\internal\\syscall\\windows\\security_windows.go" "E:\\go1.23.3\\src\\internal\\syscall\\windows\\symlink_windows.go" "E:\\go1.23.3\\src\\internal\\syscall\\windows\\syscall_windows.go" "E:\\go1.23.3\\src\\internal\\syscall\\windows\\types_windows.go" "E:\\go1.23.3\\src\\internal\\syscall\\windows\\version_windows.go" "E:\\go1.23.3\\src\\internal\\syscall\\windows\\zsyscall_windows.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b055\\_pkg_.a" # internal
+
+#
+# internal/poll
+#
+
+mkdir -p $WORK\b054\
+cat >$WORK\b054\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/race=$WORK\b025\_pkg_.a
+packagefile internal/syscall/windows=$WORK\b055\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile syscall=$WORK\b032\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+packagefile unicode/utf16=$WORK\b037\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b054\\_pkg_.a" -trimpath "$WORK\\b054=>" -p internal/poll -lang=go1.23 -std -buildid xrKWmX92p8_k6kcyBczs/xrKWmX92p8_k6kcyBczs -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b054\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\poll\\errno_windows.go" "E:\\go1.23.3\\src\\internal\\poll\\fd.go" "E:\\go1.23.3\\src\\internal\\poll\\fd_fsync_windows.go" "E:\\go1.23.3\\src\\internal\\poll\\fd_mutex.go" "E:\\go1.23.3\\src\\internal\\poll\\fd_poll_runtime.go" "E:\\go1.23.3\\src\\internal\\poll\\fd_posix.go" "E:\\go1.23.3\\src\\internal\\poll\\fd_windows.go" "E:\\go1.23.3\\src\\internal\\poll\\hook_windows.go" "E:\\go1.23.3\\src\\internal\\poll\\sendfile.go" "E:\\go1.23.3\\src\\internal\\poll\\sendfile_windows.go" "E:\\go1.23.3\\src\\internal\\poll\\sockopt.go" "E:\\go1.23.3\\src\\internal\\poll\\sockopt_windows.go" "E:\\go1.23.3\\src\\internal\\poll\\sockoptip.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b054\\_pkg_.a" # internal
+
+#
+# internal/syscall/execenv
+#
+
+mkdir -p $WORK\b056\
+cat >$WORK\b056\importcfg << 'EOF' # internal
+# import config
+packagefile internal/syscall/windows=$WORK\b055\_pkg_.a
+packagefile syscall=$WORK\b032\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b056\\_pkg_.a" -trimpath "$WORK\\b056=>" -p internal/syscall/execenv -lang=go1.23 -std -complete -buildid AYsgm3Tk-j1rP3whp77c/AYsgm3Tk-j1rP3whp77c -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b056\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\syscall\\execenv\\execenv_windows.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b056\\_pkg_.a" # internal
+
+#
+# internal/testlog
+#
+
+mkdir -p $WORK\b057\
+cat >$WORK\b057\importcfg << 'EOF' # internal
+# import config
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b057\\_pkg_.a" -trimpath "$WORK\\b057=>" -p internal/testlog -lang=go1.23 -std -complete -buildid x8t_UXsR3dHP4a6IjuJN/x8t_UXsR3dHP4a6IjuJN -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b057\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\testlog\\exit.go" "E:\\go1.23.3\\src\\internal\\testlog\\log.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b057\\_pkg_.a" # internal
+
+#
+# os
+#
+
+mkdir -p $WORK\b050\
+cat >$WORK\b050\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/bytealg=$WORK\b010\_pkg_.a
+packagefile internal/filepathlite=$WORK\b051\_pkg_.a
+packagefile internal/godebug=$WORK\b028\_pkg_.a
+packagefile internal/itoa=$WORK\b034\_pkg_.a
+packagefile internal/poll=$WORK\b054\_pkg_.a
+packagefile internal/syscall/execenv=$WORK\b056\_pkg_.a
+packagefile internal/syscall/windows=$WORK\b055\_pkg_.a
+packagefile internal/testlog=$WORK\b057\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile io/fs=$WORK\b052\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile syscall=$WORK\b032\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b050\\_pkg_.a" -trimpath "$WORK\\b050=>" -p os -lang=go1.23 -std -buildid iHdsNwDYfQ2FJpQa61r3/iHdsNwDYfQ2FJpQa61r3 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b050\\importcfg" -pack "E:\\go1.23.3\\src\\os\\dir.go" "E:\\go1.23.3\\src\\os\\dir_windows.go" "E:\\go1.23.3\\src\\os\\env.go" "E:\\go1.23.3\\src\\os\\error.go" "E:\\go1.23.3\\src\\os\\error_errno.go" "E:\\go1.23.3\\src\\os\\exec.go" "E:\\go1.23.3\\src\\os\\exec_posix.go" "E:\\go1.23.3\\src\\os\\exec_windows.go" "E:\\go1.23.3\\src\\os\\executable.go" "E:\\go1.23.3\\src\\os\\executable_windows.go" "E:\\go1.23.3\\src\\os\\file.go" "E:\\go1.23.3\\src\\os\\file_posix.go" "E:\\go1.23.3\\src\\os\\file_windows.go" "E:\\go1.23.3\\src\\os\\getwd.go" "E:\\go1.23.3\\src\\os\\path.go" "E:\\go1.23.3\\src\\os\\path_windows.go" "E:\\go1.23.3\\src\\os\\pidfd_other.go" "E:\\go1.23.3\\src\\os\\proc.go" "E:\\go1.23.3\\src\\os\\rawconn.go" "E:\\go1.23.3\\src\\os\\removeall_noat.go" "E:\\go1.23.3\\src\\os\\stat.go" "E:\\go1.23.3\\src\\os\\stat_windows.go" "E:\\go1.23.3\\src\\os\\sticky_notbsd.go" "E:\\go1.23.3\\src\\os\\sys.go" "E:\\go1.23.3\\src\\os\\sys_windows.go" "E:\\go1.23.3\\src\\os\\tempfile.go" "E:\\go1.23.3\\src\\os\\types.go" "E:\\go1.23.3\\src\\os\\types_windows.go" "E:\\go1.23.3\\src\\os\\zero_copy_stub.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b050\\_pkg_.a" # internal
+
+#
+# fmt
+#
+
+mkdir -p $WORK\b039\
+cat >$WORK\b039\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/fmtsort=$WORK\b040\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b039\\_pkg_.a" -trimpath "$WORK\\b039=>" -p fmt -lang=go1.23 -std -complete -buildid ndxHwLvYtnZoju3Bjcsm/ndxHwLvYtnZoju3Bjcsm -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b039\\importcfg" -pack "E:\\go1.23.3\\src\\fmt\\doc.go" "E:\\go1.23.3\\src\\fmt\\errors.go" "E:\\go1.23.3\\src\\fmt\\format.go" "E:\\go1.23.3\\src\\fmt\\print.go" "E:\\go1.23.3\\src\\fmt\\scan.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b039\\_pkg_.a" # internal
+
+#
+# bytes
+#
+
+mkdir -p $WORK\b061\
+cat >$WORK\b061\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/bytealg=$WORK\b010\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b061\\_pkg_.a" -trimpath "$WORK\\b061=>" -p bytes -lang=go1.23 -std -buildid Q1wSLSzbjyMvMOurp3vq/Q1wSLSzbjyMvMOurp3vq -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b061\\importcfg" -pack "E:\\go1.23.3\\src\\bytes\\buffer.go" "E:\\go1.23.3\\src\\bytes\\bytes.go" "E:\\go1.23.3\\src\\bytes\\reader.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b061\\_pkg_.a" # internal
+
+#
+# encoding
+#
+
+mkdir -p $WORK\b062\
+echo '# import config' > $WORK\b062\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b062\\_pkg_.a" -trimpath "$WORK\\b062=>" -p encoding -lang=go1.23 -std -complete -buildid _ERM0k1ideeY2-FfdjHW/_ERM0k1ideeY2-FfdjHW -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b062\\importcfg" -pack "E:\\go1.23.3\\src\\encoding\\encoding.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b062\\_pkg_.a" # internal
+
+#
+# encoding/binary
+#
+
+mkdir -p $WORK\b065\
+cat >$WORK\b065\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b065\\_pkg_.a" -trimpath "$WORK\\b065=>" -p encoding/binary -lang=go1.23 -std -complete -buildid ptRhfmJQP_tacgTAI1gM/ptRhfmJQP_tacgTAI1gM -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b065\\importcfg" -pack "E:\\go1.23.3\\src\\encoding\\binary\\binary.go" "E:\\go1.23.3\\src\\encoding\\binary\\native_endian_little.go" "E:\\go1.23.3\\src\\encoding\\binary\\varint.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b065\\_pkg_.a" # internal
+
+#
+# encoding/base64
+#
+
+mkdir -p $WORK\b064\
+cat >$WORK\b064\importcfg << 'EOF' # internal
+# import config
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b064\\_pkg_.a" -trimpath "$WORK\\b064=>" -p encoding/base64 -lang=go1.23 -std -complete -buildid 7PQmITgJaohCNjyZobc0/7PQmITgJaohCNjyZobc0 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b064\\importcfg" -pack "E:\\go1.23.3\\src\\encoding\\base64\\base64.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b064\\_pkg_.a" # internal
+
+#
+# strings
+#
+
+mkdir -p $WORK\b066\
+cat >$WORK\b066\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/abi=$WORK\b005\_pkg_.a
+packagefile internal/bytealg=$WORK\b010\_pkg_.a
+packagefile internal/stringslite=$WORK\b021\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b066\\_pkg_.a" -trimpath "$WORK\\b066=>" -p strings -lang=go1.23 -std -complete -buildid eXH-j6VqXtekictm5dHW/eXH-j6VqXtekictm5dHW -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b066\\importcfg" -pack "E:\\go1.23.3\\src\\strings\\builder.go" "E:\\go1.23.3\\src\\strings\\clone.go" "E:\\go1.23.3\\src\\strings\\compare.go" "E:\\go1.23.3\\src\\strings\\reader.go" "E:\\go1.23.3\\src\\strings\\replace.go" "E:\\go1.23.3\\src\\strings\\search.go" "E:\\go1.23.3\\src\\strings\\strings.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b066\\_pkg_.a" # internal
+
+#
+# encoding/json
+#
+
+mkdir -p $WORK\b063\
+cat >$WORK\b063\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile cmp=$WORK\b041\_pkg_.a
+packagefile encoding=$WORK\b062\_pkg_.a
+packagefile encoding/base64=$WORK\b064\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+packagefile unicode/utf16=$WORK\b037\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b063\\_pkg_.a" -trimpath "$WORK\\b063=>" -p encoding/json -lang=go1.23 -std -complete -buildid ylDHZgaL6WCXZqwp_Mrt/ylDHZgaL6WCXZqwp_Mrt -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b063\\importcfg" -pack "E:\\go1.23.3\\src\\encoding\\json\\decode.go" "E:\\go1.23.3\\src\\encoding\\json\\encode.go" "E:\\go1.23.3\\src\\encoding\\json\\fold.go" "E:\\go1.23.3\\src\\encoding\\json\\indent.go" "E:\\go1.23.3\\src\\encoding\\json\\scanner.go" "E:\\go1.23.3\\src\\encoding\\json\\stream.go" "E:\\go1.23.3\\src\\encoding\\json\\tables.go" "E:\\go1.23.3\\src\\encoding\\json\\tags.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b063\\_pkg_.a" # internal
+
+#
+# log/internal
+#
+
+mkdir -p $WORK\b068\
+echo '# import config' > $WORK\b068\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b068\\_pkg_.a" -trimpath "$WORK\\b068=>" -p log/internal -lang=go1.23 -std -complete -buildid VOSC_-DbYBs-1ZAsoPMU/VOSC_-DbYBs-1ZAsoPMU -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b068\\importcfg" -pack "E:\\go1.23.3\\src\\log\\internal\\internal.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b068\\_pkg_.a" # internal
+
+#
+# log
+#
+
+mkdir -p $WORK\b067\
+cat >$WORK\b067\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile log/internal=$WORK\b068\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b067\\_pkg_.a" -trimpath "$WORK\\b067=>" -p log -lang=go1.23 -std -complete -buildid B6jOSSbsGj99yyjjyJmy/B6jOSSbsGj99yyjjyJmy -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b067\\importcfg" -pack "E:\\go1.23.3\\src\\log\\log.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b067\\_pkg_.a" # internal
+
+#
+# log/slog/internal
+#
+
+mkdir -p $WORK\b069\
+echo '# import config' > $WORK\b069\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b069\\_pkg_.a" -trimpath "$WORK\\b069=>" -p log/slog/internal -lang=go1.23 -std -complete -buildid rqoUNPk5DgQdAWnlmZoB/rqoUNPk5DgQdAWnlmZoB -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b069\\importcfg" -pack "E:\\go1.23.3\\src\\log\\slog\\internal\\ignorepc.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b069\\_pkg_.a" # internal
+
+#
+# log/slog/internal/buffer
+#
+
+mkdir -p $WORK\b070\
+cat >$WORK\b070\importcfg << 'EOF' # internal
+# import config
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b070\\_pkg_.a" -trimpath "$WORK\\b070=>" -p log/slog/internal/buffer -lang=go1.23 -std -complete -buildid WSjPx2q0q0cBNVXc_Iwq/WSjPx2q0q0cBNVXc_Iwq -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b070\\importcfg" -pack "E:\\go1.23.3\\src\\log\\slog\\internal\\buffer\\buffer.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b070\\_pkg_.a" # internal
+
+#
+# log/slog
+#
+
+mkdir -p $WORK\b060\
+cat >$WORK\b060\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile context=$WORK\b002\_pkg_.a
+packagefile encoding=$WORK\b062\_pkg_.a
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile log=$WORK\b067\_pkg_.a
+packagefile log/internal=$WORK\b068\_pkg_.a
+packagefile log/slog/internal=$WORK\b069\_pkg_.a
+packagefile log/slog/internal/buffer=$WORK\b070\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b060\\_pkg_.a" -trimpath "$WORK\\b060=>" -p log/slog -lang=go1.23 -std -complete -buildid Ty7spdaFknbXlAzSq6pR/Ty7spdaFknbXlAzSq6pR -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b060\\importcfg" -pack "E:\\go1.23.3\\src\\log\\slog\\attr.go" "E:\\go1.23.3\\src\\log\\slog\\doc.go" "E:\\go1.23.3\\src\\log\\slog\\handler.go" "E:\\go1.23.3\\src\\log\\slog\\json_handler.go" "E:\\go1.23.3\\src\\log\\slog\\level.go" "E:\\go1.23.3\\src\\log\\slog\\logger.go" "E:\\go1.23.3\\src\\log\\slog\\record.go" "E:\\go1.23.3\\src\\log\\slog\\text_handler.go" "E:\\go1.23.3\\src\\log\\slog\\value.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b060\\_pkg_.a" # internal
+
+#
+# github.com/go-logr/logr
+#
+
+mkdir -p $WORK\b059\
+cat >$WORK\b059\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile log/slog=$WORK\b060\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b059\\_pkg_.a" -trimpath "$WORK\\b059=>" -p github.com/go-logr/logr -lang=go1.18 -complete -buildid qWMuzcLaOTTKwQVuri5C/qWMuzcLaOTTKwQVuri5C -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b059\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\go-logr\\logr@v1.4.2\\context.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\go-logr\\logr@v1.4.2\\context_slog.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\go-logr\\logr@v1.4.2\\discard.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\go-logr\\logr@v1.4.2\\logr.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\go-logr\\logr@v1.4.2\\sloghandler.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\go-logr\\logr@v1.4.2\\slogr.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\go-logr\\logr@v1.4.2\\slogsink.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b059\\_pkg_.a" # internal
+
+#
+# container/list
+#
+
+mkdir -p $WORK\b072\
+echo '# import config' > $WORK\b072\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b072\\_pkg_.a" -trimpath "$WORK\\b072=>" -p container/list -lang=go1.23 -std -complete -buildid A6bbnszg-mLg2Xm7irX-/A6bbnszg-mLg2Xm7irX- -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b072\\importcfg" -pack "E:\\go1.23.3\\src\\container\\list\\list.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b072\\_pkg_.a" # internal
+
+#
+# path/filepath
+#
+
+mkdir -p $WORK\b075\
+cat >$WORK\b075\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/bytealg=$WORK\b010\_pkg_.a
+packagefile internal/filepathlite=$WORK\b051\_pkg_.a
+packagefile io/fs=$WORK\b052\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile syscall=$WORK\b032\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b075\\_pkg_.a" -trimpath "$WORK\\b075=>" -p path/filepath -lang=go1.23 -std -complete -buildid bnigR9o3QAu3Oi6R3V94/bnigR9o3QAu3Oi6R3V94 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b075\\importcfg" -pack "E:\\go1.23.3\\src\\path\\filepath\\match.go" "E:\\go1.23.3\\src\\path\\filepath\\path.go" "E:\\go1.23.3\\src\\path\\filepath\\path_windows.go" "E:\\go1.23.3\\src\\path\\filepath\\symlink.go" "E:\\go1.23.3\\src\\path\\filepath\\symlink_windows.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b075\\_pkg_.a" # internal
+
+#
+# github.com/go-logr/logr/funcr
+#
+
+mkdir -p $WORK\b074\
+cat >$WORK\b074\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile context=$WORK\b002\_pkg_.a
+packagefile encoding=$WORK\b062\_pkg_.a
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile github.com/go-logr/logr=$WORK\b059\_pkg_.a
+packagefile log/slog=$WORK\b060\_pkg_.a
+packagefile path/filepath=$WORK\b075\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b074\\_pkg_.a" -trimpath "$WORK\\b074=>" -p github.com/go-logr/logr/funcr -lang=go1.18 -complete -buildid kDuQjXxkRJMSLsqrWCCx/kDuQjXxkRJMSLsqrWCCx -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b074\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\go-logr\\logr@v1.4.2\\funcr\\funcr.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\go-logr\\logr@v1.4.2\\funcr\\slogsink.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b074\\_pkg_.a" # internal
+
+#
+# github.com/go-logr/stdr
+#
+
+mkdir -p $WORK\b073\
+cat >$WORK\b073\importcfg << 'EOF' # internal
+# import config
+packagefile github.com/go-logr/logr=$WORK\b059\_pkg_.a
+packagefile github.com/go-logr/logr/funcr=$WORK\b074\_pkg_.a
+packagefile log=$WORK\b067\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b073\\_pkg_.a" -trimpath "$WORK\\b073=>" -p github.com/go-logr/stdr -lang=go1.16 -complete -buildid cm0gAo2Uei9MvpYqTEDb/cm0gAo2Uei9MvpYqTEDb -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b073\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\go-logr\\stdr@v1.2.2\\stdr.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b073\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/internal
+#
+
+mkdir -p $WORK\b077\
+cat >$WORK\b077\importcfg << 'EOF' # internal
+# import config
+packagefile math=$WORK\b044\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b077\\_pkg_.a" -trimpath "$WORK\\b077=>" -p go.opentelemetry.io/otel/internal -lang=go1.22 -complete -buildid NTca0AK4Jd4SsjifETS8/NTca0AK4Jd4SsjifETS8 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b077\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\internal\\gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\internal\\rawhelpers.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b077\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/internal/attribute
+#
+
+mkdir -p $WORK\b078\
+cat >$WORK\b078\importcfg << 'EOF' # internal
+# import config
+packagefile reflect=$WORK\b042\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b078\\_pkg_.a" -trimpath "$WORK\\b078=>" -p go.opentelemetry.io/otel/internal/attribute -lang=go1.22 -complete -buildid BJihbb2nz2CxapNBNt55/BJihbb2nz2CxapNBNt55 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b078\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\internal\\attribute\\attribute.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b078\\_pkg_.a" # internal
+
+#
+# sort
+#
+
+mkdir -p $WORK\b079\
+cat >$WORK\b079\importcfg << 'EOF' # internal
+# import config
+packagefile internal/reflectlite=$WORK\b004\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b079\\_pkg_.a" -trimpath "$WORK\\b079=>" -p sort -lang=go1.23 -std -complete -buildid zxFfIjcB9yjwJ2ZNyxWc/zxFfIjcB9yjwJ2ZNyxWc -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b079\\importcfg" -pack "E:\\go1.23.3\\src\\sort\\search.go" "E:\\go1.23.3\\src\\sort\\slice.go" "E:\\go1.23.3\\src\\sort\\sort.go" "E:\\go1.23.3\\src\\sort\\sort_impl_go121.go" "E:\\go1.23.3\\src\\sort\\zsortfunc.go" "E:\\go1.23.3\\src\\sort\\zsortinterface.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b079\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/attribute
+#
+
+mkdir -p $WORK\b076\
+cat >$WORK\b076\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile cmp=$WORK\b041\_pkg_.a
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal=$WORK\b077\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal/attribute=$WORK\b078\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b076\\_pkg_.a" -trimpath "$WORK\\b076=>" -p go.opentelemetry.io/otel/attribute -lang=go1.22 -complete -buildid jG2nwjXAcOBL2cdq1gCE/jG2nwjXAcOBL2cdq1gCE -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b076\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\attribute\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\attribute\\encoder.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\attribute\\filter.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\attribute\\iterator.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\attribute\\key.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\attribute\\kv.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\attribute\\set.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\attribute\\type_string.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\attribute\\value.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b076\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/codes
+#
+
+mkdir -p $WORK\b080\
+cat >$WORK\b080\importcfg << 'EOF' # internal
+# import config
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b080\\_pkg_.a" -trimpath "$WORK\\b080=>" -p go.opentelemetry.io/otel/codes -lang=go1.22 -complete -buildid Hm8_c_eRD85fGzpm49Ef/Hm8_c_eRD85fGzpm49Ef -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b080\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\codes\\codes.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\codes\\doc.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b080\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/metric/embedded
+#
+
+mkdir -p $WORK\b082\
+echo '# import config' > $WORK\b082\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b082\\_pkg_.a" -trimpath "$WORK\\b082=>" -p go.opentelemetry.io/otel/metric/embedded -lang=go1.22 -complete -buildid Ea8jaA7O9I8Wd7bwc-GN/Ea8jaA7O9I8Wd7bwc-GN -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b082\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\metric@v1.32.0\\embedded\\embedded.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b082\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/metric
+#
+
+mkdir -p $WORK\b081\
+cat >$WORK\b081\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile go.opentelemetry.io/otel/attribute=$WORK\b076\_pkg_.a
+packagefile go.opentelemetry.io/otel/metric/embedded=$WORK\b082\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b081\\_pkg_.a" -trimpath "$WORK\\b081=>" -p go.opentelemetry.io/otel/metric -lang=go1.22 -complete -buildid _KvvawAv3l62cAs1PVAd/_KvvawAv3l62cAs1PVAd -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b081\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\metric@v1.32.0\\asyncfloat64.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\metric@v1.32.0\\asyncint64.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\metric@v1.32.0\\config.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\metric@v1.32.0\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\metric@v1.32.0\\instrument.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\metric@v1.32.0\\meter.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\metric@v1.32.0\\syncfloat64.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\metric@v1.32.0\\syncint64.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b081\\_pkg_.a" # internal
+
+#
+# encoding/hex
+#
+
+mkdir -p $WORK\b084\
+cat >$WORK\b084\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b084\\_pkg_.a" -trimpath "$WORK\\b084=>" -p encoding/hex -lang=go1.23 -std -complete -buildid pDLxrdvOush7bs0JIYb2/pDLxrdvOush7bs0JIYb2 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b084\\importcfg" -pack "E:\\go1.23.3\\src\\encoding\\hex\\hex.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b084\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/internal/baggage
+#
+
+mkdir -p $WORK\b086\
+cat >$WORK\b086\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b086\\_pkg_.a" -trimpath "$WORK\\b086=>" -p go.opentelemetry.io/otel/internal/baggage -lang=go1.22 -complete -buildid 0XkBgzY5281iXO4r3wzm/0XkBgzY5281iXO4r3wzm -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b086\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\internal\\baggage\\baggage.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\internal\\baggage\\context.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b086\\_pkg_.a" # internal
+
+#
+# net/url
+#
+
+mkdir -p $WORK\b087\
+cat >$WORK\b087\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile path=$WORK\b053\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b087\\_pkg_.a" -trimpath "$WORK\\b087=>" -p net/url -lang=go1.23 -std -complete -buildid 4RWkxzcAlz2fMo8Blnpu/4RWkxzcAlz2fMo8Blnpu -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b087\\importcfg" -pack "E:\\go1.23.3\\src\\net\\url\\url.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b087\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/baggage
+#
+
+mkdir -p $WORK\b085\
+cat >$WORK\b085\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal/baggage=$WORK\b086\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b085\\_pkg_.a" -trimpath "$WORK\\b085=>" -p go.opentelemetry.io/otel/baggage -lang=go1.22 -complete -buildid rhS66G4_--Zclk5Shilp/rhS66G4_--Zclk5Shilp -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b085\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\baggage\\baggage.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\baggage\\context.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\baggage\\doc.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b085\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/trace/embedded
+#
+
+mkdir -p $WORK\b089\
+echo '# import config' > $WORK\b089\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b089\\_pkg_.a" -trimpath "$WORK\\b089=>" -p go.opentelemetry.io/otel/trace/embedded -lang=go1.22 -complete -buildid V45Fc1_8fDWwS_lTvgUT/V45Fc1_8fDWwS_lTvgUT -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b089\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\trace@v1.32.0\\embedded\\embedded.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b089\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/trace
+#
+
+mkdir -p $WORK\b088\
+cat >$WORK\b088\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile context=$WORK\b002\_pkg_.a
+packagefile encoding/hex=$WORK\b084\_pkg_.a
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel/attribute=$WORK\b076\_pkg_.a
+packagefile go.opentelemetry.io/otel/codes=$WORK\b080\_pkg_.a
+packagefile go.opentelemetry.io/otel/trace/embedded=$WORK\b089\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b088\\_pkg_.a" -trimpath "$WORK\\b088=>" -p go.opentelemetry.io/otel/trace -lang=go1.22 -complete -buildid IZBFj1Wr5liuq_uyHNxR/IZBFj1Wr5liuq_uyHNxR -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b088\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\trace@v1.32.0\\config.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\trace@v1.32.0\\context.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\trace@v1.32.0\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\trace@v1.32.0\\nonrecording.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\trace@v1.32.0\\noop.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\trace@v1.32.0\\provider.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\trace@v1.32.0\\span.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\trace@v1.32.0\\trace.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\trace@v1.32.0\\tracer.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\trace@v1.32.0\\tracestate.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b088\\_pkg_.a" # internal
+
+#
+# bufio
+#
+
+mkdir -p $WORK\b091\
+cat >$WORK\b091\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b091\\_pkg_.a" -trimpath "$WORK\\b091=>" -p bufio -lang=go1.23 -std -complete -buildid a05vPqqCk5Kyo9h2dWn4/a05vPqqCk5Kyo9h2dWn4 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b091\\importcfg" -pack "E:\\go1.23.3\\src\\bufio\\bufio.go" "E:\\go1.23.3\\src\\bufio\\scan.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b091\\_pkg_.a" # internal
+
+#
+# compress/flate
+#
+
+mkdir -p $WORK\b093\
+cat >$WORK\b093\importcfg << 'EOF' # internal
+# import config
+packagefile bufio=$WORK\b091\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b093\\_pkg_.a" -trimpath "$WORK\\b093=>" -p compress/flate -lang=go1.23 -std -complete -buildid GWpBr4d_DIwE1V3MPr_L/GWpBr4d_DIwE1V3MPr_L -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b093\\importcfg" -pack "E:\\go1.23.3\\src\\compress\\flate\\deflate.go" "E:\\go1.23.3\\src\\compress\\flate\\deflatefast.go" "E:\\go1.23.3\\src\\compress\\flate\\dict_decoder.go" "E:\\go1.23.3\\src\\compress\\flate\\huffman_bit_writer.go" "E:\\go1.23.3\\src\\compress\\flate\\huffman_code.go" "E:\\go1.23.3\\src\\compress\\flate\\inflate.go" "E:\\go1.23.3\\src\\compress\\flate\\token.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b093\\_pkg_.a" # internal
+
+#
+# hash
+#
+
+mkdir -p $WORK\b095\
+cat >$WORK\b095\importcfg << 'EOF' # internal
+# import config
+packagefile io=$WORK\b049\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b095\\_pkg_.a" -trimpath "$WORK\\b095=>" -p hash -lang=go1.23 -std -complete -buildid Ee0vJ40GxXM3o1VJitj1/Ee0vJ40GxXM3o1VJitj1 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b095\\importcfg" -pack "E:\\go1.23.3\\src\\hash\\hash.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b095\\_pkg_.a" # internal
+
+#
+# hash/crc32
+#
+
+mkdir -p $WORK\b094\
+echo -n > $WORK\b094\go_asm.h # internal
+cd E:\go1.23.3\src\hash\crc32
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p hash/crc32 -trimpath "$WORK\\b094=>" -I "$WORK\\b094\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b094\\symabis" "E:\\go1.23.3\\src\\hash\\crc32\\crc32_amd64.s"
+cat >$WORK\b094\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile hash=$WORK\b095\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile internal/cpu=$WORK\b011\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b094\\_pkg_.a" -trimpath "$WORK\\b094=>" -p hash/crc32 -lang=go1.23 -std -buildid o2mdtZ3JltdgdUtWqe0k/o2mdtZ3JltdgdUtWqe0k -goversion go1.23.3 -symabis "$WORK\\b094\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b094\\importcfg" -pack -asmhdr "$WORK\\b094\\go_asm.h" "E:\\go1.23.3\\src\\hash\\crc32\\crc32.go" "E:\\go1.23.3\\src\\hash\\crc32\\crc32_amd64.go" "E:\\go1.23.3\\src\\hash\\crc32\\crc32_generic.go" "E:\\go1.23.3\\src\\hash\\crc32\\gen.go"
+cd E:\go1.23.3\src\hash\crc32
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p hash/crc32 -trimpath "$WORK\\b094=>" -I "$WORK\\b094\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b094\\crc32_amd64.o" "E:\\go1.23.3\\src\\hash\\crc32\\crc32_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b094\\_pkg_.a" "$WORK\\b094\\crc32_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b094\\_pkg_.a" # internal
+
+#
+# compress/gzip
+#
+
+mkdir -p $WORK\b092\
+cat >$WORK\b092\importcfg << 'EOF' # internal
+# import config
+packagefile bufio=$WORK\b091\_pkg_.a
+packagefile compress/flate=$WORK\b093\_pkg_.a
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile hash/crc32=$WORK\b094\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b092\\_pkg_.a" -trimpath "$WORK\\b092=>" -p compress/gzip -lang=go1.23 -std -complete -buildid A5B1qE4UmYPylK19sfQe/A5B1qE4UmYPylK19sfQe -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b092\\importcfg" -pack "E:\\go1.23.3\\src\\compress\\gzip\\gunzip.go" "E:\\go1.23.3\\src\\compress\\gzip\\gzip.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b092\\_pkg_.a" # internal
+
+#
+# crypto/internal/randutil
+#
+
+mkdir -p $WORK\b097\
+cat >$WORK\b097\importcfg << 'EOF' # internal
+# import config
+packagefile io=$WORK\b049\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b097\\_pkg_.a" -trimpath "$WORK\\b097=>" -p crypto/internal/randutil -lang=go1.23 -std -complete -buildid OU95FhcMDsITDxlV3m0U/OU95FhcMDsITDxlV3m0U -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b097\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\internal\\randutil\\randutil.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b097\\_pkg_.a" # internal
+
+#
+# math/rand
+#
+
+mkdir -p $WORK\b099\
+cat >$WORK\b099\importcfg << 'EOF' # internal
+# import config
+packagefile internal/godebug=$WORK\b028\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b099\\_pkg_.a" -trimpath "$WORK\\b099=>" -p math/rand -lang=go1.23 -std -complete -buildid nTtqO01jQaLRXPILeXJA/nTtqO01jQaLRXPILeXJA -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b099\\importcfg" -pack "E:\\go1.23.3\\src\\math\\rand\\exp.go" "E:\\go1.23.3\\src\\math\\rand\\normal.go" "E:\\go1.23.3\\src\\math\\rand\\rand.go" "E:\\go1.23.3\\src\\math\\rand\\rng.go" "E:\\go1.23.3\\src\\math\\rand\\zipf.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b099\\_pkg_.a" # internal
+
+#
+# math/big
+#
+
+mkdir -p $WORK\b098\
+echo -n > $WORK\b098\go_asm.h # internal
+cd E:\go1.23.3\src\math\big
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p math/big -trimpath "$WORK\\b098=>" -I "$WORK\\b098\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b098\\symabis" "E:\\go1.23.3\\src\\math\\big\\arith_amd64.s"
+cat >$WORK\b098\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile internal/cpu=$WORK\b011\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+packagefile math/rand=$WORK\b099\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b098\\_pkg_.a" -trimpath "$WORK\\b098=>" -p math/big -lang=go1.23 -std -buildid VaTEmGpY7dMmSb3uIrTF/VaTEmGpY7dMmSb3uIrTF -goversion go1.23.3 -symabis "$WORK\\b098\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b098\\importcfg" -pack -asmhdr "$WORK\\b098\\go_asm.h" "E:\\go1.23.3\\src\\math\\big\\accuracy_string.go" "E:\\go1.23.3\\src\\math\\big\\arith.go" "E:\\go1.23.3\\src\\math\\big\\arith_amd64.go" "E:\\go1.23.3\\src\\math\\big\\arith_decl.go" "E:\\go1.23.3\\src\\math\\big\\decimal.go" "E:\\go1.23.3\\src\\math\\big\\doc.go" "E:\\go1.23.3\\src\\math\\big\\float.go" "E:\\go1.23.3\\src\\math\\big\\floatconv.go" "E:\\go1.23.3\\src\\math\\big\\floatmarsh.go" "E:\\go1.23.3\\src\\math\\big\\ftoa.go" "E:\\go1.23.3\\src\\math\\big\\int.go" "E:\\go1.23.3\\src\\math\\big\\intconv.go" "E:\\go1.23.3\\src\\math\\big\\intmarsh.go" "E:\\go1.23.3\\src\\math\\big\\nat.go" "E:\\go1.23.3\\src\\math\\big\\natconv.go" "E:\\go1.23.3\\src\\math\\big\\natdiv.go" "E:\\go1.23.3\\src\\math\\big\\prime.go" "E:\\go1.23.3\\src\\math\\big\\rat.go" "E:\\go1.23.3\\src\\math\\big\\ratconv.go" "E:\\go1.23.3\\src\\math\\big\\ratmarsh.go" "E:\\go1.23.3\\src\\math\\big\\roundingmode_string.go" "E:\\go1.23.3\\src\\math\\big\\sqrt.go"
+cd E:\go1.23.3\src\math\big
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p math/big -trimpath "$WORK\\b098=>" -I "$WORK\\b098\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b098\\arith_amd64.o" "E:\\go1.23.3\\src\\math\\big\\arith_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b098\\_pkg_.a" "$WORK\\b098\\arith_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b098\\_pkg_.a" # internal
+
+#
+# crypto/rand
+#
+
+mkdir -p $WORK\b096\
+cat >$WORK\b096\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/internal/randutil=$WORK\b097\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/syscall/windows=$WORK\b055\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math/big=$WORK\b098\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b096\\_pkg_.a" -trimpath "$WORK\\b096=>" -p crypto/rand -lang=go1.23 -std -complete -buildid BhyaNsBfu1hZtkRv_X5X/BhyaNsBfu1hZtkRv_X5X -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b096\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\rand\\rand.go" "E:\\go1.23.3\\src\\crypto\\rand\\rand_windows.go" "E:\\go1.23.3\\src\\crypto\\rand\\util.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b096\\_pkg_.a" # internal
+
+#
+# crypto
+#
+
+mkdir -p $WORK\b101\
+cat >$WORK\b101\importcfg << 'EOF' # internal
+# import config
+packagefile hash=$WORK\b095\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b101\\_pkg_.a" -trimpath "$WORK\\b101=>" -p crypto -lang=go1.23 -std -complete -buildid YRwSC3sQUrhMtYvcjRsp/YRwSC3sQUrhMtYvcjRsp -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b101\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\crypto.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b101\\_pkg_.a" # internal
+
+#
+# crypto/internal/alias
+#
+
+mkdir -p $WORK\b104\
+echo '# import config' > $WORK\b104\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b104\\_pkg_.a" -trimpath "$WORK\\b104=>" -p crypto/internal/alias -lang=go1.23 -std -complete -buildid 7DkBXXT1WN8C5bgJO1Uf/7DkBXXT1WN8C5bgJO1Uf -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b104\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\internal\\alias\\alias.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b104\\_pkg_.a" # internal
+
+#
+# crypto/subtle
+#
+
+mkdir -p $WORK\b105\
+echo -n > $WORK\b105\go_asm.h # internal
+cd E:\go1.23.3\src\crypto\subtle
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/subtle -trimpath "$WORK\\b105=>" -I "$WORK\\b105\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b105\\symabis" "E:\\go1.23.3\\src\\crypto\\subtle\\xor_amd64.s"
+echo '# import config' > $WORK\b105\importcfg # internal
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b105\\_pkg_.a" -trimpath "$WORK\\b105=>" -p crypto/subtle -lang=go1.23 -std -buildid cMbIuXrVloRv4-ibnnvx/cMbIuXrVloRv4-ibnnvx -goversion go1.23.3 -symabis "$WORK\\b105\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b105\\importcfg" -pack -asmhdr "$WORK\\b105\\go_asm.h" "E:\\go1.23.3\\src\\crypto\\subtle\\constant_time.go" "E:\\go1.23.3\\src\\crypto\\subtle\\xor.go" "E:\\go1.23.3\\src\\crypto\\subtle\\xor_amd64.go"
+cd E:\go1.23.3\src\crypto\subtle
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/subtle -trimpath "$WORK\\b105=>" -I "$WORK\\b105\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b105\\xor_amd64.o" "E:\\go1.23.3\\src\\crypto\\subtle\\xor_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b105\\_pkg_.a" "$WORK\\b105\\xor_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b105\\_pkg_.a" # internal
+
+#
+# crypto/cipher
+#
+
+mkdir -p $WORK\b103\
+cat >$WORK\b103\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile crypto/internal/alias=$WORK\b104\_pkg_.a
+packagefile crypto/subtle=$WORK\b105\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b103\\_pkg_.a" -trimpath "$WORK\\b103=>" -p crypto/cipher -lang=go1.23 -std -complete -buildid aSv16icsAbPzvRB9w6HK/aSv16icsAbPzvRB9w6HK -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b103\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\cipher\\cbc.go" "E:\\go1.23.3\\src\\crypto\\cipher\\cfb.go" "E:\\go1.23.3\\src\\crypto\\cipher\\cipher.go" "E:\\go1.23.3\\src\\crypto\\cipher\\ctr.go" "E:\\go1.23.3\\src\\crypto\\cipher\\gcm.go" "E:\\go1.23.3\\src\\crypto\\cipher\\io.go" "E:\\go1.23.3\\src\\crypto\\cipher\\ofb.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b103\\_pkg_.a" # internal
+
+#
+# crypto/internal/boring/sig
+#
+
+mkdir -p $WORK\b107\
+echo -n > $WORK\b107\go_asm.h # internal
+cd E:\go1.23.3\src\crypto\internal\boring\sig
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/internal/boring/sig -trimpath "$WORK\\b107=>" -I "$WORK\\b107\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b107\\symabis" "E:\\go1.23.3\\src\\crypto\\internal\\boring\\sig\\sig_amd64.s"
+echo '# import config' > $WORK\b107\importcfg # internal
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b107\\_pkg_.a" -trimpath "$WORK\\b107=>" -p crypto/internal/boring/sig -lang=go1.23 -std -buildid VD2_4xSEioiiabJgg1pM/VD2_4xSEioiiabJgg1pM -goversion go1.23.3 -symabis "$WORK\\b107\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b107\\importcfg" -pack -asmhdr "$WORK\\b107\\go_asm.h" "E:\\go1.23.3\\src\\crypto\\internal\\boring\\sig\\sig.go"
+cd E:\go1.23.3\src\crypto\internal\boring\sig
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/internal/boring/sig -trimpath "$WORK\\b107=>" -I "$WORK\\b107\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b107\\sig_amd64.o" "E:\\go1.23.3\\src\\crypto\\internal\\boring\\sig\\sig_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b107\\_pkg_.a" "$WORK\\b107\\sig_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b107\\_pkg_.a" # internal
+
+#
+# crypto/internal/boring
+#
+
+mkdir -p $WORK\b106\
+cat >$WORK\b106\importcfg << 'EOF' # internal
+# import config
+packagefile crypto=$WORK\b101\_pkg_.a
+packagefile crypto/cipher=$WORK\b103\_pkg_.a
+packagefile crypto/internal/boring/sig=$WORK\b107\_pkg_.a
+packagefile hash=$WORK\b095\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b106\\_pkg_.a" -trimpath "$WORK\\b106=>" -p crypto/internal/boring -lang=go1.23 -std -complete -buildid 2l2CY8wVOROvSKd-07qu/2l2CY8wVOROvSKd-07qu -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b106\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\internal\\boring\\doc.go" "E:\\go1.23.3\\src\\crypto\\internal\\boring\\notboring.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b106\\_pkg_.a" # internal
+
+#
+# crypto/aes
+#
+
+mkdir -p $WORK\b102\
+echo -n > $WORK\b102\go_asm.h # internal
+cd E:\go1.23.3\src\crypto\aes
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/aes -trimpath "$WORK\\b102=>" -I "$WORK\\b102\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b102\\symabis" "E:\\go1.23.3\\src\\crypto\\aes\\asm_amd64.s" "E:\\go1.23.3\\src\\crypto\\aes\\gcm_amd64.s"
+cat >$WORK\b102\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/cipher=$WORK\b103\_pkg_.a
+packagefile crypto/internal/alias=$WORK\b104\_pkg_.a
+packagefile crypto/internal/boring=$WORK\b106\_pkg_.a
+packagefile crypto/subtle=$WORK\b105\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile internal/cpu=$WORK\b011\_pkg_.a
+packagefile internal/goarch=$WORK\b006\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b102\\_pkg_.a" -trimpath "$WORK\\b102=>" -p crypto/aes -lang=go1.23 -std -buildid nKYjFFfilx7SnOoSmQPo/nKYjFFfilx7SnOoSmQPo -goversion go1.23.3 -symabis "$WORK\\b102\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b102\\importcfg" -pack -asmhdr "$WORK\\b102\\go_asm.h" "E:\\go1.23.3\\src\\crypto\\aes\\aes_gcm.go" "E:\\go1.23.3\\src\\crypto\\aes\\block.go" "E:\\go1.23.3\\src\\crypto\\aes\\cipher.go" "E:\\go1.23.3\\src\\crypto\\aes\\cipher_asm.go" "E:\\go1.23.3\\src\\crypto\\aes\\const.go" "E:\\go1.23.3\\src\\crypto\\aes\\modes.go"
+cd E:\go1.23.3\src\crypto\aes
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/aes -trimpath "$WORK\\b102=>" -I "$WORK\\b102\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b102\\asm_amd64.o" "E:\\go1.23.3\\src\\crypto\\aes\\asm_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/aes -trimpath "$WORK\\b102=>" -I "$WORK\\b102\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b102\\gcm_amd64.o" "E:\\go1.23.3\\src\\crypto\\aes\\gcm_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b102\\_pkg_.a" "$WORK\\b102\\asm_amd64.o" "$WORK\\b102\\gcm_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b102\\_pkg_.a" # internal
+
+#
+# crypto/des
+#
+
+mkdir -p $WORK\b108\
+cat >$WORK\b108\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/cipher=$WORK\b103\_pkg_.a
+packagefile crypto/internal/alias=$WORK\b104\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b108\\_pkg_.a" -trimpath "$WORK\\b108=>" -p crypto/des -lang=go1.23 -std -complete -buildid zSTQfY_zz1qa48-P5JDv/zSTQfY_zz1qa48-P5JDv -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b108\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\des\\block.go" "E:\\go1.23.3\\src\\crypto\\des\\cipher.go" "E:\\go1.23.3\\src\\crypto\\des\\const.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b108\\_pkg_.a" # internal
+
+#
+# crypto/internal/edwards25519/field
+#
+
+mkdir -p $WORK\b110\
+echo -n > $WORK\b110\go_asm.h # internal
+cd E:\go1.23.3\src\crypto\internal\edwards25519\field
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/internal/edwards25519/field -trimpath "$WORK\\b110=>" -I "$WORK\\b110\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b110\\symabis" "E:\\go1.23.3\\src\\crypto\\internal\\edwards25519\\field\\fe_amd64.s"
+cat >$WORK\b110\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/subtle=$WORK\b105\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b110\\_pkg_.a" -trimpath "$WORK\\b110=>" -p crypto/internal/edwards25519/field -lang=go1.23 -std -buildid b8Ietvp7Sd_5jlANl5RO/b8Ietvp7Sd_5jlANl5RO -goversion go1.23.3 -symabis "$WORK\\b110\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b110\\importcfg" -pack -asmhdr "$WORK\\b110\\go_asm.h" "E:\\go1.23.3\\src\\crypto\\internal\\edwards25519\\field\\fe.go" "E:\\go1.23.3\\src\\crypto\\internal\\edwards25519\\field\\fe_amd64.go" "E:\\go1.23.3\\src\\crypto\\internal\\edwards25519\\field\\fe_arm64_noasm.go" "E:\\go1.23.3\\src\\crypto\\internal\\edwards25519\\field\\fe_generic.go"
+cd E:\go1.23.3\src\crypto\internal\edwards25519\field
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/internal/edwards25519/field -trimpath "$WORK\\b110=>" -I "$WORK\\b110\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b110\\fe_amd64.o" "E:\\go1.23.3\\src\\crypto\\internal\\edwards25519\\field\\fe_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b110\\_pkg_.a" "$WORK\\b110\\fe_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b110\\_pkg_.a" # internal
+
+#
+# crypto/internal/nistec/fiat
+#
+
+mkdir -p $WORK\b112\
+cat >$WORK\b112\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/subtle=$WORK\b105\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b112\\_pkg_.a" -trimpath "$WORK\\b112=>" -p crypto/internal/nistec/fiat -lang=go1.23 -std -complete -buildid _Hc3FOf_J9OuFo1tCLhU/_Hc3FOf_J9OuFo1tCLhU -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b112\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\fiat\\p224.go" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\fiat\\p224_fiat64.go" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\fiat\\p224_invert.go" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\fiat\\p256.go" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\fiat\\p256_fiat64.go" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\fiat\\p256_invert.go" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\fiat\\p384.go" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\fiat\\p384_fiat64.go" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\fiat\\p384_invert.go" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\fiat\\p521.go" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\fiat\\p521_fiat64.go" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\fiat\\p521_invert.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b112\\_pkg_.a" # internal
+
+#
+# embed
+#
+
+mkdir -p $WORK\b113\
+cat >$WORK\b113\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/bytealg=$WORK\b010\_pkg_.a
+packagefile internal/stringslite=$WORK\b021\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile io/fs=$WORK\b052\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b113\\_pkg_.a" -trimpath "$WORK\\b113=>" -p embed -lang=go1.23 -std -complete -buildid 49Br4qc-mDwabcV9vE7O/49Br4qc-mDwabcV9vE7O -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b113\\importcfg" -pack "E:\\go1.23.3\\src\\embed\\embed.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b113\\_pkg_.a" # internal
+
+#
+# crypto/internal/nistec
+#
+
+mkdir -p $WORK\b111\
+echo -n > $WORK\b111\go_asm.h # internal
+cd E:\go1.23.3\src\crypto\internal\nistec
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/internal/nistec -trimpath "$WORK\\b111=>" -I "$WORK\\b111\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b111\\symabis" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\p256_asm_amd64.s"
+cat >$WORK\b111\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/internal/nistec/fiat=$WORK\b112\_pkg_.a
+packagefile crypto/subtle=$WORK\b105\_pkg_.a
+packagefile embed=$WORK\b113\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+cat >$WORK\b111\embedcfg << 'EOF' # internal
+{
+	"Patterns": {
+		"p256_asm_table.bin": [
+			"p256_asm_table.bin"
+		]
+	},
+	"Files": {
+		"p256_asm_table.bin": "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\p256_asm_table.bin"
+	}
+}EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b111\\_pkg_.a" -trimpath "$WORK\\b111=>" -p crypto/internal/nistec -lang=go1.23 -std -buildid 7WNkwMvzSKTyJMLOmUj7/7WNkwMvzSKTyJMLOmUj7 -goversion go1.23.3 -symabis "$WORK\\b111\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b111\\importcfg" -embedcfg "$WORK\\b111\\embedcfg" -pack -asmhdr "$WORK\\b111\\go_asm.h" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\nistec.go" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\p224.go" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\p224_sqrt.go" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\p256_asm.go" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\p256_ordinv.go" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\p384.go" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\p521.go"
+cd E:\go1.23.3\src\crypto\internal\nistec
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/internal/nistec -trimpath "$WORK\\b111=>" -I "$WORK\\b111\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b111\\p256_asm_amd64.o" "E:\\go1.23.3\\src\\crypto\\internal\\nistec\\p256_asm_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b111\\_pkg_.a" "$WORK\\b111\\p256_asm_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b111\\_pkg_.a" # internal
+
+#
+# crypto/ecdh
+#
+
+mkdir -p $WORK\b109\
+cat >$WORK\b109\importcfg << 'EOF' # internal
+# import config
+packagefile crypto=$WORK\b101\_pkg_.a
+packagefile crypto/internal/boring=$WORK\b106\_pkg_.a
+packagefile crypto/internal/edwards25519/field=$WORK\b110\_pkg_.a
+packagefile crypto/internal/nistec=$WORK\b111\_pkg_.a
+packagefile crypto/internal/randutil=$WORK\b097\_pkg_.a
+packagefile crypto/subtle=$WORK\b105\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b109\\_pkg_.a" -trimpath "$WORK\\b109=>" -p crypto/ecdh -lang=go1.23 -std -complete -buildid nPvdLKuCO94QJaPoC65r/nPvdLKuCO94QJaPoC65r -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b109\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\ecdh\\ecdh.go" "E:\\go1.23.3\\src\\crypto\\ecdh\\nist.go" "E:\\go1.23.3\\src\\crypto\\ecdh\\x25519.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b109\\_pkg_.a" # internal
+
+#
+# crypto/elliptic
+#
+
+mkdir -p $WORK\b115\
+cat >$WORK\b115\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/internal/nistec=$WORK\b111\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math/big=$WORK\b098\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b115\\_pkg_.a" -trimpath "$WORK\\b115=>" -p crypto/elliptic -lang=go1.23 -std -complete -buildid 11HAZfRuER1M8dyX4EBh/11HAZfRuER1M8dyX4EBh -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b115\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\elliptic\\elliptic.go" "E:\\go1.23.3\\src\\crypto\\elliptic\\nistec.go" "E:\\go1.23.3\\src\\crypto\\elliptic\\nistec_p256.go" "E:\\go1.23.3\\src\\crypto\\elliptic\\params.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b115\\_pkg_.a" # internal
+
+#
+# crypto/internal/bigmod
+#
+
+mkdir -p $WORK\b116\
+echo -n > $WORK\b116\go_asm.h # internal
+cd E:\go1.23.3\src\crypto\internal\bigmod
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/internal/bigmod -trimpath "$WORK\\b116=>" -I "$WORK\\b116\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b116\\symabis" "E:\\go1.23.3\\src\\crypto\\internal\\bigmod\\nat_amd64.s"
+cat >$WORK\b116\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile internal/cpu=$WORK\b011\_pkg_.a
+packagefile math/big=$WORK\b098\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b116\\_pkg_.a" -trimpath "$WORK\\b116=>" -p crypto/internal/bigmod -lang=go1.23 -std -buildid 6OVgeRL45my9ENBiqHL8/6OVgeRL45my9ENBiqHL8 -goversion go1.23.3 -symabis "$WORK\\b116\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b116\\importcfg" -pack -asmhdr "$WORK\\b116\\go_asm.h" "E:\\go1.23.3\\src\\crypto\\internal\\bigmod\\nat.go" "E:\\go1.23.3\\src\\crypto\\internal\\bigmod\\nat_asm.go"
+cd E:\go1.23.3\src\crypto\internal\bigmod
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/internal/bigmod -trimpath "$WORK\\b116=>" -I "$WORK\\b116\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b116\\nat_amd64.o" "E:\\go1.23.3\\src\\crypto\\internal\\bigmod\\nat_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b116\\_pkg_.a" "$WORK\\b116\\nat_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b116\\_pkg_.a" # internal
+
+#
+# crypto/internal/boring/bbig
+#
+
+mkdir -p $WORK\b117\
+cat >$WORK\b117\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/internal/boring=$WORK\b106\_pkg_.a
+packagefile math/big=$WORK\b098\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b117\\_pkg_.a" -trimpath "$WORK\\b117=>" -p crypto/internal/boring/bbig -lang=go1.23 -std -complete -buildid LyZBI3mdi8AdSdplwR8J/LyZBI3mdi8AdSdplwR8J -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b117\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\internal\\boring\\bbig\\big.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b117\\_pkg_.a" # internal
+
+#
+# crypto/sha512
+#
+
+mkdir -p $WORK\b118\
+echo -n > $WORK\b118\go_asm.h # internal
+cd E:\go1.23.3\src\crypto\sha512
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/sha512 -trimpath "$WORK\\b118=>" -I "$WORK\\b118\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b118\\symabis" "E:\\go1.23.3\\src\\crypto\\sha512\\sha512block_amd64.s"
+cat >$WORK\b118\importcfg << 'EOF' # internal
+# import config
+packagefile crypto=$WORK\b101\_pkg_.a
+packagefile crypto/internal/boring=$WORK\b106\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile hash=$WORK\b095\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile internal/cpu=$WORK\b011\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b118\\_pkg_.a" -trimpath "$WORK\\b118=>" -p crypto/sha512 -lang=go1.23 -std -buildid m2iDD1jwrLQPh1tu189F/m2iDD1jwrLQPh1tu189F -goversion go1.23.3 -symabis "$WORK\\b118\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b118\\importcfg" -pack -asmhdr "$WORK\\b118\\go_asm.h" "E:\\go1.23.3\\src\\crypto\\sha512\\sha512.go" "E:\\go1.23.3\\src\\crypto\\sha512\\sha512block.go" "E:\\go1.23.3\\src\\crypto\\sha512\\sha512block_amd64.go"
+cd E:\go1.23.3\src\crypto\sha512
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/sha512 -trimpath "$WORK\\b118=>" -I "$WORK\\b118\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b118\\sha512block_amd64.o" "E:\\go1.23.3\\src\\crypto\\sha512\\sha512block_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b118\\_pkg_.a" "$WORK\\b118\\sha512block_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b118\\_pkg_.a" # internal
+
+#
+# encoding/asn1
+#
+
+mkdir -p $WORK\b120\
+cat >$WORK\b120\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile math/big=$WORK\b098\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+packagefile unicode/utf16=$WORK\b037\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b120\\_pkg_.a" -trimpath "$WORK\\b120=>" -p encoding/asn1 -lang=go1.23 -std -complete -buildid 5xBbxmzg7gtbmDdRKNXR/5xBbxmzg7gtbmDdRKNXR -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b120\\importcfg" -pack "E:\\go1.23.3\\src\\encoding\\asn1\\asn1.go" "E:\\go1.23.3\\src\\encoding\\asn1\\common.go" "E:\\go1.23.3\\src\\encoding\\asn1\\marshal.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b120\\_pkg_.a" # internal
+
+#
+# vendor/golang.org/x/crypto/cryptobyte/asn1
+#
+
+mkdir -p $WORK\b121\
+echo '# import config' > $WORK\b121\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b121\\_pkg_.a" -trimpath "$WORK\\b121=>" -p vendor/golang.org/x/crypto/cryptobyte/asn1 -lang=go1.23 -std -complete -buildid x2qgYGKYR_MvcsF8M4E8/x2qgYGKYR_MvcsF8M4E8 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b121\\importcfg" -pack "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\cryptobyte\\asn1\\asn1.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b121\\_pkg_.a" # internal
+
+#
+# vendor/golang.org/x/crypto/cryptobyte
+#
+
+mkdir -p $WORK\b119\
+cat >$WORK\b119\importcfg << 'EOF' # internal
+# import config
+importmap golang.org/x/crypto/cryptobyte/asn1=vendor/golang.org/x/crypto/cryptobyte/asn1
+packagefile encoding/asn1=$WORK\b120\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile vendor/golang.org/x/crypto/cryptobyte/asn1=$WORK\b121\_pkg_.a
+packagefile math/big=$WORK\b098\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b119\\_pkg_.a" -trimpath "$WORK\\b119=>" -p vendor/golang.org/x/crypto/cryptobyte -lang=go1.23 -std -complete -buildid 5moqB_tB_NQvm3lmsiXF/5moqB_tB_NQvm3lmsiXF -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b119\\importcfg" -pack "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\cryptobyte\\asn1.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\cryptobyte\\builder.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\cryptobyte\\string.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b119\\_pkg_.a" # internal
+
+#
+# crypto/ecdsa
+#
+
+mkdir -p $WORK\b114\
+cat >$WORK\b114\importcfg << 'EOF' # internal
+# import config
+importmap golang.org/x/crypto/cryptobyte=vendor/golang.org/x/crypto/cryptobyte
+importmap golang.org/x/crypto/cryptobyte/asn1=vendor/golang.org/x/crypto/cryptobyte/asn1
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile crypto=$WORK\b101\_pkg_.a
+packagefile crypto/aes=$WORK\b102\_pkg_.a
+packagefile crypto/cipher=$WORK\b103\_pkg_.a
+packagefile crypto/ecdh=$WORK\b109\_pkg_.a
+packagefile crypto/elliptic=$WORK\b115\_pkg_.a
+packagefile crypto/internal/bigmod=$WORK\b116\_pkg_.a
+packagefile crypto/internal/boring=$WORK\b106\_pkg_.a
+packagefile crypto/internal/boring/bbig=$WORK\b117\_pkg_.a
+packagefile crypto/internal/nistec=$WORK\b111\_pkg_.a
+packagefile crypto/internal/randutil=$WORK\b097\_pkg_.a
+packagefile crypto/sha512=$WORK\b118\_pkg_.a
+packagefile crypto/subtle=$WORK\b105\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile vendor/golang.org/x/crypto/cryptobyte=$WORK\b119\_pkg_.a
+packagefile vendor/golang.org/x/crypto/cryptobyte/asn1=$WORK\b121\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math/big=$WORK\b098\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b114\\_pkg_.a" -trimpath "$WORK\\b114=>" -p crypto/ecdsa -lang=go1.23 -std -complete -buildid zAuSMc-ei-H7_wGvOxDd/zAuSMc-ei-H7_wGvOxDd -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b114\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\ecdsa\\ecdsa.go" "E:\\go1.23.3\\src\\crypto\\ecdsa\\ecdsa_legacy.go" "E:\\go1.23.3\\src\\crypto\\ecdsa\\ecdsa_noasm.go" "E:\\go1.23.3\\src\\crypto\\ecdsa\\notboring.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b114\\_pkg_.a" # internal
+
+#
+# crypto/internal/edwards25519
+#
+
+mkdir -p $WORK\b123\
+cat >$WORK\b123\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/internal/edwards25519/field=$WORK\b110\_pkg_.a
+packagefile crypto/subtle=$WORK\b105\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b123\\_pkg_.a" -trimpath "$WORK\\b123=>" -p crypto/internal/edwards25519 -lang=go1.23 -std -complete -buildid dVtgjTfrExgWK7hYZssZ/dVtgjTfrExgWK7hYZssZ -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b123\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\internal\\edwards25519\\doc.go" "E:\\go1.23.3\\src\\crypto\\internal\\edwards25519\\edwards25519.go" "E:\\go1.23.3\\src\\crypto\\internal\\edwards25519\\scalar.go" "E:\\go1.23.3\\src\\crypto\\internal\\edwards25519\\scalar_fiat.go" "E:\\go1.23.3\\src\\crypto\\internal\\edwards25519\\scalarmult.go" "E:\\go1.23.3\\src\\crypto\\internal\\edwards25519\\tables.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b123\\_pkg_.a" # internal
+
+#
+# crypto/ed25519
+#
+
+mkdir -p $WORK\b122\
+cat >$WORK\b122\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile crypto=$WORK\b101\_pkg_.a
+packagefile crypto/internal/edwards25519=$WORK\b123\_pkg_.a
+packagefile crypto/rand=$WORK\b096\_pkg_.a
+packagefile crypto/sha512=$WORK\b118\_pkg_.a
+packagefile crypto/subtle=$WORK\b105\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b122\\_pkg_.a" -trimpath "$WORK\\b122=>" -p crypto/ed25519 -lang=go1.23 -std -complete -buildid tNd7-OTMqaq8fBr2-RvR/tNd7-OTMqaq8fBr2-RvR -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b122\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\ed25519\\ed25519.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b122\\_pkg_.a" # internal
+
+#
+# crypto/hmac
+#
+
+mkdir -p $WORK\b124\
+cat >$WORK\b124\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/internal/boring=$WORK\b106\_pkg_.a
+packagefile crypto/subtle=$WORK\b105\_pkg_.a
+packagefile hash=$WORK\b095\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b124\\_pkg_.a" -trimpath "$WORK\\b124=>" -p crypto/hmac -lang=go1.23 -std -complete -buildid ZagPy7YTOPMc5fsr9c25/ZagPy7YTOPMc5fsr9c25 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b124\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\hmac\\hmac.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b124\\_pkg_.a" # internal
+
+#
+# vendor/golang.org/x/crypto/internal/alias
+#
+
+mkdir -p $WORK\b128\
+echo '# import config' > $WORK\b128\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b128\\_pkg_.a" -trimpath "$WORK\\b128=>" -p vendor/golang.org/x/crypto/internal/alias -lang=go1.23 -std -complete -buildid LYB3IFCyI8pucWsBnGq3/LYB3IFCyI8pucWsBnGq3 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b128\\importcfg" -pack "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\internal\\alias\\alias.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b128\\_pkg_.a" # internal
+
+#
+# vendor/golang.org/x/crypto/chacha20
+#
+
+mkdir -p $WORK\b127\
+cat >$WORK\b127\importcfg << 'EOF' # internal
+# import config
+importmap golang.org/x/crypto/internal/alias=vendor/golang.org/x/crypto/internal/alias
+packagefile crypto/cipher=$WORK\b103\_pkg_.a
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile vendor/golang.org/x/crypto/internal/alias=$WORK\b128\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b127\\_pkg_.a" -trimpath "$WORK\\b127=>" -p vendor/golang.org/x/crypto/chacha20 -lang=go1.23 -std -complete -buildid -6Bs_3RNWGuCRXUOA9p9/-6Bs_3RNWGuCRXUOA9p9 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b127\\importcfg" -pack "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\chacha20\\chacha_generic.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\chacha20\\chacha_noasm.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\chacha20\\xor.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b127\\_pkg_.a" # internal
+
+#
+# vendor/golang.org/x/crypto/internal/poly1305
+#
+
+mkdir -p $WORK\b129\
+echo -n > $WORK\b129\go_asm.h # internal
+cd E:\go1.23.3\src\vendor\golang.org\x\crypto\internal\poly1305
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p vendor/golang.org/x/crypto/internal/poly1305 -trimpath "$WORK\\b129=>" -I "$WORK\\b129\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b129\\symabis" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\internal\\poly1305\\sum_amd64.s"
+cat >$WORK\b129\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/subtle=$WORK\b105\_pkg_.a
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b129\\_pkg_.a" -trimpath "$WORK\\b129=>" -p vendor/golang.org/x/crypto/internal/poly1305 -lang=go1.23 -std -buildid leMT6XYLWnJEIxXe5tMl/leMT6XYLWnJEIxXe5tMl -goversion go1.23.3 -symabis "$WORK\\b129\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b129\\importcfg" -pack -asmhdr "$WORK\\b129\\go_asm.h" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\internal\\poly1305\\poly1305.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\internal\\poly1305\\sum_amd64.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\internal\\poly1305\\sum_generic.go"
+cd E:\go1.23.3\src\vendor\golang.org\x\crypto\internal\poly1305
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p vendor/golang.org/x/crypto/internal/poly1305 -trimpath "$WORK\\b129=>" -I "$WORK\\b129\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b129\\sum_amd64.o" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\internal\\poly1305\\sum_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b129\\_pkg_.a" "$WORK\\b129\\sum_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b129\\_pkg_.a" # internal
+
+#
+# vendor/golang.org/x/sys/cpu
+#
+
+mkdir -p $WORK\b130\
+echo -n > $WORK\b130\go_asm.h # internal
+cd E:\go1.23.3\src\vendor\golang.org\x\sys\cpu
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p vendor/golang.org/x/sys/cpu -trimpath "$WORK\\b130=>" -I "$WORK\\b130\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b130\\symabis" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\sys\\cpu\\cpu_x86.s"
+cat >$WORK\b130\importcfg << 'EOF' # internal
+# import config
+packagefile os=$WORK\b050\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b130\\_pkg_.a" -trimpath "$WORK\\b130=>" -p vendor/golang.org/x/sys/cpu -lang=go1.23 -std -buildid TmjBvbqFtFpnVWPYqLAm/TmjBvbqFtFpnVWPYqLAm -goversion go1.23.3 -symabis "$WORK\\b130\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b130\\importcfg" -pack -asmhdr "$WORK\\b130\\go_asm.h" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\sys\\cpu\\byteorder.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\sys\\cpu\\cpu.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\sys\\cpu\\cpu_gc_x86.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\sys\\cpu\\cpu_x86.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\sys\\cpu\\endian_little.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\sys\\cpu\\parse.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\sys\\cpu\\runtime_auxv.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\sys\\cpu\\runtime_auxv_go121.go"
+cd E:\go1.23.3\src\vendor\golang.org\x\sys\cpu
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p vendor/golang.org/x/sys/cpu -trimpath "$WORK\\b130=>" -I "$WORK\\b130\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b130\\cpu_x86.o" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\sys\\cpu\\cpu_x86.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b130\\_pkg_.a" "$WORK\\b130\\cpu_x86.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b130\\_pkg_.a" # internal
+
+#
+# vendor/golang.org/x/crypto/chacha20poly1305
+#
+
+mkdir -p $WORK\b126\
+echo -n > $WORK\b126\go_asm.h # internal
+cd E:\go1.23.3\src\vendor\golang.org\x\crypto\chacha20poly1305
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p vendor/golang.org/x/crypto/chacha20poly1305 -trimpath "$WORK\\b126=>" -I "$WORK\\b126\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b126\\symabis" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\chacha20poly1305\\chacha20poly1305_amd64.s"
+cat >$WORK\b126\importcfg << 'EOF' # internal
+# import config
+importmap golang.org/x/crypto/chacha20=vendor/golang.org/x/crypto/chacha20
+importmap golang.org/x/crypto/internal/alias=vendor/golang.org/x/crypto/internal/alias
+importmap golang.org/x/crypto/internal/poly1305=vendor/golang.org/x/crypto/internal/poly1305
+importmap golang.org/x/sys/cpu=vendor/golang.org/x/sys/cpu
+packagefile crypto/cipher=$WORK\b103\_pkg_.a
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile vendor/golang.org/x/crypto/chacha20=$WORK\b127\_pkg_.a
+packagefile vendor/golang.org/x/crypto/internal/alias=$WORK\b128\_pkg_.a
+packagefile vendor/golang.org/x/crypto/internal/poly1305=$WORK\b129\_pkg_.a
+packagefile vendor/golang.org/x/sys/cpu=$WORK\b130\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b126\\_pkg_.a" -trimpath "$WORK\\b126=>" -p vendor/golang.org/x/crypto/chacha20poly1305 -lang=go1.23 -std -buildid 0apadHuA8-o0IYtwGagB/0apadHuA8-o0IYtwGagB -goversion go1.23.3 -symabis "$WORK\\b126\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b126\\importcfg" -pack -asmhdr "$WORK\\b126\\go_asm.h" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\chacha20poly1305\\chacha20poly1305.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\chacha20poly1305\\chacha20poly1305_amd64.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\chacha20poly1305\\chacha20poly1305_generic.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\chacha20poly1305\\xchacha20poly1305.go"
+cd E:\go1.23.3\src\vendor\golang.org\x\crypto\chacha20poly1305
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p vendor/golang.org/x/crypto/chacha20poly1305 -trimpath "$WORK\\b126=>" -I "$WORK\\b126\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b126\\chacha20poly1305_amd64.o" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\chacha20poly1305\\chacha20poly1305_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b126\\_pkg_.a" "$WORK\\b126\\chacha20poly1305_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b126\\_pkg_.a" # internal
+
+#
+# vendor/golang.org/x/crypto/hkdf
+#
+
+mkdir -p $WORK\b131\
+cat >$WORK\b131\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/hmac=$WORK\b124\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile hash=$WORK\b095\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b131\\_pkg_.a" -trimpath "$WORK\\b131=>" -p vendor/golang.org/x/crypto/hkdf -lang=go1.23 -std -complete -buildid cnhCrtPdxpfwsvOywPyO/cnhCrtPdxpfwsvOywPyO -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b131\\importcfg" -pack "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\hkdf\\hkdf.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b131\\_pkg_.a" # internal
+
+#
+# crypto/internal/hpke
+#
+
+mkdir -p $WORK\b125\
+cat >$WORK\b125\importcfg << 'EOF' # internal
+# import config
+importmap golang.org/x/crypto/chacha20poly1305=vendor/golang.org/x/crypto/chacha20poly1305
+importmap golang.org/x/crypto/hkdf=vendor/golang.org/x/crypto/hkdf
+packagefile crypto=$WORK\b101\_pkg_.a
+packagefile crypto/aes=$WORK\b102\_pkg_.a
+packagefile crypto/cipher=$WORK\b103\_pkg_.a
+packagefile crypto/ecdh=$WORK\b109\_pkg_.a
+packagefile crypto/rand=$WORK\b096\_pkg_.a
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile vendor/golang.org/x/crypto/chacha20poly1305=$WORK\b126\_pkg_.a
+packagefile vendor/golang.org/x/crypto/hkdf=$WORK\b131\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b125\\_pkg_.a" -trimpath "$WORK\\b125=>" -p crypto/internal/hpke -lang=go1.23 -std -complete -buildid LpRPz6eFn8dPxdSeEQBd/LpRPz6eFn8dPxdSeEQBd -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b125\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\internal\\hpke\\hpke.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b125\\_pkg_.a" # internal
+
+#
+# vendor/golang.org/x/crypto/sha3
+#
+
+mkdir -p $WORK\b133\
+echo -n > $WORK\b133\go_asm.h # internal
+cd E:\go1.23.3\src\vendor\golang.org\x\crypto\sha3
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p vendor/golang.org/x/crypto/sha3 -trimpath "$WORK\\b133=>" -I "$WORK\\b133\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b133\\symabis" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\sha3\\keccakf_amd64.s"
+cat >$WORK\b133\importcfg << 'EOF' # internal
+# import config
+importmap golang.org/x/sys/cpu=vendor/golang.org/x/sys/cpu
+packagefile crypto=$WORK\b101\_pkg_.a
+packagefile crypto/subtle=$WORK\b105\_pkg_.a
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile vendor/golang.org/x/sys/cpu=$WORK\b130\_pkg_.a
+packagefile hash=$WORK\b095\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b133\\_pkg_.a" -trimpath "$WORK\\b133=>" -p vendor/golang.org/x/crypto/sha3 -lang=go1.23 -std -buildid 5AggFXyxlF4KrtdKcx2-/5AggFXyxlF4KrtdKcx2- -goversion go1.23.3 -symabis "$WORK\\b133\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b133\\importcfg" -pack -asmhdr "$WORK\\b133\\go_asm.h" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\sha3\\doc.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\sha3\\hashes.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\sha3\\hashes_noasm.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\sha3\\keccakf_amd64.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\sha3\\register.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\sha3\\sha3.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\sha3\\shake.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\sha3\\shake_noasm.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\sha3\\xor.go"
+cd E:\go1.23.3\src\vendor\golang.org\x\crypto\sha3
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p vendor/golang.org/x/crypto/sha3 -trimpath "$WORK\\b133=>" -I "$WORK\\b133\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b133\\keccakf_amd64.o" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\crypto\\sha3\\keccakf_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b133\\_pkg_.a" "$WORK\\b133\\keccakf_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b133\\_pkg_.a" # internal
+
+#
+# crypto/internal/mlkem768
+#
+
+mkdir -p $WORK\b132\
+cat >$WORK\b132\importcfg << 'EOF' # internal
+# import config
+importmap golang.org/x/crypto/sha3=vendor/golang.org/x/crypto/sha3
+packagefile crypto/rand=$WORK\b096\_pkg_.a
+packagefile crypto/subtle=$WORK\b105\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile vendor/golang.org/x/crypto/sha3=$WORK\b133\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b132\\_pkg_.a" -trimpath "$WORK\\b132=>" -p crypto/internal/mlkem768 -lang=go1.23 -std -complete -buildid Jk0DYseNxq_urUad8_vK/Jk0DYseNxq_urUad8_vK -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b132\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\internal\\mlkem768\\mlkem768.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b132\\_pkg_.a" # internal
+
+#
+# crypto/md5
+#
+
+mkdir -p $WORK\b134\
+echo -n > $WORK\b134\go_asm.h # internal
+cd E:\go1.23.3\src\crypto\md5
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/md5 -trimpath "$WORK\\b134=>" -I "$WORK\\b134\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b134\\symabis" "E:\\go1.23.3\\src\\crypto\\md5\\md5block_amd64.s"
+cat >$WORK\b134\importcfg << 'EOF' # internal
+# import config
+packagefile crypto=$WORK\b101\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile hash=$WORK\b095\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b134\\_pkg_.a" -trimpath "$WORK\\b134=>" -p crypto/md5 -lang=go1.23 -std -buildid YZzDZppxt0i0-e-9W9gZ/YZzDZppxt0i0-e-9W9gZ -goversion go1.23.3 -symabis "$WORK\\b134\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b134\\importcfg" -pack -asmhdr "$WORK\\b134\\go_asm.h" "E:\\go1.23.3\\src\\crypto\\md5\\md5.go" "E:\\go1.23.3\\src\\crypto\\md5\\md5block.go" "E:\\go1.23.3\\src\\crypto\\md5\\md5block_decl.go"
+cd E:\go1.23.3\src\crypto\md5
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/md5 -trimpath "$WORK\\b134=>" -I "$WORK\\b134\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b134\\md5block_amd64.o" "E:\\go1.23.3\\src\\crypto\\md5\\md5block_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b134\\_pkg_.a" "$WORK\\b134\\md5block_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b134\\_pkg_.a" # internal
+
+#
+# crypto/rc4
+#
+
+mkdir -p $WORK\b135\
+cat >$WORK\b135\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/internal/alias=$WORK\b104\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b135\\_pkg_.a" -trimpath "$WORK\\b135=>" -p crypto/rc4 -lang=go1.23 -std -complete -buildid fi7_1p1TzgdOCOBEk-Ly/fi7_1p1TzgdOCOBEk-Ly -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b135\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\rc4\\rc4.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b135\\_pkg_.a" # internal
+
+#
+# crypto/rsa
+#
+
+mkdir -p $WORK\b136\
+cat >$WORK\b136\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile crypto=$WORK\b101\_pkg_.a
+packagefile crypto/internal/bigmod=$WORK\b116\_pkg_.a
+packagefile crypto/internal/boring=$WORK\b106\_pkg_.a
+packagefile crypto/internal/boring/bbig=$WORK\b117\_pkg_.a
+packagefile crypto/internal/randutil=$WORK\b097\_pkg_.a
+packagefile crypto/rand=$WORK\b096\_pkg_.a
+packagefile crypto/subtle=$WORK\b105\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile hash=$WORK\b095\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile math/big=$WORK\b098\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b136\\_pkg_.a" -trimpath "$WORK\\b136=>" -p crypto/rsa -lang=go1.23 -std -complete -buildid OlNvdMmwtG84JihEmUJe/OlNvdMmwtG84JihEmUJe -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b136\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\rsa\\notboring.go" "E:\\go1.23.3\\src\\crypto\\rsa\\pkcs1v15.go" "E:\\go1.23.3\\src\\crypto\\rsa\\pss.go" "E:\\go1.23.3\\src\\crypto\\rsa\\rsa.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b136\\_pkg_.a" # internal
+
+#
+# crypto/sha1
+#
+
+mkdir -p $WORK\b137\
+echo -n > $WORK\b137\go_asm.h # internal
+cd E:\go1.23.3\src\crypto\sha1
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/sha1 -trimpath "$WORK\\b137=>" -I "$WORK\\b137\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b137\\symabis" "E:\\go1.23.3\\src\\crypto\\sha1\\sha1block_amd64.s"
+cat >$WORK\b137\importcfg << 'EOF' # internal
+# import config
+packagefile crypto=$WORK\b101\_pkg_.a
+packagefile crypto/internal/boring=$WORK\b106\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile hash=$WORK\b095\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile internal/cpu=$WORK\b011\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b137\\_pkg_.a" -trimpath "$WORK\\b137=>" -p crypto/sha1 -lang=go1.23 -std -buildid p8gOhtNbzqyEflF-ljxu/p8gOhtNbzqyEflF-ljxu -goversion go1.23.3 -symabis "$WORK\\b137\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b137\\importcfg" -pack -asmhdr "$WORK\\b137\\go_asm.h" "E:\\go1.23.3\\src\\crypto\\sha1\\sha1.go" "E:\\go1.23.3\\src\\crypto\\sha1\\sha1block.go" "E:\\go1.23.3\\src\\crypto\\sha1\\sha1block_amd64.go"
+cd E:\go1.23.3\src\crypto\sha1
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/sha1 -trimpath "$WORK\\b137=>" -I "$WORK\\b137\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b137\\sha1block_amd64.o" "E:\\go1.23.3\\src\\crypto\\sha1\\sha1block_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b137\\_pkg_.a" "$WORK\\b137\\sha1block_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b137\\_pkg_.a" # internal
+
+#
+# crypto/sha256
+#
+
+mkdir -p $WORK\b138\
+echo -n > $WORK\b138\go_asm.h # internal
+cd E:\go1.23.3\src\crypto\sha256
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/sha256 -trimpath "$WORK\\b138=>" -I "$WORK\\b138\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -gensymabis -o "$WORK\\b138\\symabis" "E:\\go1.23.3\\src\\crypto\\sha256\\sha256block_amd64.s"
+cat >$WORK\b138\importcfg << 'EOF' # internal
+# import config
+packagefile crypto=$WORK\b101\_pkg_.a
+packagefile crypto/internal/boring=$WORK\b106\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile hash=$WORK\b095\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile internal/cpu=$WORK\b011\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b138\\_pkg_.a" -trimpath "$WORK\\b138=>" -p crypto/sha256 -lang=go1.23 -std -buildid 4QpVCSB0wCbxjMEH3Sah/4QpVCSB0wCbxjMEH3Sah -goversion go1.23.3 -symabis "$WORK\\b138\\symabis" -c=4 -nolocalimports -importcfg "$WORK\\b138\\importcfg" -pack -asmhdr "$WORK\\b138\\go_asm.h" "E:\\go1.23.3\\src\\crypto\\sha256\\sha256.go" "E:\\go1.23.3\\src\\crypto\\sha256\\sha256block.go" "E:\\go1.23.3\\src\\crypto\\sha256\\sha256block_amd64.go" "E:\\go1.23.3\\src\\crypto\\sha256\\sha256block_decl.go"
+cd E:\go1.23.3\src\crypto\sha256
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\asm.exe" -p crypto/sha256 -trimpath "$WORK\\b138=>" -I "$WORK\\b138\\" -I "E:\\go1.23.3\\pkg\\include" -D GOOS_windows -D GOARCH_amd64 -D GOAMD64_v1 -o "$WORK\\b138\\sha256block_amd64.o" "E:\\go1.23.3\\src\\crypto\\sha256\\sha256block_amd64.s"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\pack.exe" r "$WORK\\b138\\_pkg_.a" "$WORK\\b138\\sha256block_amd64.o" # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b138\\_pkg_.a" # internal
+
+#
+# crypto/dsa
+#
+
+mkdir -p $WORK\b140\
+cat >$WORK\b140\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/internal/randutil=$WORK\b097\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math/big=$WORK\b098\_pkg_.a
+EOF
+cd E:\go-workspace\src\otelbuild-demo
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b140\\_pkg_.a" -trimpath "$WORK\\b140=>" -p crypto/dsa -lang=go1.23 -std -complete -buildid miAEs-TdMKbSdHU3NZdD/miAEs-TdMKbSdHU3NZdD -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b140\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\dsa\\dsa.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b140\\_pkg_.a" # internal
+
+#
+# crypto/x509/pkix
+#
+
+mkdir -p $WORK\b141\
+cat >$WORK\b141\importcfg << 'EOF' # internal
+# import config
+packagefile encoding/asn1=$WORK\b120\_pkg_.a
+packagefile encoding/hex=$WORK\b084\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile math/big=$WORK\b098\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b141\\_pkg_.a" -trimpath "$WORK\\b141=>" -p crypto/x509/pkix -lang=go1.23 -std -complete -buildid u6-edzQm9oaw478K5exz/u6-edzQm9oaw478K5exz -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b141\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\x509\\pkix\\pkix.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b141\\_pkg_.a" # internal
+
+#
+# encoding/pem
+#
+
+mkdir -p $WORK\b142\
+cat >$WORK\b142\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile encoding/base64=$WORK\b064\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b142\\_pkg_.a" -trimpath "$WORK\\b142=>" -p encoding/pem -lang=go1.23 -std -complete -buildid 1C_sQATWwjIYfi_4NpzI/1C_sQATWwjIYfi_4NpzI -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b142\\importcfg" -pack "E:\\go1.23.3\\src\\encoding\\pem\\pem.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b142\\_pkg_.a" # internal
+
+#
+# vendor/golang.org/x/net/dns/dnsmessage
+#
+
+mkdir -p $WORK\b144\
+cat >$WORK\b144\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b144\\_pkg_.a" -trimpath "$WORK\\b144=>" -p vendor/golang.org/x/net/dns/dnsmessage -lang=go1.23 -std -complete -buildid xxgSA2WhSS21OLexBaD8/xxgSA2WhSS21OLexBaD8 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b144\\importcfg" -pack "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\net\\dns\\dnsmessage\\message.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b144\\_pkg_.a" # internal
+
+#
+# internal/nettrace
+#
+
+mkdir -p $WORK\b145\
+echo '# import config' > $WORK\b145\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b145\\_pkg_.a" -trimpath "$WORK\\b145=>" -p internal/nettrace -lang=go1.23 -std -complete -buildid qACULSiQgJ6QmA-Vl8gv/qACULSiQgJ6QmA-Vl8gv -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b145\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\nettrace\\nettrace.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b145\\_pkg_.a" # internal
+
+#
+# internal/singleflight
+#
+
+mkdir -p $WORK\b146\
+cat >$WORK\b146\importcfg << 'EOF' # internal
+# import config
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b146\\_pkg_.a" -trimpath "$WORK\\b146=>" -p internal/singleflight -lang=go1.23 -std -complete -buildid TkXoEpjggJzwrj9KfSer/TkXoEpjggJzwrj9KfSer -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b146\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\singleflight\\singleflight.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b146\\_pkg_.a" # internal
+
+#
+# math/rand/v2
+#
+
+mkdir -p $WORK\b150\
+cat >$WORK\b150\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile internal/chacha8rand=$WORK\b012\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b150\\_pkg_.a" -trimpath "$WORK\\b150=>" -p math/rand/v2 -lang=go1.23 -std -complete -buildid hGVElWYehSRfQAN9jP4l/hGVElWYehSRfQAN9jP4l -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b150\\importcfg" -pack "E:\\go1.23.3\\src\\math\\rand\\v2\\chacha8.go" "E:\\go1.23.3\\src\\math\\rand\\v2\\exp.go" "E:\\go1.23.3\\src\\math\\rand\\v2\\normal.go" "E:\\go1.23.3\\src\\math\\rand\\v2\\pcg.go" "E:\\go1.23.3\\src\\math\\rand\\v2\\rand.go" "E:\\go1.23.3\\src\\math\\rand\\v2\\zipf.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b150\\_pkg_.a" # internal
+
+#
+# internal/concurrent
+#
+
+mkdir -p $WORK\b149\
+cat >$WORK\b149\importcfg << 'EOF' # internal
+# import config
+packagefile internal/abi=$WORK\b005\_pkg_.a
+packagefile internal/goarch=$WORK\b006\_pkg_.a
+packagefile math/rand/v2=$WORK\b150\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b149\\_pkg_.a" -trimpath "$WORK\\b149=>" -p internal/concurrent -lang=go1.23 -std -complete -buildid IPl3T2wFBKzZX8_MgkhN/IPl3T2wFBKzZX8_MgkhN -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b149\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\concurrent\\hashtriemap.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b149\\_pkg_.a" # internal
+
+#
+# internal/weak
+#
+
+mkdir -p $WORK\b151\
+cat >$WORK\b151\importcfg << 'EOF' # internal
+# import config
+packagefile internal/abi=$WORK\b005\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b151\\_pkg_.a" -trimpath "$WORK\\b151=>" -p internal/weak -lang=go1.23 -std -complete -buildid hepozytw_GzN4pnNY56f/hepozytw_GzN4pnNY56f -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b151\\importcfg" -pack "E:\\go1.23.3\\src\\internal\\weak\\pointer.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b151\\_pkg_.a" # internal
+
+#
+# unique
+#
+
+mkdir -p $WORK\b148\
+cat >$WORK\b148\importcfg << 'EOF' # internal
+# import config
+packagefile internal/abi=$WORK\b005\_pkg_.a
+packagefile internal/concurrent=$WORK\b149\_pkg_.a
+packagefile internal/stringslite=$WORK\b021\_pkg_.a
+packagefile internal/weak=$WORK\b151\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b148\\_pkg_.a" -trimpath "$WORK\\b148=>" -p unique -lang=go1.23 -std -complete -buildid 1fYWo9JkzKl6mW2msLig/1fYWo9JkzKl6mW2msLig -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b148\\importcfg" -pack "E:\\go1.23.3\\src\\unique\\clone.go" "E:\\go1.23.3\\src\\unique\\doc.go" "E:\\go1.23.3\\src\\unique\\handle.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b148\\_pkg_.a" # internal
+
+#
+# net/netip
+#
+
+mkdir -p $WORK\b147\
+cat >$WORK\b147\importcfg << 'EOF' # internal
+# import config
+packagefile cmp=$WORK\b041\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/bytealg=$WORK\b010\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile internal/itoa=$WORK\b034\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile unique=$WORK\b148\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b147\\_pkg_.a" -trimpath "$WORK\\b147=>" -p net/netip -lang=go1.23 -std -complete -buildid oRaE9DAA5QYsZJyr0PiN/oRaE9DAA5QYsZJyr0PiN -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b147\\importcfg" -pack "E:\\go1.23.3\\src\\net\\netip\\netip.go" "E:\\go1.23.3\\src\\net\\netip\\uint128.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b147\\_pkg_.a" # internal
+
+#
+# net
+#
+
+mkdir -p $WORK\b143\
+cat >$WORK\b143\importcfg << 'EOF' # internal
+# import config
+importmap golang.org/x/net/dns/dnsmessage=vendor/golang.org/x/net/dns/dnsmessage
+packagefile cmp=$WORK\b041\_pkg_.a
+packagefile context=$WORK\b002\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile vendor/golang.org/x/net/dns/dnsmessage=$WORK\b144\_pkg_.a
+packagefile internal/bytealg=$WORK\b010\_pkg_.a
+packagefile internal/godebug=$WORK\b028\_pkg_.a
+packagefile internal/itoa=$WORK\b034\_pkg_.a
+packagefile internal/nettrace=$WORK\b145\_pkg_.a
+packagefile internal/poll=$WORK\b054\_pkg_.a
+packagefile internal/singleflight=$WORK\b146\_pkg_.a
+packagefile internal/stringslite=$WORK\b021\_pkg_.a
+packagefile internal/syscall/windows=$WORK\b055\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile io/fs=$WORK\b052\_pkg_.a
+packagefile net/netip=$WORK\b147\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile syscall=$WORK\b032\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b143\\_pkg_.a" -trimpath "$WORK\\b143=>" -p net -lang=go1.23 -std -buildid ucPM3UYoHFp_RSB_mpr-/ucPM3UYoHFp_RSB_mpr- -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b143\\importcfg" -pack "E:\\go1.23.3\\src\\net\\addrselect.go" "E:\\go1.23.3\\src\\net\\conf.go" "E:\\go1.23.3\\src\\net\\dial.go" "E:\\go1.23.3\\src\\net\\dnsclient.go" "E:\\go1.23.3\\src\\net\\dnsclient_unix.go" "E:\\go1.23.3\\src\\net\\dnsconfig.go" "E:\\go1.23.3\\src\\net\\dnsconfig_windows.go" "E:\\go1.23.3\\src\\net\\error_posix.go" "E:\\go1.23.3\\src\\net\\error_windows.go" "E:\\go1.23.3\\src\\net\\fd_posix.go" "E:\\go1.23.3\\src\\net\\fd_windows.go" "E:\\go1.23.3\\src\\net\\file.go" "E:\\go1.23.3\\src\\net\\file_windows.go" "E:\\go1.23.3\\src\\net\\hook.go" "E:\\go1.23.3\\src\\net\\hook_windows.go" "E:\\go1.23.3\\src\\net\\hosts.go" "E:\\go1.23.3\\src\\net\\interface.go" "E:\\go1.23.3\\src\\net\\interface_windows.go" "E:\\go1.23.3\\src\\net\\ip.go" "E:\\go1.23.3\\src\\net\\iprawsock.go" "E:\\go1.23.3\\src\\net\\iprawsock_posix.go" "E:\\go1.23.3\\src\\net\\ipsock.go" "E:\\go1.23.3\\src\\net\\ipsock_posix.go" "E:\\go1.23.3\\src\\net\\lookup.go" "E:\\go1.23.3\\src\\net\\lookup_windows.go" "E:\\go1.23.3\\src\\net\\mac.go" "E:\\go1.23.3\\src\\net\\mptcpsock_stub.go" "E:\\go1.23.3\\src\\net\\net.go" "E:\\go1.23.3\\src\\net\\netcgo_off.go" "E:\\go1.23.3\\src\\net\\netgo_off.go" "E:\\go1.23.3\\src\\net\\nss.go" "E:\\go1.23.3\\src\\net\\parse.go" "E:\\go1.23.3\\src\\net\\pipe.go" "E:\\go1.23.3\\src\\net\\port.go" "E:\\go1.23.3\\src\\net\\rawconn.go" "E:\\go1.23.3\\src\\net\\sendfile_windows.go" "E:\\go1.23.3\\src\\net\\sock_posix.go" "E:\\go1.23.3\\src\\net\\sock_windows.go" "E:\\go1.23.3\\src\\net\\sockaddr_posix.go" "E:\\go1.23.3\\src\\net\\sockopt_posix.go" "E:\\go1.23.3\\src\\net\\sockopt_windows.go" "E:\\go1.23.3\\src\\net\\sockoptip_posix.go" "E:\\go1.23.3\\src\\net\\sockoptip_windows.go" "E:\\go1.23.3\\src\\net\\splice_stub.go" "E:\\go1.23.3\\src\\net\\tcpsock.go" "E:\\go1.23.3\\src\\net\\tcpsock_posix.go" "E:\\go1.23.3\\src\\net\\tcpsock_windows.go" "E:\\go1.23.3\\src\\net\\tcpsockopt_posix.go" "E:\\go1.23.3\\src\\net\\tcpsockopt_windows.go" "E:\\go1.23.3\\src\\net\\udpsock.go" "E:\\go1.23.3\\src\\net\\udpsock_posix.go" "E:\\go1.23.3\\src\\net\\unixsock.go" "E:\\go1.23.3\\src\\net\\unixsock_posix.go" "E:\\go1.23.3\\src\\net\\unixsock_readmsg_other.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b143\\_pkg_.a" # internal
+
+#
+# crypto/x509
+#
+
+mkdir -p $WORK\b139\
+cat >$WORK\b139\importcfg << 'EOF' # internal
+# import config
+importmap golang.org/x/crypto/cryptobyte=vendor/golang.org/x/crypto/cryptobyte
+importmap golang.org/x/crypto/cryptobyte/asn1=vendor/golang.org/x/crypto/cryptobyte/asn1
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile crypto=$WORK\b101\_pkg_.a
+packagefile crypto/aes=$WORK\b102\_pkg_.a
+packagefile crypto/cipher=$WORK\b103\_pkg_.a
+packagefile crypto/des=$WORK\b108\_pkg_.a
+packagefile crypto/dsa=$WORK\b140\_pkg_.a
+packagefile crypto/ecdh=$WORK\b109\_pkg_.a
+packagefile crypto/ecdsa=$WORK\b114\_pkg_.a
+packagefile crypto/ed25519=$WORK\b122\_pkg_.a
+packagefile crypto/elliptic=$WORK\b115\_pkg_.a
+packagefile crypto/md5=$WORK\b134\_pkg_.a
+packagefile crypto/rsa=$WORK\b136\_pkg_.a
+packagefile crypto/sha1=$WORK\b137\_pkg_.a
+packagefile crypto/sha256=$WORK\b138\_pkg_.a
+packagefile crypto/sha512=$WORK\b118\_pkg_.a
+packagefile crypto/x509/pkix=$WORK\b141\_pkg_.a
+packagefile encoding/asn1=$WORK\b120\_pkg_.a
+packagefile encoding/hex=$WORK\b084\_pkg_.a
+packagefile encoding/pem=$WORK\b142\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile vendor/golang.org/x/crypto/cryptobyte=$WORK\b119\_pkg_.a
+packagefile vendor/golang.org/x/crypto/cryptobyte/asn1=$WORK\b121\_pkg_.a
+packagefile internal/godebug=$WORK\b028\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile math/big=$WORK\b098\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile syscall=$WORK\b032\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+packagefile unicode/utf16=$WORK\b037\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b139\\_pkg_.a" -trimpath "$WORK\\b139=>" -p crypto/x509 -lang=go1.23 -std -complete -buildid 0wMdLLryrZKlUSZk9uKv/0wMdLLryrZKlUSZk9uKv -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b139\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\x509\\cert_pool.go" "E:\\go1.23.3\\src\\crypto\\x509\\notboring.go" "E:\\go1.23.3\\src\\crypto\\x509\\oid.go" "E:\\go1.23.3\\src\\crypto\\x509\\parser.go" "E:\\go1.23.3\\src\\crypto\\x509\\pem_decrypt.go" "E:\\go1.23.3\\src\\crypto\\x509\\pkcs1.go" "E:\\go1.23.3\\src\\crypto\\x509\\pkcs8.go" "E:\\go1.23.3\\src\\crypto\\x509\\root.go" "E:\\go1.23.3\\src\\crypto\\x509\\root_windows.go" "E:\\go1.23.3\\src\\crypto\\x509\\sec1.go" "E:\\go1.23.3\\src\\crypto\\x509\\verify.go" "E:\\go1.23.3\\src\\crypto\\x509\\x509.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b139\\_pkg_.a" # internal
+
+#
+# crypto/tls
+#
+
+mkdir -p $WORK\b100\
+cat >$WORK\b100\importcfg << 'EOF' # internal
+# import config
+importmap golang.org/x/crypto/chacha20poly1305=vendor/golang.org/x/crypto/chacha20poly1305
+importmap golang.org/x/crypto/cryptobyte=vendor/golang.org/x/crypto/cryptobyte
+importmap golang.org/x/crypto/hkdf=vendor/golang.org/x/crypto/hkdf
+importmap golang.org/x/crypto/sha3=vendor/golang.org/x/crypto/sha3
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile container/list=$WORK\b072\_pkg_.a
+packagefile context=$WORK\b002\_pkg_.a
+packagefile crypto=$WORK\b101\_pkg_.a
+packagefile crypto/aes=$WORK\b102\_pkg_.a
+packagefile crypto/cipher=$WORK\b103\_pkg_.a
+packagefile crypto/des=$WORK\b108\_pkg_.a
+packagefile crypto/ecdh=$WORK\b109\_pkg_.a
+packagefile crypto/ecdsa=$WORK\b114\_pkg_.a
+packagefile crypto/ed25519=$WORK\b122\_pkg_.a
+packagefile crypto/elliptic=$WORK\b115\_pkg_.a
+packagefile crypto/hmac=$WORK\b124\_pkg_.a
+packagefile crypto/internal/boring=$WORK\b106\_pkg_.a
+packagefile crypto/internal/hpke=$WORK\b125\_pkg_.a
+packagefile crypto/internal/mlkem768=$WORK\b132\_pkg_.a
+packagefile crypto/md5=$WORK\b134\_pkg_.a
+packagefile crypto/rand=$WORK\b096\_pkg_.a
+packagefile crypto/rc4=$WORK\b135\_pkg_.a
+packagefile crypto/rsa=$WORK\b136\_pkg_.a
+packagefile crypto/sha1=$WORK\b137\_pkg_.a
+packagefile crypto/sha256=$WORK\b138\_pkg_.a
+packagefile crypto/sha512=$WORK\b118\_pkg_.a
+packagefile crypto/subtle=$WORK\b105\_pkg_.a
+packagefile crypto/x509=$WORK\b139\_pkg_.a
+packagefile encoding/pem=$WORK\b142\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile vendor/golang.org/x/crypto/chacha20poly1305=$WORK\b126\_pkg_.a
+packagefile vendor/golang.org/x/crypto/cryptobyte=$WORK\b119\_pkg_.a
+packagefile vendor/golang.org/x/crypto/hkdf=$WORK\b131\_pkg_.a
+packagefile vendor/golang.org/x/crypto/sha3=$WORK\b133\_pkg_.a
+packagefile hash=$WORK\b095\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile internal/cpu=$WORK\b011\_pkg_.a
+packagefile internal/godebug=$WORK\b028\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b100\\_pkg_.a" -trimpath "$WORK\\b100=>" -p crypto/tls -lang=go1.23 -std -complete -buildid dGmZ6AMCnqhx-TQ80YfD/dGmZ6AMCnqhx-TQ80YfD -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b100\\importcfg" -pack "E:\\go1.23.3\\src\\crypto\\tls\\alert.go" "E:\\go1.23.3\\src\\crypto\\tls\\auth.go" "E:\\go1.23.3\\src\\crypto\\tls\\cache.go" "E:\\go1.23.3\\src\\crypto\\tls\\cipher_suites.go" "E:\\go1.23.3\\src\\crypto\\tls\\common.go" "E:\\go1.23.3\\src\\crypto\\tls\\common_string.go" "E:\\go1.23.3\\src\\crypto\\tls\\conn.go" "E:\\go1.23.3\\src\\crypto\\tls\\defaults.go" "E:\\go1.23.3\\src\\crypto\\tls\\ech.go" "E:\\go1.23.3\\src\\crypto\\tls\\handshake_client.go" "E:\\go1.23.3\\src\\crypto\\tls\\handshake_client_tls13.go" "E:\\go1.23.3\\src\\crypto\\tls\\handshake_messages.go" "E:\\go1.23.3\\src\\crypto\\tls\\handshake_server.go" "E:\\go1.23.3\\src\\crypto\\tls\\handshake_server_tls13.go" "E:\\go1.23.3\\src\\crypto\\tls\\key_agreement.go" "E:\\go1.23.3\\src\\crypto\\tls\\key_schedule.go" "E:\\go1.23.3\\src\\crypto\\tls\\notboring.go" "E:\\go1.23.3\\src\\crypto\\tls\\prf.go" "E:\\go1.23.3\\src\\crypto\\tls\\quic.go" "E:\\go1.23.3\\src\\crypto\\tls\\ticket.go" "E:\\go1.23.3\\src\\crypto\\tls\\tls.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b100\\_pkg_.a" # internal
+
+#
+# vendor/golang.org/x/text/transform
+#
+
+mkdir -p $WORK\b155\
+cat >$WORK\b155\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b155\\_pkg_.a" -trimpath "$WORK\\b155=>" -p vendor/golang.org/x/text/transform -lang=go1.23 -std -complete -buildid XyxGAokvMDv5vZrUS81U/XyxGAokvMDv5vZrUS81U -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b155\\importcfg" -pack "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\text\\transform\\transform.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b155\\_pkg_.a" # internal
+
+#
+# vendor/golang.org/x/text/unicode/bidi
+#
+
+mkdir -p $WORK\b156\
+cat >$WORK\b156\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile container/list=$WORK\b072\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile log=$WORK\b067\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b156\\_pkg_.a" -trimpath "$WORK\\b156=>" -p vendor/golang.org/x/text/unicode/bidi -lang=go1.23 -std -complete -buildid fmVxWPmjQHBxAh7DSaMO/fmVxWPmjQHBxAh7DSaMO -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b156\\importcfg" -pack "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\text\\unicode\\bidi\\bidi.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\text\\unicode\\bidi\\bracket.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\text\\unicode\\bidi\\core.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\text\\unicode\\bidi\\prop.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\text\\unicode\\bidi\\tables15.0.0.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\text\\unicode\\bidi\\trieval.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b156\\_pkg_.a" # internal
+
+#
+# vendor/golang.org/x/text/secure/bidirule
+#
+
+mkdir -p $WORK\b154\
+cat >$WORK\b154\importcfg << 'EOF' # internal
+# import config
+importmap golang.org/x/text/transform=vendor/golang.org/x/text/transform
+importmap golang.org/x/text/unicode/bidi=vendor/golang.org/x/text/unicode/bidi
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile vendor/golang.org/x/text/transform=$WORK\b155\_pkg_.a
+packagefile vendor/golang.org/x/text/unicode/bidi=$WORK\b156\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b154\\_pkg_.a" -trimpath "$WORK\\b154=>" -p vendor/golang.org/x/text/secure/bidirule -lang=go1.23 -std -complete -buildid BkVL5T8UQqMGMDrdXsMA/BkVL5T8UQqMGMDrdXsMA -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b154\\importcfg" -pack "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\text\\secure\\bidirule\\bidirule.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\text\\secure\\bidirule\\bidirule10.0.0.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b154\\_pkg_.a" # internal
+
+#
+# vendor/golang.org/x/text/unicode/norm
+#
+
+mkdir -p $WORK\b157\
+cat >$WORK\b157\importcfg << 'EOF' # internal
+# import config
+importmap golang.org/x/text/transform=vendor/golang.org/x/text/transform
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile vendor/golang.org/x/text/transform=$WORK\b155\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b157\\_pkg_.a" -trimpath "$WORK\\b157=>" -p vendor/golang.org/x/text/unicode/norm -lang=go1.23 -std -complete -buildid Jj2rspqYXXBWHjV23AYx/Jj2rspqYXXBWHjV23AYx -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b157\\importcfg" -pack "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\text\\unicode\\norm\\composition.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\text\\unicode\\norm\\forminfo.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\text\\unicode\\norm\\input.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\text\\unicode\\norm\\iter.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\text\\unicode\\norm\\normalize.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\text\\unicode\\norm\\readwriter.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\text\\unicode\\norm\\tables15.0.0.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\text\\unicode\\norm\\transform.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\text\\unicode\\norm\\trie.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b157\\_pkg_.a" # internal
+
+#
+# vendor/golang.org/x/net/idna
+#
+
+mkdir -p $WORK\b153\
+cat >$WORK\b153\importcfg << 'EOF' # internal
+# import config
+importmap golang.org/x/text/secure/bidirule=vendor/golang.org/x/text/secure/bidirule
+importmap golang.org/x/text/unicode/bidi=vendor/golang.org/x/text/unicode/bidi
+importmap golang.org/x/text/unicode/norm=vendor/golang.org/x/text/unicode/norm
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile vendor/golang.org/x/text/secure/bidirule=$WORK\b154\_pkg_.a
+packagefile vendor/golang.org/x/text/unicode/bidi=$WORK\b156\_pkg_.a
+packagefile vendor/golang.org/x/text/unicode/norm=$WORK\b157\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b153\\_pkg_.a" -trimpath "$WORK\\b153=>" -p vendor/golang.org/x/net/idna -lang=go1.23 -std -complete -buildid zI4TRl0ffeYolbS2gLKW/zI4TRl0ffeYolbS2gLKW -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b153\\importcfg" -pack "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\net\\idna\\go118.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\net\\idna\\idna10.0.0.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\net\\idna\\punycode.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\net\\idna\\tables15.0.0.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\net\\idna\\trie.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\net\\idna\\trie13.0.0.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\net\\idna\\trieval.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b153\\_pkg_.a" # internal
+
+#
+# net/textproto
+#
+
+mkdir -p $WORK\b158\
+cat >$WORK\b158\importcfg << 'EOF' # internal
+# import config
+packagefile bufio=$WORK\b091\_pkg_.a
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b158\\_pkg_.a" -trimpath "$WORK\\b158=>" -p net/textproto -lang=go1.23 -std -complete -buildid zQJFiD8LVkDxrtT6ZRbo/zQJFiD8LVkDxrtT6ZRbo -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b158\\importcfg" -pack "E:\\go1.23.3\\src\\net\\textproto\\header.go" "E:\\go1.23.3\\src\\net\\textproto\\pipeline.go" "E:\\go1.23.3\\src\\net\\textproto\\reader.go" "E:\\go1.23.3\\src\\net\\textproto\\textproto.go" "E:\\go1.23.3\\src\\net\\textproto\\writer.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b158\\_pkg_.a" # internal
+
+#
+# vendor/golang.org/x/net/http/httpguts
+#
+
+mkdir -p $WORK\b152\
+cat >$WORK\b152\importcfg << 'EOF' # internal
+# import config
+importmap golang.org/x/net/idna=vendor/golang.org/x/net/idna
+packagefile vendor/golang.org/x/net/idna=$WORK\b153\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile net/textproto=$WORK\b158\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b152\\_pkg_.a" -trimpath "$WORK\\b152=>" -p vendor/golang.org/x/net/http/httpguts -lang=go1.23 -std -complete -buildid 9-YlXJrscMK-nuLeJn-a/9-YlXJrscMK-nuLeJn-a -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b152\\importcfg" -pack "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\net\\http\\httpguts\\guts.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\net\\http\\httpguts\\httplex.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b152\\_pkg_.a" # internal
+
+#
+# vendor/golang.org/x/net/http/httpproxy
+#
+
+mkdir -p $WORK\b159\
+cat >$WORK\b159\importcfg << 'EOF' # internal
+# import config
+importmap golang.org/x/net/idna=vendor/golang.org/x/net/idna
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile vendor/golang.org/x/net/idna=$WORK\b153\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b159\\_pkg_.a" -trimpath "$WORK\\b159=>" -p vendor/golang.org/x/net/http/httpproxy -lang=go1.23 -std -complete -buildid _GHkmeSCIGE4TCtIH0Bo/_GHkmeSCIGE4TCtIH0Bo -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b159\\importcfg" -pack "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\net\\http\\httpproxy\\proxy.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b159\\_pkg_.a" # internal
+
+#
+# vendor/golang.org/x/net/http2/hpack
+#
+
+mkdir -p $WORK\b160\
+cat >$WORK\b160\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b160\\_pkg_.a" -trimpath "$WORK\\b160=>" -p vendor/golang.org/x/net/http2/hpack -lang=go1.23 -std -complete -buildid pw2wVjoGazu3AHYIz_-2/pw2wVjoGazu3AHYIz_-2 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b160\\importcfg" -pack "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\net\\http2\\hpack\\encode.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\net\\http2\\hpack\\hpack.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\net\\http2\\hpack\\huffman.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\net\\http2\\hpack\\static_table.go" "E:\\go1.23.3\\src\\vendor\\golang.org\\x\\net\\http2\\hpack\\tables.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b160\\_pkg_.a" # internal
+
+#
+# maps
+#
+
+mkdir -p $WORK\b161\
+cat >$WORK\b161\importcfg << 'EOF' # internal
+# import config
+packagefile iter=$WORK\b043\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b161\\_pkg_.a" -trimpath "$WORK\\b161=>" -p maps -lang=go1.23 -std -complete -buildid o6EK4RlbSysPCURGBSFW/o6EK4RlbSysPCURGBSFW -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b161\\importcfg" -pack "E:\\go1.23.3\\src\\maps\\iter.go" "E:\\go1.23.3\\src\\maps\\maps.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b161\\_pkg_.a" # internal
+
+#
+# mime
+#
+
+mkdir -p $WORK\b162\
+cat >$WORK\b162\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile encoding/base64=$WORK\b064\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile internal/syscall/windows/registry=$WORK\b030\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b162\\_pkg_.a" -trimpath "$WORK\\b162=>" -p mime -lang=go1.23 -std -complete -buildid -2-VgQ0DwOIPM2bLJFsL/-2-VgQ0DwOIPM2bLJFsL -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b162\\importcfg" -pack "E:\\go1.23.3\\src\\mime\\encodedword.go" "E:\\go1.23.3\\src\\mime\\grammar.go" "E:\\go1.23.3\\src\\mime\\mediatype.go" "E:\\go1.23.3\\src\\mime\\type.go" "E:\\go1.23.3\\src\\mime\\type_windows.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b162\\_pkg_.a" # internal
+
+#
+# mime/quotedprintable
+#
+
+mkdir -p $WORK\b164\
+cat >$WORK\b164\importcfg << 'EOF' # internal
+# import config
+packagefile bufio=$WORK\b091\_pkg_.a
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b164\\_pkg_.a" -trimpath "$WORK\\b164=>" -p mime/quotedprintable -lang=go1.23 -std -complete -buildid _Ah9GToMDur214qpfhg7/_Ah9GToMDur214qpfhg7 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b164\\importcfg" -pack "E:\\go1.23.3\\src\\mime\\quotedprintable\\reader.go" "E:\\go1.23.3\\src\\mime\\quotedprintable\\writer.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b164\\_pkg_.a" # internal
+
+#
+# mime/multipart
+#
+
+mkdir -p $WORK\b163\
+cat >$WORK\b163\importcfg << 'EOF' # internal
+# import config
+packagefile bufio=$WORK\b091\_pkg_.a
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile crypto/rand=$WORK\b096\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile internal/godebug=$WORK\b028\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile mime=$WORK\b162\_pkg_.a
+packagefile mime/quotedprintable=$WORK\b164\_pkg_.a
+packagefile net/textproto=$WORK\b158\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile path/filepath=$WORK\b075\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b163\\_pkg_.a" -trimpath "$WORK\\b163=>" -p mime/multipart -lang=go1.23 -std -complete -buildid GsS66zKJMYk0AR1bw4WW/GsS66zKJMYk0AR1bw4WW -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b163\\importcfg" -pack "E:\\go1.23.3\\src\\mime\\multipart\\formdata.go" "E:\\go1.23.3\\src\\mime\\multipart\\multipart.go" "E:\\go1.23.3\\src\\mime\\multipart\\readmimeheader.go" "E:\\go1.23.3\\src\\mime\\multipart\\writer.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b163\\_pkg_.a" # internal
+
+#
+# net/http/httptrace
+#
+
+mkdir -p $WORK\b165\
+cat >$WORK\b165\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile crypto/tls=$WORK\b100\_pkg_.a
+packagefile internal/nettrace=$WORK\b145\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile net/textproto=$WORK\b158\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b165\\_pkg_.a" -trimpath "$WORK\\b165=>" -p net/http/httptrace -lang=go1.23 -std -complete -buildid f_5M3WGFeE_06a-6YHPF/f_5M3WGFeE_06a-6YHPF -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b165\\importcfg" -pack "E:\\go1.23.3\\src\\net\\http\\httptrace\\trace.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b165\\_pkg_.a" # internal
+
+#
+# net/http/internal
+#
+
+mkdir -p $WORK\b166\
+cat >$WORK\b166\importcfg << 'EOF' # internal
+# import config
+packagefile bufio=$WORK\b091\_pkg_.a
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b166\\_pkg_.a" -trimpath "$WORK\\b166=>" -p net/http/internal -lang=go1.23 -std -complete -buildid T5wL_0PqO4I7owbobPtf/T5wL_0PqO4I7owbobPtf -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b166\\importcfg" -pack "E:\\go1.23.3\\src\\net\\http\\internal\\chunked.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b166\\_pkg_.a" # internal
+
+#
+# net/http/internal/ascii
+#
+
+mkdir -p $WORK\b167\
+cat >$WORK\b167\importcfg << 'EOF' # internal
+# import config
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b167\\_pkg_.a" -trimpath "$WORK\\b167=>" -p net/http/internal/ascii -lang=go1.23 -std -complete -buildid xSx__4tCxgftqvkGwB2m/xSx__4tCxgftqvkGwB2m -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b167\\importcfg" -pack "E:\\go1.23.3\\src\\net\\http\\internal\\ascii\\print.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b167\\_pkg_.a" # internal
+
+#
+# net/http
+#
+
+mkdir -p $WORK\b090\
+cat >$WORK\b090\importcfg << 'EOF' # internal
+# import config
+importmap golang.org/x/net/http/httpguts=vendor/golang.org/x/net/http/httpguts
+importmap golang.org/x/net/http/httpproxy=vendor/golang.org/x/net/http/httpproxy
+importmap golang.org/x/net/http2/hpack=vendor/golang.org/x/net/http2/hpack
+importmap golang.org/x/net/idna=vendor/golang.org/x/net/idna
+packagefile bufio=$WORK\b091\_pkg_.a
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile compress/gzip=$WORK\b092\_pkg_.a
+packagefile container/list=$WORK\b072\_pkg_.a
+packagefile context=$WORK\b002\_pkg_.a
+packagefile crypto/rand=$WORK\b096\_pkg_.a
+packagefile crypto/tls=$WORK\b100\_pkg_.a
+packagefile encoding/base64=$WORK\b064\_pkg_.a
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile vendor/golang.org/x/net/http/httpguts=$WORK\b152\_pkg_.a
+packagefile vendor/golang.org/x/net/http/httpproxy=$WORK\b159\_pkg_.a
+packagefile vendor/golang.org/x/net/http2/hpack=$WORK\b160\_pkg_.a
+packagefile vendor/golang.org/x/net/idna=$WORK\b153\_pkg_.a
+packagefile internal/godebug=$WORK\b028\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile io/fs=$WORK\b052\_pkg_.a
+packagefile log=$WORK\b067\_pkg_.a
+packagefile maps=$WORK\b161\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+packagefile math/rand=$WORK\b099\_pkg_.a
+packagefile mime=$WORK\b162\_pkg_.a
+packagefile mime/multipart=$WORK\b163\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile net/http/httptrace=$WORK\b165\_pkg_.a
+packagefile net/http/internal=$WORK\b166\_pkg_.a
+packagefile net/http/internal/ascii=$WORK\b167\_pkg_.a
+packagefile net/textproto=$WORK\b158\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile path=$WORK\b053\_pkg_.a
+packagefile path/filepath=$WORK\b075\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b090\\_pkg_.a" -trimpath "$WORK\\b090=>" -p net/http -lang=go1.23 -std -complete -buildid hQ6hZdC0Qk2eA5gC_EOB/hQ6hZdC0Qk2eA5gC_EOB -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b090\\importcfg" -pack "E:\\go1.23.3\\src\\net\\http\\client.go" "E:\\go1.23.3\\src\\net\\http\\clone.go" "E:\\go1.23.3\\src\\net\\http\\cookie.go" "E:\\go1.23.3\\src\\net\\http\\doc.go" "E:\\go1.23.3\\src\\net\\http\\filetransport.go" "E:\\go1.23.3\\src\\net\\http\\fs.go" "E:\\go1.23.3\\src\\net\\http\\h2_bundle.go" "E:\\go1.23.3\\src\\net\\http\\h2_error.go" "E:\\go1.23.3\\src\\net\\http\\header.go" "E:\\go1.23.3\\src\\net\\http\\http.go" "E:\\go1.23.3\\src\\net\\http\\jar.go" "E:\\go1.23.3\\src\\net\\http\\mapping.go" "E:\\go1.23.3\\src\\net\\http\\method.go" "E:\\go1.23.3\\src\\net\\http\\pattern.go" "E:\\go1.23.3\\src\\net\\http\\request.go" "E:\\go1.23.3\\src\\net\\http\\response.go" "E:\\go1.23.3\\src\\net\\http\\responsecontroller.go" "E:\\go1.23.3\\src\\net\\http\\roundtrip.go" "E:\\go1.23.3\\src\\net\\http\\routing_index.go" "E:\\go1.23.3\\src\\net\\http\\routing_tree.go" "E:\\go1.23.3\\src\\net\\http\\servemux121.go" "E:\\go1.23.3\\src\\net\\http\\server.go" "E:\\go1.23.3\\src\\net\\http\\sniff.go" "E:\\go1.23.3\\src\\net\\http\\socks_bundle.go" "E:\\go1.23.3\\src\\net\\http\\status.go" "E:\\go1.23.3\\src\\net\\http\\transfer.go" "E:\\go1.23.3\\src\\net\\http\\transport.go" "E:\\go1.23.3\\src\\net\\http\\transport_default_other.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b090\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/propagation
+#
+
+mkdir -p $WORK\b083\
+cat >$WORK\b083\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile encoding/hex=$WORK\b084\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel/baggage=$WORK\b085\_pkg_.a
+packagefile go.opentelemetry.io/otel/trace=$WORK\b088\_pkg_.a
+packagefile net/http=$WORK\b090\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b083\\_pkg_.a" -trimpath "$WORK\\b083=>" -p go.opentelemetry.io/otel/propagation -lang=go1.22 -complete -buildid Bp4L7j-NXManCUnFeBce/Bp4L7j-NXManCUnFeBce -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b083\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\propagation\\baggage.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\propagation\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\propagation\\propagation.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\propagation\\trace_context.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b083\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/internal/global
+#
+
+mkdir -p $WORK\b071\
+cat >$WORK\b071\importcfg << 'EOF' # internal
+# import config
+packagefile container/list=$WORK\b072\_pkg_.a
+packagefile context=$WORK\b002\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile github.com/go-logr/logr=$WORK\b059\_pkg_.a
+packagefile github.com/go-logr/stdr=$WORK\b073\_pkg_.a
+packagefile go.opentelemetry.io/otel/attribute=$WORK\b076\_pkg_.a
+packagefile go.opentelemetry.io/otel/codes=$WORK\b080\_pkg_.a
+packagefile go.opentelemetry.io/otel/metric=$WORK\b081\_pkg_.a
+packagefile go.opentelemetry.io/otel/metric/embedded=$WORK\b082\_pkg_.a
+packagefile go.opentelemetry.io/otel/propagation=$WORK\b083\_pkg_.a
+packagefile go.opentelemetry.io/otel/trace=$WORK\b088\_pkg_.a
+packagefile go.opentelemetry.io/otel/trace/embedded=$WORK\b089\_pkg_.a
+packagefile log=$WORK\b067\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b071\\_pkg_.a" -trimpath "$WORK\\b071=>" -p go.opentelemetry.io/otel/internal/global -lang=go1.22 -complete -buildid G14MXlAzdk8x646UKP_f/G14MXlAzdk8x646UKP_f -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b071\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\internal\\global\\handler.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\internal\\global\\instruments.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\internal\\global\\internal_logging.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\internal\\global\\meter.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\internal\\global\\propagator.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\internal\\global\\state.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\internal\\global\\trace.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b071\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel
+#
+
+mkdir -p $WORK\b058\
+cat >$WORK\b058\importcfg << 'EOF' # internal
+# import config
+packagefile github.com/go-logr/logr=$WORK\b059\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal/global=$WORK\b071\_pkg_.a
+packagefile go.opentelemetry.io/otel/metric=$WORK\b081\_pkg_.a
+packagefile go.opentelemetry.io/otel/propagation=$WORK\b083\_pkg_.a
+packagefile go.opentelemetry.io/otel/trace=$WORK\b088\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b058\\_pkg_.a" -trimpath "$WORK\\b058=>" -p go.opentelemetry.io/otel -lang=go1.22 -complete -buildid 1ICS_e9ufsRNzqCNDhhj/1ICS_e9ufsRNzqCNDhhj -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b058\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\error_handler.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\handler.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\internal_logging.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\metric.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\propagation.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\trace.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\version.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b058\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal
+#
+
+mkdir -p $WORK\b169\
+cat >$WORK\b169\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b169\\_pkg_.a" -trimpath "$WORK\\b169=>" -p go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal -lang=go1.22 -complete -buildid mTAhkVuDmtVE_Mq23LrN/mTAhkVuDmtVE_Mq23LrN -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b169\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetricgrpc@v1.31.0\\internal\\gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetricgrpc@v1.31.0\\internal\\partialsuccess.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b169\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal/envconfig
+#
+
+mkdir -p $WORK\b171\
+cat >$WORK\b171\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/tls=$WORK\b100\_pkg_.a
+packagefile crypto/x509=$WORK\b139\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal/global=$WORK\b071\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b171\\_pkg_.a" -trimpath "$WORK\\b171=>" -p go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal/envconfig -lang=go1.22 -complete -buildid IpIvvR6z9sgP1nuNr71r/IpIvvR6z9sgP1nuNr71r -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b171\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetricgrpc@v1.31.0\\internal\\envconfig\\envconfig.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b171\\_pkg_.a" # internal
+
+#
+# github.com/cenkalti/backoff/v4
+#
+
+mkdir -p $WORK\b173\
+cat >$WORK\b173\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile math/rand=$WORK\b099\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b173\\_pkg_.a" -trimpath "$WORK\\b173=>" -p github.com/cenkalti/backoff/v4 -lang=go1.18 -complete -buildid Gb850ybNe3yUCDAineUE/Gb850ybNe3yUCDAineUE -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b173\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\cenkalti\\backoff\\v4@v4.3.0\\backoff.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\cenkalti\\backoff\\v4@v4.3.0\\context.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\cenkalti\\backoff\\v4@v4.3.0\\exponential.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\cenkalti\\backoff\\v4@v4.3.0\\retry.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\cenkalti\\backoff\\v4@v4.3.0\\ticker.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\cenkalti\\backoff\\v4@v4.3.0\\timer.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\cenkalti\\backoff\\v4@v4.3.0\\tries.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b173\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal/retry
+#
+
+mkdir -p $WORK\b172\
+cat >$WORK\b172\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile github.com/cenkalti/backoff/v4=$WORK\b173\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b172\\_pkg_.a" -trimpath "$WORK\\b172=>" -p go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal/retry -lang=go1.22 -complete -buildid j-E0v5ZIWP3libNlRykl/j-E0v5ZIWP3libNlRykl -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b172\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetricgrpc@v1.31.0\\internal\\retry\\retry.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b172\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/metric/noop
+#
+
+mkdir -p $WORK\b175\
+cat >$WORK\b175\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile go.opentelemetry.io/otel/metric=$WORK\b081\_pkg_.a
+packagefile go.opentelemetry.io/otel/metric/embedded=$WORK\b082\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b175\\_pkg_.a" -trimpath "$WORK\\b175=>" -p go.opentelemetry.io/otel/metric/noop -lang=go1.22 -complete -buildid 8fG0DTFt3Mosq38eCNFx/8fG0DTFt3Mosq38eCNFx -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b175\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\metric@v1.32.0\\noop\\noop.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b175\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/sdk/instrumentation
+#
+
+mkdir -p $WORK\b176\
+cat >$WORK\b176\importcfg << 'EOF' # internal
+# import config
+packagefile go.opentelemetry.io/otel/attribute=$WORK\b076\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b176\\_pkg_.a" -trimpath "$WORK\\b176=>" -p go.opentelemetry.io/otel/sdk/instrumentation -lang=go1.22 -complete -buildid NPP2NsyzOxv-oo-Mwqvc/NPP2NsyzOxv-oo-Mwqvc -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b176\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\instrumentation\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\instrumentation\\library.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\instrumentation\\scope.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b176\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/sdk/metric/exemplar
+#
+
+mkdir -p $WORK\b177\
+cat >$WORK\b177\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile go.opentelemetry.io/otel/attribute=$WORK\b076\_pkg_.a
+packagefile go.opentelemetry.io/otel/trace=$WORK\b088\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile math/rand=$WORK\b099\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b177\\_pkg_.a" -trimpath "$WORK\\b177=>" -p go.opentelemetry.io/otel/sdk/metric/exemplar -lang=go1.22 -complete -buildid N6046zVusPJeLjh7dwB8/N6046zVusPJeLjh7dwB8 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b177\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\exemplar\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\exemplar\\exemplar.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\exemplar\\filter.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\exemplar\\fixed_size_reservoir.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\exemplar\\histogram_reservoir.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\exemplar\\reservoir.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\exemplar\\storage.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\exemplar\\value.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b177\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/sdk/metric/internal
+#
+
+mkdir -p $WORK\b178\
+echo '# import config' > $WORK\b178\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b178\\_pkg_.a" -trimpath "$WORK\\b178=>" -p go.opentelemetry.io/otel/sdk/metric/internal -lang=go1.22 -complete -buildid PX1dSiFjjuXNgKhKdKRk/PX1dSiFjjuXNgKhKdKRk -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b178\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\internal\\reuse_slice.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b178\\_pkg_.a" # internal
+
+#
+# database/sql/driver
+#
+
+mkdir -p $WORK\b183\
+cat >$WORK\b183\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b183\\_pkg_.a" -trimpath "$WORK\\b183=>" -p database/sql/driver -lang=go1.23 -std -complete -buildid o-CKP7Mkx_CytmLoXV2W/o-CKP7Mkx_CytmLoXV2W -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b183\\importcfg" -pack "E:\\go1.23.3\\src\\database\\sql\\driver\\driver.go" "E:\\go1.23.3\\src\\database\\sql\\driver\\types.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b183\\_pkg_.a" # internal
+
+#
+# github.com/google/uuid
+#
+
+mkdir -p $WORK\b182\
+cat >$WORK\b182\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile crypto/md5=$WORK\b134\_pkg_.a
+packagefile crypto/rand=$WORK\b096\_pkg_.a
+packagefile crypto/sha1=$WORK\b137\_pkg_.a
+packagefile database/sql/driver=$WORK\b183\_pkg_.a
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile encoding/hex=$WORK\b084\_pkg_.a
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile hash=$WORK\b095\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b182\\_pkg_.a" -trimpath "$WORK\\b182=>" -p github.com/google/uuid -lang=go1.16 -complete -buildid loinOpky_ChMs-5gblDC/loinOpky_ChMs-5gblDC -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b182\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\google\\uuid@v1.6.0\\dce.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\google\\uuid@v1.6.0\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\google\\uuid@v1.6.0\\hash.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\google\\uuid@v1.6.0\\marshal.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\google\\uuid@v1.6.0\\node.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\google\\uuid@v1.6.0\\node_net.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\google\\uuid@v1.6.0\\null.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\google\\uuid@v1.6.0\\sql.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\google\\uuid@v1.6.0\\time.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\google\\uuid@v1.6.0\\util.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\google\\uuid@v1.6.0\\uuid.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\google\\uuid@v1.6.0\\version1.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\google\\uuid@v1.6.0\\version4.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\google\\uuid@v1.6.0\\version6.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\google\\uuid@v1.6.0\\version7.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b182\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/sdk
+#
+
+mkdir -p $WORK\b184\
+echo '# import config' > $WORK\b184\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b184\\_pkg_.a" -trimpath "$WORK\\b184=>" -p go.opentelemetry.io/otel/sdk -lang=go1.22 -complete -buildid D3xVwFSyGhE8h45n8xwj/D3xVwFSyGhE8h45n8xwj -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b184\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\version.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b184\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/sdk/internal/x
+#
+
+mkdir -p $WORK\b185\
+cat >$WORK\b185\importcfg << 'EOF' # internal
+# import config
+packagefile os=$WORK\b050\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b185\\_pkg_.a" -trimpath "$WORK\\b185=>" -p go.opentelemetry.io/otel/sdk/internal/x -lang=go1.22 -complete -buildid 2JWnYYZcInM4C7iHnmfc/2JWnYYZcInM4C7iHnmfc -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b185\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\internal\\x\\x.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b185\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/semconv/v1.26.0
+#
+
+mkdir -p $WORK\b186\
+cat >$WORK\b186\importcfg << 'EOF' # internal
+# import config
+packagefile go.opentelemetry.io/otel/attribute=$WORK\b076\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b186\\_pkg_.a" -trimpath "$WORK\\b186=>" -p go.opentelemetry.io/otel/semconv/v1.26.0 -lang=go1.22 -complete -buildid O7RzMZbzQdlrYN9sPuQX/O7RzMZbzQdlrYN9sPuQX -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b186\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\semconv\\v1.26.0\\attribute_group.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\semconv\\v1.26.0\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\semconv\\v1.26.0\\exception.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\semconv\\v1.26.0\\metric.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel@v1.32.0\\semconv\\v1.26.0\\schema.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b186\\_pkg_.a" # internal
+
+#
+# golang.org/x/sys/windows
+#
+
+mkdir -p $WORK\b188\
+cat >$WORK\b188\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile syscall=$WORK\b032\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+packagefile unicode/utf16=$WORK\b037\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b188\\_pkg_.a" -trimpath "$WORK\\b188=>" -p golang.org/x/sys/windows -lang=go1.18 -complete -buildid aZGV3DLkm61UV52g0MC2/aZGV3DLkm61UV52g0MC2 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b188\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\aliases.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\dll_windows.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\env_windows.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\eventlog.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\exec_windows.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\memory_windows.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\race0.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\security_windows.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\service.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\setupapi_windows.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\str.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\syscall.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\syscall_windows.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\types_windows.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\types_windows_amd64.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\zerrors_windows.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\zknownfolderids_windows.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\zsyscall_windows.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b188\\_pkg_.a" # internal
+
+#
+# golang.org/x/sys/windows/registry
+#
+
+mkdir -p $WORK\b187\
+cat >$WORK\b187\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile golang.org/x/sys/windows=$WORK\b188\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile syscall=$WORK\b032\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+packagefile unicode/utf16=$WORK\b037\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b187\\_pkg_.a" -trimpath "$WORK\\b187=>" -p golang.org/x/sys/windows/registry -lang=go1.18 -complete -buildid GOwiDhfnFFuUKVK7LnLy/GOwiDhfnFFuUKVK7LnLy -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b187\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\registry\\key.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\registry\\syscall.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\registry\\value.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\sys@v0.27.0\\windows\\registry\\zsyscall_windows.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b187\\_pkg_.a" # internal
+
+#
+# os/user
+#
+
+mkdir -p $WORK\b189\
+cat >$WORK\b189\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile internal/syscall/windows=$WORK\b055\_pkg_.a
+packagefile internal/syscall/windows/registry=$WORK\b030\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile syscall=$WORK\b032\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b189\\_pkg_.a" -trimpath "$WORK\\b189=>" -p os/user -lang=go1.23 -std -complete -buildid DuJ7uXYMjAmlFGmKidOV/DuJ7uXYMjAmlFGmKidOV -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b189\\importcfg" -pack "E:\\go1.23.3\\src\\os\\user\\lookup.go" "E:\\go1.23.3\\src\\os\\user\\lookup_windows.go" "E:\\go1.23.3\\src\\os\\user\\user.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b189\\_pkg_.a" # internal
+
+#
+# regexp/syntax
+#
+
+mkdir -p $WORK\b191\
+cat >$WORK\b191\importcfg << 'EOF' # internal
+# import config
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b191\\_pkg_.a" -trimpath "$WORK\\b191=>" -p regexp/syntax -lang=go1.23 -std -complete -buildid q8FvHQzPzUOTM1FTPqLC/q8FvHQzPzUOTM1FTPqLC -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b191\\importcfg" -pack "E:\\go1.23.3\\src\\regexp\\syntax\\compile.go" "E:\\go1.23.3\\src\\regexp\\syntax\\doc.go" "E:\\go1.23.3\\src\\regexp\\syntax\\op_string.go" "E:\\go1.23.3\\src\\regexp\\syntax\\parse.go" "E:\\go1.23.3\\src\\regexp\\syntax\\perl_groups.go" "E:\\go1.23.3\\src\\regexp\\syntax\\prog.go" "E:\\go1.23.3\\src\\regexp\\syntax\\regexp.go" "E:\\go1.23.3\\src\\regexp\\syntax\\simplify.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b191\\_pkg_.a" # internal
+
+#
+# regexp
+#
+
+mkdir -p $WORK\b190\
+cat >$WORK\b190\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile regexp/syntax=$WORK\b191\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b190\\_pkg_.a" -trimpath "$WORK\\b190=>" -p regexp -lang=go1.23 -std -complete -buildid lrgx0zHi2eHMk3znSbQT/lrgx0zHi2eHMk3znSbQT -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b190\\importcfg" -pack "E:\\go1.23.3\\src\\regexp\\backtrack.go" "E:\\go1.23.3\\src\\regexp\\exec.go" "E:\\go1.23.3\\src\\regexp\\onepass.go" "E:\\go1.23.3\\src\\regexp\\regexp.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b190\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/sdk/resource
+#
+
+mkdir -p $WORK\b181\
+cat >$WORK\b181\importcfg << 'EOF' # internal
+# import config
+packagefile bufio=$WORK\b091\_pkg_.a
+packagefile context=$WORK\b002\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile github.com/google/uuid=$WORK\b182\_pkg_.a
+packagefile go.opentelemetry.io/otel=$WORK\b058\_pkg_.a
+packagefile go.opentelemetry.io/otel/attribute=$WORK\b076\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk=$WORK\b184\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/internal/x=$WORK\b185\_pkg_.a
+packagefile go.opentelemetry.io/otel/semconv/v1.26.0=$WORK\b186\_pkg_.a
+packagefile golang.org/x/sys/windows/registry=$WORK\b187\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile os/user=$WORK\b189\_pkg_.a
+packagefile path/filepath=$WORK\b075\_pkg_.a
+packagefile regexp=$WORK\b190\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b181\\_pkg_.a" -trimpath "$WORK\\b181=>" -p go.opentelemetry.io/otel/sdk/resource -lang=go1.22 -complete -buildid srxyzO-f_prfOv7ZGYy9/srxyzO-f_prfOv7ZGYy9 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b181\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\resource\\auto.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\resource\\builtin.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\resource\\config.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\resource\\container.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\resource\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\resource\\env.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\resource\\host_id.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\resource\\host_id_windows.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\resource\\os.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\resource\\os_windows.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\resource\\process.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\resource\\resource.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b181\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/sdk/metric/metricdata
+#
+
+mkdir -p $WORK\b180\
+cat >$WORK\b180\importcfg << 'EOF' # internal
+# import config
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile go.opentelemetry.io/otel/attribute=$WORK\b076\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/instrumentation=$WORK\b176\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/resource=$WORK\b181\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b180\\_pkg_.a" -trimpath "$WORK\\b180=>" -p go.opentelemetry.io/otel/sdk/metric/metricdata -lang=go1.22 -complete -buildid BMBrBz_DtdhvMsdaMfSA/BMBrBz_DtdhvMsdaMfSA -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b180\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\metricdata\\data.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\metricdata\\temporality.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\metricdata\\temporality_string.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b180\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/sdk/metric/internal/aggregate
+#
+
+mkdir -p $WORK\b179\
+cat >$WORK\b179\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile go.opentelemetry.io/otel=$WORK\b058\_pkg_.a
+packagefile go.opentelemetry.io/otel/attribute=$WORK\b076\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric/exemplar=$WORK\b177\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric/metricdata=$WORK\b180\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b179\\_pkg_.a" -trimpath "$WORK\\b179=>" -p go.opentelemetry.io/otel/sdk/metric/internal/aggregate -lang=go1.22 -complete -buildid 6RIQliHzQlEK_lPA7MsA/6RIQliHzQlEK_lPA7MsA -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b179\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\internal\\aggregate\\aggregate.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\internal\\aggregate\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\internal\\aggregate\\drop.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\internal\\aggregate\\exemplar.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\internal\\aggregate\\exponential_histogram.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\internal\\aggregate\\filtered_reservoir.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\internal\\aggregate\\histogram.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\internal\\aggregate\\lastvalue.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\internal\\aggregate\\limit.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\internal\\aggregate\\sum.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b179\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/sdk/metric/internal/x
+#
+
+mkdir -p $WORK\b192\
+cat >$WORK\b192\importcfg << 'EOF' # internal
+# import config
+packagefile os=$WORK\b050\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b192\\_pkg_.a" -trimpath "$WORK\\b192=>" -p go.opentelemetry.io/otel/sdk/metric/internal/x -lang=go1.22 -complete -buildid 7Tbam1OZTIgpy_FMZP7O/7Tbam1OZTIgpy_FMZP7O -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b192\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\internal\\x\\x.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b192\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/sdk/metric
+#
+
+mkdir -p $WORK\b174\
+cat >$WORK\b174\importcfg << 'EOF' # internal
+# import config
+packagefile container/list=$WORK\b072\_pkg_.a
+packagefile context=$WORK\b002\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel=$WORK\b058\_pkg_.a
+packagefile go.opentelemetry.io/otel/attribute=$WORK\b076\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal/global=$WORK\b071\_pkg_.a
+packagefile go.opentelemetry.io/otel/metric=$WORK\b081\_pkg_.a
+packagefile go.opentelemetry.io/otel/metric/embedded=$WORK\b082\_pkg_.a
+packagefile go.opentelemetry.io/otel/metric/noop=$WORK\b175\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/instrumentation=$WORK\b176\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric/exemplar=$WORK\b177\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric/internal=$WORK\b178\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric/internal/aggregate=$WORK\b179\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric/internal/x=$WORK\b192\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric/metricdata=$WORK\b180\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/resource=$WORK\b181\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile regexp=$WORK\b190\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b174\\_pkg_.a" -trimpath "$WORK\\b174=>" -p go.opentelemetry.io/otel/sdk/metric -lang=go1.22 -complete -buildid mK5pm2AsDdfAWNjWUE7N/mK5pm2AsDdfAWNjWUE7N -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b174\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\aggregation.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\cache.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\config.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\env.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\exemplar.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\exporter.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\instrument.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\instrumentkind_string.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\manual_reader.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\meter.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\periodic_reader.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\pipeline.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\provider.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\reader.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\version.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk\\metric@v1.32.0\\view.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b174\\_pkg_.a" # internal
+
+#
+# golang.org/x/net/internal/timeseries
+#
+
+mkdir -p $WORK\b195\
+cat >$WORK\b195\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile log=$WORK\b067\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b195\\_pkg_.a" -trimpath "$WORK\\b195=>" -p golang.org/x/net/internal/timeseries -lang=go1.18 -complete -buildid 2tN0kqLp5n6sIDbM3p0I/2tN0kqLp5n6sIDbM3p0I -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b195\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\internal\\timeseries\\timeseries.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b195\\_pkg_.a" # internal
+
+#
+# html
+#
+
+mkdir -p $WORK\b197\
+cat >$WORK\b197\importcfg << 'EOF' # internal
+# import config
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b197\\_pkg_.a" -trimpath "$WORK\\b197=>" -p html -lang=go1.23 -std -complete -buildid mAcBgXzUCftDefB9Q3-_/mAcBgXzUCftDefB9Q3-_ -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b197\\importcfg" -pack "E:\\go1.23.3\\src\\html\\entity.go" "E:\\go1.23.3\\src\\html\\escape.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b197\\_pkg_.a" # internal
+
+#
+# text/template/parse
+#
+
+mkdir -p $WORK\b199\
+cat >$WORK\b199\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b199\\_pkg_.a" -trimpath "$WORK\\b199=>" -p text/template/parse -lang=go1.23 -std -complete -buildid PvqtNiWWMtw1TJwOWHNI/PvqtNiWWMtw1TJwOWHNI -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b199\\importcfg" -pack "E:\\go1.23.3\\src\\text\\template\\parse\\lex.go" "E:\\go1.23.3\\src\\text\\template\\parse\\node.go" "E:\\go1.23.3\\src\\text\\template\\parse\\parse.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b199\\_pkg_.a" # internal
+
+#
+# text/template
+#
+
+mkdir -p $WORK\b198\
+cat >$WORK\b198\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile internal/fmtsort=$WORK\b040\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile io/fs=$WORK\b052\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile path=$WORK\b053\_pkg_.a
+packagefile path/filepath=$WORK\b075\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile text/template/parse=$WORK\b199\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b198\\_pkg_.a" -trimpath "$WORK\\b198=>" -p text/template -lang=go1.23 -std -complete -buildid dOSrxVG4JTKO--ayhB1X/dOSrxVG4JTKO--ayhB1X -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b198\\importcfg" -pack "E:\\go1.23.3\\src\\text\\template\\doc.go" "E:\\go1.23.3\\src\\text\\template\\exec.go" "E:\\go1.23.3\\src\\text\\template\\funcs.go" "E:\\go1.23.3\\src\\text\\template\\helper.go" "E:\\go1.23.3\\src\\text\\template\\option.go" "E:\\go1.23.3\\src\\text\\template\\template.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b198\\_pkg_.a" # internal
+
+#
+# html/template
+#
+
+mkdir -p $WORK\b196\
+cat >$WORK\b196\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile html=$WORK\b197\_pkg_.a
+packagefile internal/godebug=$WORK\b028\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile io/fs=$WORK\b052\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile path=$WORK\b053\_pkg_.a
+packagefile path/filepath=$WORK\b075\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile regexp=$WORK\b190\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile text/template=$WORK\b198\_pkg_.a
+packagefile text/template/parse=$WORK\b199\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b196\\_pkg_.a" -trimpath "$WORK\\b196=>" -p html/template -lang=go1.23 -std -complete -buildid G9z7McGqA_PeMK2y-FFz/G9z7McGqA_PeMK2y-FFz -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b196\\importcfg" -pack "E:\\go1.23.3\\src\\html\\template\\attr.go" "E:\\go1.23.3\\src\\html\\template\\attr_string.go" "E:\\go1.23.3\\src\\html\\template\\content.go" "E:\\go1.23.3\\src\\html\\template\\context.go" "E:\\go1.23.3\\src\\html\\template\\css.go" "E:\\go1.23.3\\src\\html\\template\\delim_string.go" "E:\\go1.23.3\\src\\html\\template\\doc.go" "E:\\go1.23.3\\src\\html\\template\\element_string.go" "E:\\go1.23.3\\src\\html\\template\\error.go" "E:\\go1.23.3\\src\\html\\template\\escape.go" "E:\\go1.23.3\\src\\html\\template\\html.go" "E:\\go1.23.3\\src\\html\\template\\js.go" "E:\\go1.23.3\\src\\html\\template\\jsctx_string.go" "E:\\go1.23.3\\src\\html\\template\\state_string.go" "E:\\go1.23.3\\src\\html\\template\\template.go" "E:\\go1.23.3\\src\\html\\template\\transition.go" "E:\\go1.23.3\\src\\html\\template\\url.go" "E:\\go1.23.3\\src\\html\\template\\urlpart_string.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b196\\_pkg_.a" # internal
+
+#
+# text/tabwriter
+#
+
+mkdir -p $WORK\b200\
+cat >$WORK\b200\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b200\\_pkg_.a" -trimpath "$WORK\\b200=>" -p text/tabwriter -lang=go1.23 -std -complete -buildid YSoGBLv-5GGppTwwYrJ2/YSoGBLv-5GGppTwwYrJ2 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b200\\importcfg" -pack "E:\\go1.23.3\\src\\text\\tabwriter\\tabwriter.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b200\\_pkg_.a" # internal
+
+#
+# golang.org/x/net/trace
+#
+
+mkdir -p $WORK\b194\
+cat >$WORK\b194\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile context=$WORK\b002\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile golang.org/x/net/internal/timeseries=$WORK\b195\_pkg_.a
+packagefile html/template=$WORK\b196\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile log=$WORK\b067\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile net/http=$WORK\b090\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile text/tabwriter=$WORK\b200\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b194\\_pkg_.a" -trimpath "$WORK\\b194=>" -p golang.org/x/net/trace -lang=go1.18 -complete -buildid mE08S36Xo4_Xsu7HMvMz/mE08S36Xo4_Xsu7HMvMz -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b194\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\trace\\events.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\trace\\histogram.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\trace\\trace.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b194\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/backoff
+#
+
+mkdir -p $WORK\b201\
+cat >$WORK\b201\importcfg << 'EOF' # internal
+# import config
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b201\\_pkg_.a" -trimpath "$WORK\\b201=>" -p google.golang.org/grpc/backoff -lang=go1.21 -complete -buildid F3iphG-gMEu6NLfs18V3/F3iphG-gMEu6NLfs18V3 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b201\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\backoff\\backoff.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b201\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/grpclog/internal
+#
+
+mkdir -p $WORK\b207\
+cat >$WORK\b207\importcfg << 'EOF' # internal
+# import config
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile log=$WORK\b067\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b207\\_pkg_.a" -trimpath "$WORK\\b207=>" -p google.golang.org/grpc/grpclog/internal -lang=go1.21 -complete -buildid 0W0RZ2oNJExvcft06w53/0W0RZ2oNJExvcft06w53 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b207\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\grpclog\\internal\\grpclog.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\grpclog\\internal\\logger.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\grpclog\\internal\\loggerv2.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b207\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/grpclog
+#
+
+mkdir -p $WORK\b206\
+cat >$WORK\b206\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/grpclog/internal=$WORK\b207\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b206\\_pkg_.a" -trimpath "$WORK\\b206=>" -p google.golang.org/grpc/grpclog -lang=go1.21 -complete -buildid K-BMCXpu2WDCwrivBGOV/K-BMCXpu2WDCwrivBGOV -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b206\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\grpclog\\component.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\grpclog\\grpclog.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\grpclog\\logger.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\grpclog\\loggerv2.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b206\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/connectivity
+#
+
+mkdir -p $WORK\b205\
+cat >$WORK\b205\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b205\\_pkg_.a" -trimpath "$WORK\\b205=>" -p google.golang.org/grpc/connectivity -lang=go1.21 -complete -buildid 8PJg8Y_y-0YLWMBg4Iow/8PJg8Y_y-0YLWMBg4Iow -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b205\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\connectivity\\connectivity.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b205\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/attributes
+#
+
+mkdir -p $WORK\b209\
+cat >$WORK\b209\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b209\\_pkg_.a" -trimpath "$WORK\\b209=>" -p google.golang.org/grpc/attributes -lang=go1.21 -complete -buildid gm6upBnkA1IToSmwh2f6/gm6upBnkA1IToSmwh2f6 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b209\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\attributes\\attributes.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b209\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/credentials
+#
+
+mkdir -p $WORK\b210\
+cat >$WORK\b210\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile crypto/tls=$WORK\b100\_pkg_.a
+packagefile crypto/x509=$WORK\b139\_pkg_.a
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile syscall=$WORK\b032\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b210\\_pkg_.a" -trimpath "$WORK\\b210=>" -p google.golang.org/grpc/internal/credentials -lang=go1.21 -complete -buildid HWeWNfMvOhAnX_FIm_h1/HWeWNfMvOhAnX_FIm_h1 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b210\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\credentials\\credentials.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\credentials\\spiffe.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\credentials\\syscallconn.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\credentials\\util.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b210\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/envconfig
+#
+
+mkdir -p $WORK\b211\
+cat >$WORK\b211\importcfg << 'EOF' # internal
+# import config
+packagefile os=$WORK\b050\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b211\\_pkg_.a" -trimpath "$WORK\\b211=>" -p google.golang.org/grpc/internal/envconfig -lang=go1.21 -complete -buildid dVc5iPrrUVYGYiFR62aB/dVc5iPrrUVYGYiFR62aB -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b211\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\envconfig\\envconfig.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\envconfig\\observability.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\envconfig\\xds.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b211\\_pkg_.a" # internal
+
+#
+# hash/fnv
+#
+
+mkdir -p $WORK\b216\
+cat >$WORK\b216\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile hash=$WORK\b095\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b216\\_pkg_.a" -trimpath "$WORK\\b216=>" -p hash/fnv -lang=go1.23 -std -complete -buildid l8Z_e9M0NPxknAGR0zMb/l8Z_e9M0NPxknAGR0zMb -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b216\\importcfg" -pack "E:\\go1.23.3\\src\\hash\\fnv\\fnv.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b216\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/detrand
+#
+
+mkdir -p $WORK\b215\
+cat >$WORK\b215\importcfg << 'EOF' # internal
+# import config
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile hash/fnv=$WORK\b216\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b215\\_pkg_.a" -trimpath "$WORK\\b215=>" -p google.golang.org/protobuf/internal/detrand -lang=go1.21 -complete -buildid zBUAwe6yumg1DZ9h8E9Z/zBUAwe6yumg1DZ9h8E9Z -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b215\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\detrand\\rand.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b215\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/errors
+#
+
+mkdir -p $WORK\b214\
+cat >$WORK\b214\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/protobuf/internal/detrand=$WORK\b215\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b214\\_pkg_.a" -trimpath "$WORK\\b214=>" -p google.golang.org/protobuf/internal/errors -lang=go1.21 -complete -buildid pjxmctBfE5K6mx68SVtv/pjxmctBfE5K6mx68SVtv -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b214\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\errors\\errors.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\errors\\is_go113.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b214\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/encoding/protowire
+#
+
+mkdir -p $WORK\b213\
+cat >$WORK\b213\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/internal/errors=$WORK\b214\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b213\\_pkg_.a" -trimpath "$WORK\\b213=>" -p google.golang.org/protobuf/encoding/protowire -lang=go1.21 -complete -buildid spXpw5XDLrBmgbuzAIKy/spXpw5XDLrBmgbuzAIKy -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b213\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\encoding\\protowire\\wire.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b213\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/pragma
+#
+
+mkdir -p $WORK\b219\
+cat >$WORK\b219\importcfg << 'EOF' # internal
+# import config
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b219\\_pkg_.a" -trimpath "$WORK\\b219=>" -p google.golang.org/protobuf/internal/pragma -lang=go1.21 -complete -buildid ZXvA9PeJwn0FR_p6nNLQ/ZXvA9PeJwn0FR_p6nNLQ -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b219\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\pragma\\pragma.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b219\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/reflect/protoreflect
+#
+
+mkdir -p $WORK\b218\
+cat >$WORK\b218\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/protobuf/encoding/protowire=$WORK\b213\_pkg_.a
+packagefile google.golang.org/protobuf/internal/pragma=$WORK\b219\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b218\\_pkg_.a" -trimpath "$WORK\\b218=>" -p google.golang.org/protobuf/reflect/protoreflect -lang=go1.21 -complete -buildid F0XbBmZcWJ8Bd5kHPad5/F0XbBmZcWJ8Bd5kHPad5 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b218\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\reflect\\protoreflect\\methods.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\reflect\\protoreflect\\proto.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\reflect\\protoreflect\\source.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\reflect\\protoreflect\\source_gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\reflect\\protoreflect\\type.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\reflect\\protoreflect\\value.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\reflect\\protoreflect\\value_equal.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\reflect\\protoreflect\\value_union.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\reflect\\protoreflect\\value_unsafe_go121.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b218\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/encoding/messageset
+#
+
+mkdir -p $WORK\b217\
+cat >$WORK\b217\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/encoding/protowire=$WORK\b213\_pkg_.a
+packagefile google.golang.org/protobuf/internal/errors=$WORK\b214\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b217\\_pkg_.a" -trimpath "$WORK\\b217=>" -p google.golang.org/protobuf/internal/encoding/messageset -lang=go1.21 -complete -buildid 0B07dvoRHapQOyxR_SDM/0B07dvoRHapQOyxR_SDM -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b217\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\encoding\\messageset\\messageset.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b217\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/flags
+#
+
+mkdir -p $WORK\b220\
+echo '# import config' > $WORK\b220\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b220\\_pkg_.a" -trimpath "$WORK\\b220=>" -p google.golang.org/protobuf/internal/flags -lang=go1.21 -complete -buildid HBhdJEh076WvyMNeCQE4/HBhdJEh076WvyMNeCQE4 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b220\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\flags\\flags.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\flags\\proto_legacy_disable.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b220\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/genid
+#
+
+mkdir -p $WORK\b221\
+cat >$WORK\b221\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b221\\_pkg_.a" -trimpath "$WORK\\b221=>" -p google.golang.org/protobuf/internal/genid -lang=go1.21 -complete -buildid Rs3i0tEXJzJyGsuqRE7R/Rs3i0tEXJzJyGsuqRE7R -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b221\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\genid\\any_gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\genid\\api_gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\genid\\descriptor_gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\genid\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\genid\\duration_gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\genid\\empty_gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\genid\\field_mask_gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\genid\\go_features_gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\genid\\goname.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\genid\\map_entry.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\genid\\source_context_gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\genid\\struct_gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\genid\\timestamp_gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\genid\\type_gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\genid\\wrappers.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\genid\\wrappers_gen.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b221\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/order
+#
+
+mkdir -p $WORK\b222\
+cat >$WORK\b222\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b222\\_pkg_.a" -trimpath "$WORK\\b222=>" -p google.golang.org/protobuf/internal/order -lang=go1.21 -complete -buildid 6DjRRVA8flLNNF4jfaGo/6DjRRVA8flLNNF4jfaGo -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b222\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\order\\order.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\order\\range.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b222\\_pkg_.a" # internal
+
+#
+# go/token
+#
+
+mkdir -p $WORK\b224\
+cat >$WORK\b224\importcfg << 'EOF' # internal
+# import config
+packagefile cmp=$WORK\b041\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b224\\_pkg_.a" -trimpath "$WORK\\b224=>" -p go/token -lang=go1.23 -std -complete -buildid 4EvJaAjKPXBWlpC7hZeS/4EvJaAjKPXBWlpC7hZeS -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b224\\importcfg" -pack "E:\\go1.23.3\\src\\go\\token\\position.go" "E:\\go1.23.3\\src\\go\\token\\serialize.go" "E:\\go1.23.3\\src\\go\\token\\token.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b224\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/strs
+#
+
+mkdir -p $WORK\b223\
+cat >$WORK\b223\importcfg << 'EOF' # internal
+# import config
+packagefile go/token=$WORK\b224\_pkg_.a
+packagefile google.golang.org/protobuf/internal/flags=$WORK\b220\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b223\\_pkg_.a" -trimpath "$WORK\\b223=>" -p google.golang.org/protobuf/internal/strs -lang=go1.21 -complete -buildid Z2BHIIxwQ7rx_mnrgrMI/Z2BHIIxwQ7rx_mnrgrMI -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b223\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\strs\\strings.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\strs\\strings_unsafe_go121.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b223\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/reflect/protoregistry
+#
+
+mkdir -p $WORK\b225\
+cat >$WORK\b225\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/protobuf/internal/encoding/messageset=$WORK\b217\_pkg_.a
+packagefile google.golang.org/protobuf/internal/errors=$WORK\b214\_pkg_.a
+packagefile google.golang.org/protobuf/internal/flags=$WORK\b220\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b225\\_pkg_.a" -trimpath "$WORK\\b225=>" -p google.golang.org/protobuf/reflect/protoregistry -lang=go1.21 -complete -buildid JVxP8acL3fOiQH-kuSaS/JVxP8acL3fOiQH-kuSaS -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b225\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\reflect\\protoregistry\\registry.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b225\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/runtime/protoiface
+#
+
+mkdir -p $WORK\b226\
+cat >$WORK\b226\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/internal/pragma=$WORK\b219\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b226\\_pkg_.a" -trimpath "$WORK\\b226=>" -p google.golang.org/protobuf/runtime/protoiface -lang=go1.21 -complete -buildid bhGp0S-Lvpvk9NupBRYt/bhGp0S-Lvpvk9NupBRYt -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b226\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\runtime\\protoiface\\legacy.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\runtime\\protoiface\\methods.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b226\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/proto
+#
+
+mkdir -p $WORK\b212\
+cat >$WORK\b212\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/protobuf/encoding/protowire=$WORK\b213\_pkg_.a
+packagefile google.golang.org/protobuf/internal/encoding/messageset=$WORK\b217\_pkg_.a
+packagefile google.golang.org/protobuf/internal/errors=$WORK\b214\_pkg_.a
+packagefile google.golang.org/protobuf/internal/flags=$WORK\b220\_pkg_.a
+packagefile google.golang.org/protobuf/internal/genid=$WORK\b221\_pkg_.a
+packagefile google.golang.org/protobuf/internal/order=$WORK\b222\_pkg_.a
+packagefile google.golang.org/protobuf/internal/pragma=$WORK\b219\_pkg_.a
+packagefile google.golang.org/protobuf/internal/strs=$WORK\b223\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoregistry=$WORK\b225\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoiface=$WORK\b226\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b212\\_pkg_.a" -trimpath "$WORK\\b212=>" -p google.golang.org/protobuf/proto -lang=go1.21 -complete -buildid cz_F1waXe4XQVNbek_VL/cz_F1waXe4XQVNbek_VL -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b212\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\proto\\checkinit.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\proto\\decode.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\proto\\decode_gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\proto\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\proto\\encode.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\proto\\encode_gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\proto\\equal.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\proto\\extension.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\proto\\merge.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\proto\\messageset.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\proto\\proto.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\proto\\proto_methods.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\proto\\reset.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\proto\\size.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\proto\\size_gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\proto\\wrappers.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b212\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/credentials
+#
+
+mkdir -p $WORK\b208\
+cat >$WORK\b208\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile crypto/tls=$WORK\b100\_pkg_.a
+packagefile crypto/x509=$WORK\b139\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/attributes=$WORK\b209\_pkg_.a
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+packagefile google.golang.org/grpc/internal/credentials=$WORK\b210\_pkg_.a
+packagefile google.golang.org/grpc/internal/envconfig=$WORK\b211\_pkg_.a
+packagefile google.golang.org/protobuf/proto=$WORK\b212\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b208\\_pkg_.a" -trimpath "$WORK\\b208=>" -p google.golang.org/grpc/credentials -lang=go1.21 -complete -buildid XqlFmGLDxTnD8X-ALwpr/XqlFmGLDxTnD8X-ALwpr -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b208\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\credentials\\credentials.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\credentials\\tls.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b208\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/serviceconfig
+#
+
+mkdir -p $WORK\b228\
+echo '# import config' > $WORK\b228\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b228\\_pkg_.a" -trimpath "$WORK\\b228=>" -p google.golang.org/grpc/serviceconfig -lang=go1.21 -complete -buildid jZd3PUuBRvbjSZkXjqYn/jZd3PUuBRvbjSZkXjqYn -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b228\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\serviceconfig\\serviceconfig.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b228\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal
+#
+
+mkdir -p $WORK\b227\
+cat >$WORK\b227\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile golang.org/x/sys/windows=$WORK\b188\_pkg_.a
+packagefile google.golang.org/grpc/connectivity=$WORK\b205\_pkg_.a
+packagefile google.golang.org/grpc/serviceconfig=$WORK\b228\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile syscall=$WORK\b032\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b227\\_pkg_.a" -trimpath "$WORK\\b227=>" -p google.golang.org/grpc/internal -lang=go1.21 -complete -buildid 8GlUpg3_yC3MouYzS4IV/8GlUpg3_yC3MouYzS4IV -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b227\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\experimental.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\internal.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\tcp_keepalive_windows.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b227\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/channelz
+#
+
+mkdir -p $WORK\b204\
+cat >$WORK\b204\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/connectivity=$WORK\b205\_pkg_.a
+packagefile google.golang.org/grpc/credentials=$WORK\b208\_pkg_.a
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+packagefile google.golang.org/grpc/internal=$WORK\b227\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b204\\_pkg_.a" -trimpath "$WORK\\b204=>" -p google.golang.org/grpc/internal/channelz -lang=go1.21 -complete -buildid xHr_iAQwFzBVZVnPA_qr/xHr_iAQwFzBVZVnPA_qr -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b204\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\channelz\\channel.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\channelz\\channelmap.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\channelz\\funcs.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\channelz\\logging.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\channelz\\server.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\channelz\\socket.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\channelz\\subchannel.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\channelz\\syscall_nonlinux.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\channelz\\trace.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b204\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/channelz
+#
+
+mkdir -p $WORK\b203\
+cat >$WORK\b203\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/grpc/internal/channelz=$WORK\b204\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b203\\_pkg_.a" -trimpath "$WORK\\b203=>" -p google.golang.org/grpc/channelz -lang=go1.21 -complete -buildid 3-S0xVgkoJ2XRE6IQpBR/3-S0xVgkoJ2XRE6IQpBR -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b203\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\channelz\\channelz.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b203\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/experimental/stats
+#
+
+mkdir -p $WORK\b229\
+cat >$WORK\b229\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+packagefile google.golang.org/grpc/internal=$WORK\b227\_pkg_.a
+packagefile maps=$WORK\b161\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b229\\_pkg_.a" -trimpath "$WORK\\b229=>" -p google.golang.org/grpc/experimental/stats -lang=go1.21 -complete -buildid Eb42qxbL-S421e3z0x68/Eb42qxbL-S421e3z0x68 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b229\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\experimental\\stats\\metricregistry.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\experimental\\stats\\metrics.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b229\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/metadata
+#
+
+mkdir -p $WORK\b230\
+cat >$WORK\b230\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/internal=$WORK\b227\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b230\\_pkg_.a" -trimpath "$WORK\\b230=>" -p google.golang.org/grpc/metadata -lang=go1.21 -complete -buildid ME-PEXN39N3f6iTxQ_7M/ME-PEXN39N3f6iTxQ_7M -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b230\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\metadata\\metadata.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b230\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/resolver
+#
+
+mkdir -p $WORK\b231\
+cat >$WORK\b231\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/attributes=$WORK\b209\_pkg_.a
+packagefile google.golang.org/grpc/credentials=$WORK\b208\_pkg_.a
+packagefile google.golang.org/grpc/internal=$WORK\b227\_pkg_.a
+packagefile google.golang.org/grpc/serviceconfig=$WORK\b228\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b231\\_pkg_.a" -trimpath "$WORK\\b231=>" -p google.golang.org/grpc/resolver -lang=go1.21 -complete -buildid DvrvDE6hn77uQ21BseiT/DvrvDE6hn77uQ21BseiT -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b231\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\resolver\\map.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\resolver\\resolver.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b231\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/balancer
+#
+
+mkdir -p $WORK\b202\
+cat >$WORK\b202\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile google.golang.org/grpc/channelz=$WORK\b203\_pkg_.a
+packagefile google.golang.org/grpc/connectivity=$WORK\b205\_pkg_.a
+packagefile google.golang.org/grpc/credentials=$WORK\b208\_pkg_.a
+packagefile google.golang.org/grpc/experimental/stats=$WORK\b229\_pkg_.a
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+packagefile google.golang.org/grpc/internal=$WORK\b227\_pkg_.a
+packagefile google.golang.org/grpc/metadata=$WORK\b230\_pkg_.a
+packagefile google.golang.org/grpc/resolver=$WORK\b231\_pkg_.a
+packagefile google.golang.org/grpc/serviceconfig=$WORK\b228\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b202\\_pkg_.a" -trimpath "$WORK\\b202=>" -p google.golang.org/grpc/balancer -lang=go1.21 -complete -buildid 3KmstboyJ0Qyo3Xd3V5n/3KmstboyJ0Qyo3Xd3V5n -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b202\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\balancer\\balancer.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\balancer\\conn_state_evaluator.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b202\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/balancer/base
+#
+
+mkdir -p $WORK\b232\
+cat >$WORK\b232\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/balancer=$WORK\b202\_pkg_.a
+packagefile google.golang.org/grpc/connectivity=$WORK\b205\_pkg_.a
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+packagefile google.golang.org/grpc/resolver=$WORK\b231\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b232\\_pkg_.a" -trimpath "$WORK\\b232=>" -p google.golang.org/grpc/balancer/base -lang=go1.21 -complete -buildid IuBjUiDQzC54opa3Sgsp/IuBjUiDQzC54opa3Sgsp -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b232\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\balancer\\base\\balancer.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\balancer\\base\\base.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b232\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/grpclog
+#
+
+mkdir -p $WORK\b234\
+cat >$WORK\b234\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b234\\_pkg_.a" -trimpath "$WORK\\b234=>" -p google.golang.org/grpc/internal/grpclog -lang=go1.21 -complete -buildid 4EA3DUqTovdnWt3KNcfm/4EA3DUqTovdnWt3KNcfm -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b234\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\grpclog\\prefix_logger.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b234\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/encoding/json
+#
+
+mkdir -p $WORK\b237\
+cat >$WORK\b237\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/protobuf/internal/detrand=$WORK\b215\_pkg_.a
+packagefile google.golang.org/protobuf/internal/errors=$WORK\b214\_pkg_.a
+packagefile google.golang.org/protobuf/internal/strs=$WORK\b223\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+packagefile regexp=$WORK\b190\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+packagefile unicode/utf16=$WORK\b037\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b237\\_pkg_.a" -trimpath "$WORK\\b237=>" -p google.golang.org/protobuf/internal/encoding/json -lang=go1.21 -complete -buildid MqqMF6UV8qGj41hMze1K/MqqMF6UV8qGj41hMze1K -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b237\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\encoding\\json\\decode.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\encoding\\json\\decode_number.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\encoding\\json\\decode_string.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\encoding\\json\\decode_token.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\encoding\\json\\encode.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b237\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/descfmt
+#
+
+mkdir -p $WORK\b239\
+cat >$WORK\b239\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/protobuf/internal/detrand=$WORK\b215\_pkg_.a
+packagefile google.golang.org/protobuf/internal/pragma=$WORK\b219\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b239\\_pkg_.a" -trimpath "$WORK\\b239=>" -p google.golang.org/protobuf/internal/descfmt -lang=go1.21 -complete -buildid ZIwtCafopQlvNOXo2UdR/ZIwtCafopQlvNOXo2UdR -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b239\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\descfmt\\stringer.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b239\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/descopts
+#
+
+mkdir -p $WORK\b240\
+cat >$WORK\b240\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b240\\_pkg_.a" -trimpath "$WORK\\b240=>" -p google.golang.org/protobuf/internal/descopts -lang=go1.21 -complete -buildid 4MDe1shH_39P4OO2gFbP/4MDe1shH_39P4OO2gFbP -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b240\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\descopts\\options.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b240\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/editiondefaults
+#
+
+mkdir -p $WORK\b241\
+cat >$WORK\b241\importcfg << 'EOF' # internal
+# import config
+packagefile embed=$WORK\b113\_pkg_.a
+EOF
+cat >$WORK\b241\embedcfg << 'EOF' # internal
+{
+	"Patterns": {
+		"editions_defaults.binpb": [
+			"editions_defaults.binpb"
+		]
+	},
+	"Files": {
+		"editions_defaults.binpb": "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\editiondefaults\\editions_defaults.binpb"
+	}
+}EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b241\\_pkg_.a" -trimpath "$WORK\\b241=>" -p google.golang.org/protobuf/internal/editiondefaults -lang=go1.21 -complete -buildid fI7bcQ15n7aRfUfZbo3H/fI7bcQ15n7aRfUfZbo3H -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b241\\importcfg" -embedcfg "$WORK\\b241\\embedcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\editiondefaults\\defaults.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b241\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/encoding/text
+#
+
+mkdir -p $WORK\b243\
+cat >$WORK\b243\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/protobuf/internal/detrand=$WORK\b215\_pkg_.a
+packagefile google.golang.org/protobuf/internal/errors=$WORK\b214\_pkg_.a
+packagefile google.golang.org/protobuf/internal/flags=$WORK\b220\_pkg_.a
+packagefile google.golang.org/protobuf/internal/strs=$WORK\b223\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+packagefile unicode/utf16=$WORK\b037\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b243\\_pkg_.a" -trimpath "$WORK\\b243=>" -p google.golang.org/protobuf/internal/encoding/text -lang=go1.21 -complete -buildid ptl9fkgF7IfmHegeUtbo/ptl9fkgF7IfmHegeUtbo -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b243\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\encoding\\text\\decode.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\encoding\\text\\decode_number.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\encoding\\text\\decode_string.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\encoding\\text\\decode_token.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\encoding\\text\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\encoding\\text\\encode.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b243\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/encoding/defval
+#
+
+mkdir -p $WORK\b242\
+cat >$WORK\b242\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/protobuf/internal/encoding/text=$WORK\b243\_pkg_.a
+packagefile google.golang.org/protobuf/internal/errors=$WORK\b214\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b242\\_pkg_.a" -trimpath "$WORK\\b242=>" -p google.golang.org/protobuf/internal/encoding/defval -lang=go1.21 -complete -buildid 7MEP2KCdgr0xeZ4TKN8i/7MEP2KCdgr0xeZ4TKN8i -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b242\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\encoding\\defval\\default.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b242\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/filedesc
+#
+
+mkdir -p $WORK\b238\
+cat >$WORK\b238\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/protobuf/encoding/protowire=$WORK\b213\_pkg_.a
+packagefile google.golang.org/protobuf/internal/descfmt=$WORK\b239\_pkg_.a
+packagefile google.golang.org/protobuf/internal/descopts=$WORK\b240\_pkg_.a
+packagefile google.golang.org/protobuf/internal/editiondefaults=$WORK\b241\_pkg_.a
+packagefile google.golang.org/protobuf/internal/encoding/defval=$WORK\b242\_pkg_.a
+packagefile google.golang.org/protobuf/internal/encoding/messageset=$WORK\b217\_pkg_.a
+packagefile google.golang.org/protobuf/internal/errors=$WORK\b214\_pkg_.a
+packagefile google.golang.org/protobuf/internal/genid=$WORK\b221\_pkg_.a
+packagefile google.golang.org/protobuf/internal/pragma=$WORK\b219\_pkg_.a
+packagefile google.golang.org/protobuf/internal/strs=$WORK\b223\_pkg_.a
+packagefile google.golang.org/protobuf/proto=$WORK\b212\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoregistry=$WORK\b225\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b238\\_pkg_.a" -trimpath "$WORK\\b238=>" -p google.golang.org/protobuf/internal/filedesc -lang=go1.21 -complete -buildid eHmnrlUJSxC_UCFTdNH8/eHmnrlUJSxC_UCFTdNH8 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b238\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\filedesc\\build.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\filedesc\\desc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\filedesc\\desc_init.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\filedesc\\desc_lazy.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\filedesc\\desc_list.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\filedesc\\desc_list_gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\filedesc\\editions.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\filedesc\\placeholder.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b238\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/set
+#
+
+mkdir -p $WORK\b244\
+cat >$WORK\b244\importcfg << 'EOF' # internal
+# import config
+packagefile math/bits=$WORK\b045\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b244\\_pkg_.a" -trimpath "$WORK\\b244=>" -p google.golang.org/protobuf/internal/set -lang=go1.21 -complete -buildid vKNdYWmK1MEgUEdVQ-2g/vKNdYWmK1MEgUEdVQ-2g -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b244\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\set\\ints.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b244\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/encoding/protojson
+#
+
+mkdir -p $WORK\b236\
+cat >$WORK\b236\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile encoding/base64=$WORK\b064\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/protobuf/encoding/protowire=$WORK\b213\_pkg_.a
+packagefile google.golang.org/protobuf/internal/encoding/json=$WORK\b237\_pkg_.a
+packagefile google.golang.org/protobuf/internal/encoding/messageset=$WORK\b217\_pkg_.a
+packagefile google.golang.org/protobuf/internal/errors=$WORK\b214\_pkg_.a
+packagefile google.golang.org/protobuf/internal/filedesc=$WORK\b238\_pkg_.a
+packagefile google.golang.org/protobuf/internal/flags=$WORK\b220\_pkg_.a
+packagefile google.golang.org/protobuf/internal/genid=$WORK\b221\_pkg_.a
+packagefile google.golang.org/protobuf/internal/order=$WORK\b222\_pkg_.a
+packagefile google.golang.org/protobuf/internal/pragma=$WORK\b219\_pkg_.a
+packagefile google.golang.org/protobuf/internal/set=$WORK\b244\_pkg_.a
+packagefile google.golang.org/protobuf/internal/strs=$WORK\b223\_pkg_.a
+packagefile google.golang.org/protobuf/proto=$WORK\b212\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoregistry=$WORK\b225\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b236\\_pkg_.a" -trimpath "$WORK\\b236=>" -p google.golang.org/protobuf/encoding/protojson -lang=go1.21 -complete -buildid Tvx-vjzvrFFCJvLCD6RB/Tvx-vjzvrFFCJvLCD6RB -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b236\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\encoding\\protojson\\decode.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\encoding\\protojson\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\encoding\\protojson\\encode.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\encoding\\protojson\\well_known_types.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b236\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/encoding/prototext
+#
+
+mkdir -p $WORK\b249\
+cat >$WORK\b249\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/protobuf/encoding/protowire=$WORK\b213\_pkg_.a
+packagefile google.golang.org/protobuf/internal/encoding/messageset=$WORK\b217\_pkg_.a
+packagefile google.golang.org/protobuf/internal/encoding/text=$WORK\b243\_pkg_.a
+packagefile google.golang.org/protobuf/internal/errors=$WORK\b214\_pkg_.a
+packagefile google.golang.org/protobuf/internal/flags=$WORK\b220\_pkg_.a
+packagefile google.golang.org/protobuf/internal/genid=$WORK\b221\_pkg_.a
+packagefile google.golang.org/protobuf/internal/order=$WORK\b222\_pkg_.a
+packagefile google.golang.org/protobuf/internal/pragma=$WORK\b219\_pkg_.a
+packagefile google.golang.org/protobuf/internal/set=$WORK\b244\_pkg_.a
+packagefile google.golang.org/protobuf/internal/strs=$WORK\b223\_pkg_.a
+packagefile google.golang.org/protobuf/proto=$WORK\b212\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoregistry=$WORK\b225\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b249\\_pkg_.a" -trimpath "$WORK\\b249=>" -p google.golang.org/protobuf/encoding/prototext -lang=go1.21 -complete -buildid iQi2TNWctED8YJHnyt_I/iQi2TNWctED8YJHnyt_I -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b249\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\encoding\\prototext\\decode.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\encoding\\prototext\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\encoding\\prototext\\encode.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b249\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/encoding/tag
+#
+
+mkdir -p $WORK\b250\
+cat >$WORK\b250\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/internal/encoding/defval=$WORK\b242\_pkg_.a
+packagefile google.golang.org/protobuf/internal/filedesc=$WORK\b238\_pkg_.a
+packagefile google.golang.org/protobuf/internal/strs=$WORK\b223\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b250\\_pkg_.a" -trimpath "$WORK\\b250=>" -p google.golang.org/protobuf/internal/encoding/tag -lang=go1.21 -complete -buildid sSYoH3bHRcHDB1Lg2Pyd/sSYoH3bHRcHDB1Lg2Pyd -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b250\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\encoding\\tag\\tag.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b250\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/impl
+#
+
+mkdir -p $WORK\b248\
+cat >$WORK\b248\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile compress/gzip=$WORK\b092\_pkg_.a
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/protobuf/encoding/prototext=$WORK\b249\_pkg_.a
+packagefile google.golang.org/protobuf/encoding/protowire=$WORK\b213\_pkg_.a
+packagefile google.golang.org/protobuf/internal/descopts=$WORK\b240\_pkg_.a
+packagefile google.golang.org/protobuf/internal/detrand=$WORK\b215\_pkg_.a
+packagefile google.golang.org/protobuf/internal/encoding/messageset=$WORK\b217\_pkg_.a
+packagefile google.golang.org/protobuf/internal/encoding/tag=$WORK\b250\_pkg_.a
+packagefile google.golang.org/protobuf/internal/errors=$WORK\b214\_pkg_.a
+packagefile google.golang.org/protobuf/internal/filedesc=$WORK\b238\_pkg_.a
+packagefile google.golang.org/protobuf/internal/flags=$WORK\b220\_pkg_.a
+packagefile google.golang.org/protobuf/internal/genid=$WORK\b221\_pkg_.a
+packagefile google.golang.org/protobuf/internal/order=$WORK\b222\_pkg_.a
+packagefile google.golang.org/protobuf/internal/pragma=$WORK\b219\_pkg_.a
+packagefile google.golang.org/protobuf/internal/strs=$WORK\b223\_pkg_.a
+packagefile google.golang.org/protobuf/proto=$WORK\b212\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoregistry=$WORK\b225\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoiface=$WORK\b226\_pkg_.a
+packagefile hash/crc32=$WORK\b094\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b248\\_pkg_.a" -trimpath "$WORK\\b248=>" -p google.golang.org/protobuf/internal/impl -lang=go1.21 -complete -buildid zyz7tkGPd_luBY6pNzoO/zyz7tkGPd_luBY6pNzoO -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b248\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\api_export.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\checkinit.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\codec_extension.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\codec_field.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\codec_gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\codec_map.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\codec_map_go112.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\codec_message.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\codec_messageset.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\codec_tables.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\codec_unsafe.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\convert.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\convert_list.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\convert_map.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\decode.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\encode.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\enum.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\equal.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\extension.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\legacy_enum.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\legacy_export.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\legacy_extension.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\legacy_file.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\legacy_message.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\merge.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\merge_gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\message.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\message_reflect.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\message_reflect_field.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\message_reflect_gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\pointer_unsafe.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\validate.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\impl\\weak.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b248\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/filetype
+#
+
+mkdir -p $WORK\b247\
+cat >$WORK\b247\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/internal/descopts=$WORK\b240\_pkg_.a
+packagefile google.golang.org/protobuf/internal/filedesc=$WORK\b238\_pkg_.a
+packagefile google.golang.org/protobuf/internal/impl=$WORK\b248\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoregistry=$WORK\b225\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b247\\_pkg_.a" -trimpath "$WORK\\b247=>" -p google.golang.org/protobuf/internal/filetype -lang=go1.21 -complete -buildid cVP0dKpENCMpA68rae55/cVP0dKpENCMpA68rae55 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b247\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\filetype\\build.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b247\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/internal/version
+#
+
+mkdir -p $WORK\b251\
+cat >$WORK\b251\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b251\\_pkg_.a" -trimpath "$WORK\\b251=>" -p google.golang.org/protobuf/internal/version -lang=go1.21 -complete -buildid nE3NZbsV_y9hoTB1wIf4/nE3NZbsV_y9hoTB1wIf4 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b251\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\internal\\version\\version.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b251\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/runtime/protoimpl
+#
+
+mkdir -p $WORK\b246\
+cat >$WORK\b246\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/internal/filedesc=$WORK\b238\_pkg_.a
+packagefile google.golang.org/protobuf/internal/filetype=$WORK\b247\_pkg_.a
+packagefile google.golang.org/protobuf/internal/impl=$WORK\b248\_pkg_.a
+packagefile google.golang.org/protobuf/internal/version=$WORK\b251\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b246\\_pkg_.a" -trimpath "$WORK\\b246=>" -p google.golang.org/protobuf/runtime/protoimpl -lang=go1.21 -complete -buildid iCJquel50dXQnU6QGgNA/iCJquel50dXQnU6QGgNA -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b246\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\runtime\\protoimpl\\impl.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\runtime\\protoimpl\\version.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b246\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/protoadapt
+#
+
+mkdir -p $WORK\b245\
+cat >$WORK\b245\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/proto=$WORK\b212\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoiface=$WORK\b226\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoimpl=$WORK\b246\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b245\\_pkg_.a" -trimpath "$WORK\\b245=>" -p google.golang.org/protobuf/protoadapt -lang=go1.21 -complete -buildid Hc6EiQ3Qh9l1406lAPOm/Hc6EiQ3Qh9l1406lAPOm -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b245\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\protoadapt\\convert.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b245\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/pretty
+#
+
+mkdir -p $WORK\b235\
+cat >$WORK\b235\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/protobuf/encoding/protojson=$WORK\b236\_pkg_.a
+packagefile google.golang.org/protobuf/protoadapt=$WORK\b245\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b235\\_pkg_.a" -trimpath "$WORK\\b235=>" -p google.golang.org/grpc/internal/pretty -lang=go1.21 -complete -buildid TmSU9shd4XYePa_mHk-A/TmSU9shd4XYePa_mHk-A -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b235\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\pretty\\pretty.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b235\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/balancer/pickfirst
+#
+
+mkdir -p $WORK\b233\
+cat >$WORK\b233\importcfg << 'EOF' # internal
+# import config
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/balancer=$WORK\b202\_pkg_.a
+packagefile google.golang.org/grpc/connectivity=$WORK\b205\_pkg_.a
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+packagefile google.golang.org/grpc/internal=$WORK\b227\_pkg_.a
+packagefile google.golang.org/grpc/internal/grpclog=$WORK\b234\_pkg_.a
+packagefile google.golang.org/grpc/internal/pretty=$WORK\b235\_pkg_.a
+packagefile google.golang.org/grpc/resolver=$WORK\b231\_pkg_.a
+packagefile google.golang.org/grpc/serviceconfig=$WORK\b228\_pkg_.a
+packagefile math/rand=$WORK\b099\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b233\\_pkg_.a" -trimpath "$WORK\\b233=>" -p google.golang.org/grpc/balancer/pickfirst -lang=go1.21 -complete -buildid CqoZiSOoghiJ3XwsIZ4r/CqoZiSOoghiJ3XwsIZ4r -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b233\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\balancer\\pickfirst\\pickfirst.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b233\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/balancer/roundrobin
+#
+
+mkdir -p $WORK\b252\
+cat >$WORK\b252\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/grpc/balancer=$WORK\b202\_pkg_.a
+packagefile google.golang.org/grpc/balancer/base=$WORK\b232\_pkg_.a
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+packagefile math/rand=$WORK\b099\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b252\\_pkg_.a" -trimpath "$WORK\\b252=>" -p google.golang.org/grpc/balancer/roundrobin -lang=go1.21 -complete -buildid sV9wfjnxBZHd0mL9qNKV/sV9wfjnxBZHd0mL9qNKV -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b252\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\balancer\\roundrobin\\roundrobin.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b252\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/codes
+#
+
+mkdir -p $WORK\b253\
+cat >$WORK\b253\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/internal=$WORK\b227\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b253\\_pkg_.a" -trimpath "$WORK\\b253=>" -p google.golang.org/grpc/codes -lang=go1.21 -complete -buildid t8Ui0XO448Yu7mMhq6mC/t8Ui0XO448Yu7mMhq6mC -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b253\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\codes\\code_string.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\codes\\codes.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b253\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/credentials/insecure
+#
+
+mkdir -p $WORK\b254\
+cat >$WORK\b254\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile google.golang.org/grpc/credentials=$WORK\b208\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b254\\_pkg_.a" -trimpath "$WORK\\b254=>" -p google.golang.org/grpc/credentials/insecure -lang=go1.21 -complete -buildid kWMwD04msYxmpr3P8Xu9/kWMwD04msYxmpr3P8Xu9 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b254\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\credentials\\insecure\\insecure.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b254\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/grpcutil
+#
+
+mkdir -p $WORK\b256\
+cat >$WORK\b256\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile google.golang.org/grpc/metadata=$WORK\b230\_pkg_.a
+packagefile regexp=$WORK\b190\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b256\\_pkg_.a" -trimpath "$WORK\\b256=>" -p google.golang.org/grpc/internal/grpcutil -lang=go1.21 -complete -buildid MKSOLAaHJwiKbBAwlOuV/MKSOLAaHJwiKbBAwlOuV -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b256\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\grpcutil\\compressor.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\grpcutil\\encode_duration.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\grpcutil\\grpcutil.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\grpcutil\\metadata.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\grpcutil\\method.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\grpcutil\\regex.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b256\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/mem
+#
+
+mkdir -p $WORK\b257\
+cat >$WORK\b257\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/internal=$WORK\b227\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b257\\_pkg_.a" -trimpath "$WORK\\b257=>" -p google.golang.org/grpc/mem -lang=go1.21 -complete -buildid XHf4yf_LvlSiMsCY0ceR/XHf4yf_LvlSiMsCY0ceR -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b257\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\mem\\buffer_pool.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\mem\\buffer_slice.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\mem\\buffers.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b257\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/encoding
+#
+
+mkdir -p $WORK\b255\
+cat >$WORK\b255\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/grpc/internal/grpcutil=$WORK\b256\_pkg_.a
+packagefile google.golang.org/grpc/mem=$WORK\b257\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b255\\_pkg_.a" -trimpath "$WORK\\b255=>" -p google.golang.org/grpc/encoding -lang=go1.21 -complete -buildid 145PW60rAd9yDb5FHzZ1/145PW60rAd9yDb5FHzZ1 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b255\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\encoding\\encoding.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\encoding\\encoding_v2.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b255\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/encoding/proto
+#
+
+mkdir -p $WORK\b258\
+cat >$WORK\b258\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/encoding=$WORK\b255\_pkg_.a
+packagefile google.golang.org/grpc/mem=$WORK\b257\_pkg_.a
+packagefile google.golang.org/protobuf/proto=$WORK\b212\_pkg_.a
+packagefile google.golang.org/protobuf/protoadapt=$WORK\b245\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b258\\_pkg_.a" -trimpath "$WORK\\b258=>" -p google.golang.org/grpc/encoding/proto -lang=go1.21 -complete -buildid DPtfA8NlpAjP5-_aCOPx/DPtfA8NlpAjP5-_aCOPx -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b258\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\encoding\\proto\\proto.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b258\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/backoff
+#
+
+mkdir -p $WORK\b259\
+cat >$WORK\b259\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile google.golang.org/grpc/backoff=$WORK\b201\_pkg_.a
+packagefile math/rand=$WORK\b099\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b259\\_pkg_.a" -trimpath "$WORK\\b259=>" -p google.golang.org/grpc/internal/backoff -lang=go1.21 -complete -buildid y3giiu-_eNYmrIwgIy9C/y3giiu-_eNYmrIwgIy9C -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b259\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\backoff\\backoff.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b259\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/balancer/gracefulswitch
+#
+
+mkdir -p $WORK\b260\
+cat >$WORK\b260\importcfg << 'EOF' # internal
+# import config
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/balancer=$WORK\b202\_pkg_.a
+packagefile google.golang.org/grpc/balancer/base=$WORK\b232\_pkg_.a
+packagefile google.golang.org/grpc/connectivity=$WORK\b205\_pkg_.a
+packagefile google.golang.org/grpc/resolver=$WORK\b231\_pkg_.a
+packagefile google.golang.org/grpc/serviceconfig=$WORK\b228\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b260\\_pkg_.a" -trimpath "$WORK\\b260=>" -p google.golang.org/grpc/internal/balancer/gracefulswitch -lang=go1.21 -complete -buildid _60FK3znUx2Eh_1ZLCsS/_60FK3znUx2Eh_1ZLCsS -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b260\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\balancer\\gracefulswitch\\config.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\balancer\\gracefulswitch\\gracefulswitch.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b260\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/balancerload
+#
+
+mkdir -p $WORK\b261\
+cat >$WORK\b261\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/grpc/metadata=$WORK\b230\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b261\\_pkg_.a" -trimpath "$WORK\\b261=>" -p google.golang.org/grpc/internal/balancerload -lang=go1.21 -complete -buildid LBnha0HXepbt68Fm7Yr_/LBnha0HXepbt68Fm7Yr_ -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b261\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\balancerload\\load.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b261\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/types/known/durationpb
+#
+
+mkdir -p $WORK\b264\
+cat >$WORK\b264\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoimpl=$WORK\b246\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b264\\_pkg_.a" -trimpath "$WORK\\b264=>" -p google.golang.org/protobuf/types/known/durationpb -lang=go1.21 -complete -buildid INR729Kv3h4JZHsdJY9c/INR729Kv3h4JZHsdJY9c -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b264\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\types\\known\\durationpb\\duration.pb.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b264\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/types/known/timestamppb
+#
+
+mkdir -p $WORK\b265\
+cat >$WORK\b265\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoimpl=$WORK\b246\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b265\\_pkg_.a" -trimpath "$WORK\\b265=>" -p google.golang.org/protobuf/types/known/timestamppb -lang=go1.21 -complete -buildid f-9-vzHFlaLVeFlYgl8_/f-9-vzHFlaLVeFlYgl8_ -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b265\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\types\\known\\timestamppb\\timestamp.pb.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b265\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/binarylog/grpc_binarylog_v1
+#
+
+mkdir -p $WORK\b263\
+cat >$WORK\b263\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoimpl=$WORK\b246\_pkg_.a
+packagefile google.golang.org/protobuf/types/known/durationpb=$WORK\b264\_pkg_.a
+packagefile google.golang.org/protobuf/types/known/timestamppb=$WORK\b265\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b263\\_pkg_.a" -trimpath "$WORK\\b263=>" -p google.golang.org/grpc/binarylog/grpc_binarylog_v1 -lang=go1.21 -complete -buildid Yg4-t1jOJgvomWaVPwY0/Yg4-t1jOJgvomWaVPwY0 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b263\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\binarylog\\grpc_binarylog_v1\\binarylog.pb.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b263\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/types/known/anypb
+#
+
+mkdir -p $WORK\b268\
+cat >$WORK\b268\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/proto=$WORK\b212\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoregistry=$WORK\b225\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoimpl=$WORK\b246\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b268\\_pkg_.a" -trimpath "$WORK\\b268=>" -p google.golang.org/protobuf/types/known/anypb -lang=go1.21 -complete -buildid odPoU-Oy4WVgKu-WVNW0/odPoU-Oy4WVgKu-WVNW0 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b268\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\types\\known\\anypb\\any.pb.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b268\\_pkg_.a" # internal
+
+#
+# google.golang.org/genproto/googleapis/rpc/status
+#
+
+mkdir -p $WORK\b267\
+cat >$WORK\b267\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoimpl=$WORK\b246\_pkg_.a
+packagefile google.golang.org/protobuf/types/known/anypb=$WORK\b268\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b267\\_pkg_.a" -trimpath "$WORK\\b267=>" -p google.golang.org/genproto/googleapis/rpc/status -lang=go1.21 -complete -buildid jzyr7vKfHH2Wo4Y23EKA/jzyr7vKfHH2Wo4Y23EKA -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b267\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\genproto\\googleapis\\rpc@v0.0.0-20241104194629-dd2ea8efbc28\\status\\status.pb.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b267\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/status
+#
+
+mkdir -p $WORK\b269\
+cat >$WORK\b269\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/genproto/googleapis/rpc/status=$WORK\b267\_pkg_.a
+packagefile google.golang.org/grpc/codes=$WORK\b253\_pkg_.a
+packagefile google.golang.org/protobuf/proto=$WORK\b212\_pkg_.a
+packagefile google.golang.org/protobuf/protoadapt=$WORK\b245\_pkg_.a
+packagefile google.golang.org/protobuf/types/known/anypb=$WORK\b268\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b269\\_pkg_.a" -trimpath "$WORK\\b269=>" -p google.golang.org/grpc/internal/status -lang=go1.21 -complete -buildid lzI8hbhH4gzWu_Z41Bc0/lzI8hbhH4gzWu_Z41Bc0 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b269\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\status\\status.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b269\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/status
+#
+
+mkdir -p $WORK\b266\
+cat >$WORK\b266\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/genproto/googleapis/rpc/status=$WORK\b267\_pkg_.a
+packagefile google.golang.org/grpc/codes=$WORK\b253\_pkg_.a
+packagefile google.golang.org/grpc/internal/status=$WORK\b269\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b266\\_pkg_.a" -trimpath "$WORK\\b266=>" -p google.golang.org/grpc/status -lang=go1.21 -complete -buildid hj9QugCTZ3maqi79RitH/hj9QugCTZ3maqi79RitH -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b266\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\status\\status.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b266\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/binarylog
+#
+
+mkdir -p $WORK\b262\
+cat >$WORK\b262\importcfg << 'EOF' # internal
+# import config
+packagefile bufio=$WORK\b091\_pkg_.a
+packagefile context=$WORK\b002\_pkg_.a
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/binarylog/grpc_binarylog_v1=$WORK\b263\_pkg_.a
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+packagefile google.golang.org/grpc/internal/grpcutil=$WORK\b256\_pkg_.a
+packagefile google.golang.org/grpc/metadata=$WORK\b230\_pkg_.a
+packagefile google.golang.org/grpc/status=$WORK\b266\_pkg_.a
+packagefile google.golang.org/protobuf/proto=$WORK\b212\_pkg_.a
+packagefile google.golang.org/protobuf/types/known/durationpb=$WORK\b264\_pkg_.a
+packagefile google.golang.org/protobuf/types/known/timestamppb=$WORK\b265\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile regexp=$WORK\b190\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b262\\_pkg_.a" -trimpath "$WORK\\b262=>" -p google.golang.org/grpc/internal/binarylog -lang=go1.21 -complete -buildid itZXDjvQVwCCIEMIG-8Y/itZXDjvQVwCCIEMIG-8Y -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b262\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\binarylog\\binarylog.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\binarylog\\binarylog_testutil.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\binarylog\\env_config.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\binarylog\\method_logger.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\binarylog\\sink.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b262\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/buffer
+#
+
+mkdir -p $WORK\b271\
+cat >$WORK\b271\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b271\\_pkg_.a" -trimpath "$WORK\\b271=>" -p google.golang.org/grpc/internal/buffer -lang=go1.21 -complete -buildid iqmvJ5h4SGf5cL4CVlj0/iqmvJ5h4SGf5cL4CVlj0 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b271\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\buffer\\unbounded.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b271\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/grpcsync
+#
+
+mkdir -p $WORK\b270\
+cat >$WORK\b270\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile google.golang.org/grpc/internal/buffer=$WORK\b271\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b270\\_pkg_.a" -trimpath "$WORK\\b270=>" -p google.golang.org/grpc/internal/grpcsync -lang=go1.21 -complete -buildid lRcpHmY5YHbsvQ8erEMT/lRcpHmY5YHbsvQ8erEMT -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b270\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\grpcsync\\callback_serializer.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\grpcsync\\event.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\grpcsync\\oncefunc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\grpcsync\\pubsub.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b270\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/idle
+#
+
+mkdir -p $WORK\b272\
+cat >$WORK\b272\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b272\\_pkg_.a" -trimpath "$WORK\\b272=>" -p google.golang.org/grpc/internal/idle -lang=go1.21 -complete -buildid RHOTeW0wqJ1jDvPrBo0A/RHOTeW0wqJ1jDvPrBo0A -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b272\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\idle\\idle.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b272\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/metadata
+#
+
+mkdir -p $WORK\b273\
+cat >$WORK\b273\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/metadata=$WORK\b230\_pkg_.a
+packagefile google.golang.org/grpc/resolver=$WORK\b231\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b273\\_pkg_.a" -trimpath "$WORK\\b273=>" -p google.golang.org/grpc/internal/metadata -lang=go1.21 -complete -buildid VqfbtQcGZZnnFHwqBkBW/VqfbtQcGZZnnFHwqBkBW -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b273\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\metadata\\metadata.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b273\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/serviceconfig
+#
+
+mkdir -p $WORK\b275\
+cat >$WORK\b275\importcfg << 'EOF' # internal
+# import config
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/balancer=$WORK\b202\_pkg_.a
+packagefile google.golang.org/grpc/codes=$WORK\b253\_pkg_.a
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+packagefile google.golang.org/grpc/serviceconfig=$WORK\b228\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b275\\_pkg_.a" -trimpath "$WORK\\b275=>" -p google.golang.org/grpc/internal/serviceconfig -lang=go1.21 -complete -buildid lxOX5YF3AWv2P5KAUbct/lxOX5YF3AWv2P5KAUbct -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b275\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\serviceconfig\\duration.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\serviceconfig\\serviceconfig.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b275\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/resolver
+#
+
+mkdir -p $WORK\b274\
+cat >$WORK\b274\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile google.golang.org/grpc/internal/serviceconfig=$WORK\b275\_pkg_.a
+packagefile google.golang.org/grpc/metadata=$WORK\b230\_pkg_.a
+packagefile google.golang.org/grpc/resolver=$WORK\b231\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b274\\_pkg_.a" -trimpath "$WORK\\b274=>" -p google.golang.org/grpc/internal/resolver -lang=go1.21 -complete -buildid ZhnPhjKv1YJ1vcL7sFiK/ZhnPhjKv1YJ1vcL7sFiK -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b274\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\resolver\\config_selector.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b274\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/resolver/passthrough
+#
+
+mkdir -p $WORK\b276\
+cat >$WORK\b276\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile google.golang.org/grpc/resolver=$WORK\b231\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b276\\_pkg_.a" -trimpath "$WORK\\b276=>" -p google.golang.org/grpc/internal/resolver/passthrough -lang=go1.21 -complete -buildid HDWbHs_ZImv4ihPkWzC2/HDWbHs_ZImv4ihPkWzC2 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b276\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\resolver\\passthrough\\passthrough.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b276\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/transport/networktype
+#
+
+mkdir -p $WORK\b278\
+cat >$WORK\b278\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/grpc/resolver=$WORK\b231\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b278\\_pkg_.a" -trimpath "$WORK\\b278=>" -p google.golang.org/grpc/internal/transport/networktype -lang=go1.21 -complete -buildid L8qinCqswqRzYcxtcQvx/L8qinCqswqRzYcxtcQvx -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b278\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\transport\\networktype\\networktype.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b278\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/resolver/unix
+#
+
+mkdir -p $WORK\b277\
+cat >$WORK\b277\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/internal/transport/networktype=$WORK\b278\_pkg_.a
+packagefile google.golang.org/grpc/resolver=$WORK\b231\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b277\\_pkg_.a" -trimpath "$WORK\\b277=>" -p google.golang.org/grpc/internal/resolver/unix -lang=go1.21 -complete -buildid VtiVua4jZBjlaAeXXnhB/VtiVua4jZBjlaAeXXnhB -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b277\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\resolver\\unix\\unix.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b277\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/stats
+#
+
+mkdir -p $WORK\b280\
+cat >$WORK\b280\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile google.golang.org/grpc/metadata=$WORK\b230\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b280\\_pkg_.a" -trimpath "$WORK\\b280=>" -p google.golang.org/grpc/stats -lang=go1.21 -complete -buildid SHR9fNJTgTxMPLc77G8U/SHR9fNJTgTxMPLc77G8U -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b280\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\stats\\handlers.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\stats\\stats.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b280\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/stats
+#
+
+mkdir -p $WORK\b279\
+cat >$WORK\b279\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/experimental/stats=$WORK\b229\_pkg_.a
+packagefile google.golang.org/grpc/stats=$WORK\b280\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b279\\_pkg_.a" -trimpath "$WORK\\b279=>" -p google.golang.org/grpc/internal/stats -lang=go1.21 -complete -buildid edvqDdjloHrljU4qCLcp/edvqDdjloHrljU4qCLcp -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b279\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\stats\\labels.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\stats\\metrics_recorder_list.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b279\\_pkg_.a" # internal
+
+#
+# golang.org/x/text/transform
+#
+
+mkdir -p $WORK\b286\
+cat >$WORK\b286\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b286\\_pkg_.a" -trimpath "$WORK\\b286=>" -p golang.org/x/text/transform -lang=go1.18 -complete -buildid KCs2AXqmm9Bsp5HU1nOP/KCs2AXqmm9Bsp5HU1nOP -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b286\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\text@v0.20.0\\transform\\transform.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b286\\_pkg_.a" # internal
+
+#
+# golang.org/x/text/unicode/bidi
+#
+
+mkdir -p $WORK\b287\
+cat >$WORK\b287\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile container/list=$WORK\b072\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile log=$WORK\b067\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b287\\_pkg_.a" -trimpath "$WORK\\b287=>" -p golang.org/x/text/unicode/bidi -lang=go1.18 -complete -buildid kdRgiqwElv_DsE2Ue9e3/kdRgiqwElv_DsE2Ue9e3 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b287\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\text@v0.20.0\\unicode\\bidi\\bidi.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\text@v0.20.0\\unicode\\bidi\\bracket.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\text@v0.20.0\\unicode\\bidi\\core.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\text@v0.20.0\\unicode\\bidi\\prop.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\text@v0.20.0\\unicode\\bidi\\tables15.0.0.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\text@v0.20.0\\unicode\\bidi\\trieval.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b287\\_pkg_.a" # internal
+
+#
+# golang.org/x/text/secure/bidirule
+#
+
+mkdir -p $WORK\b285\
+cat >$WORK\b285\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile golang.org/x/text/transform=$WORK\b286\_pkg_.a
+packagefile golang.org/x/text/unicode/bidi=$WORK\b287\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b285\\_pkg_.a" -trimpath "$WORK\\b285=>" -p golang.org/x/text/secure/bidirule -lang=go1.18 -complete -buildid kTrjH3J9AvaJgMH7a47z/kTrjH3J9AvaJgMH7a47z -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b285\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\text@v0.20.0\\secure\\bidirule\\bidirule.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\text@v0.20.0\\secure\\bidirule\\bidirule10.0.0.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b285\\_pkg_.a" # internal
+
+#
+# golang.org/x/text/unicode/norm
+#
+
+mkdir -p $WORK\b288\
+cat >$WORK\b288\importcfg << 'EOF' # internal
+# import config
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile golang.org/x/text/transform=$WORK\b286\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b288\\_pkg_.a" -trimpath "$WORK\\b288=>" -p golang.org/x/text/unicode/norm -lang=go1.18 -complete -buildid eXqOYbZwxpr3lyo3_Qwc/eXqOYbZwxpr3lyo3_Qwc -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b288\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\text@v0.20.0\\unicode\\norm\\composition.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\text@v0.20.0\\unicode\\norm\\forminfo.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\text@v0.20.0\\unicode\\norm\\input.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\text@v0.20.0\\unicode\\norm\\iter.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\text@v0.20.0\\unicode\\norm\\normalize.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\text@v0.20.0\\unicode\\norm\\readwriter.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\text@v0.20.0\\unicode\\norm\\tables15.0.0.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\text@v0.20.0\\unicode\\norm\\transform.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\text@v0.20.0\\unicode\\norm\\trie.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b288\\_pkg_.a" # internal
+
+#
+# golang.org/x/net/idna
+#
+
+mkdir -p $WORK\b284\
+cat >$WORK\b284\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile golang.org/x/text/secure/bidirule=$WORK\b285\_pkg_.a
+packagefile golang.org/x/text/unicode/bidi=$WORK\b287\_pkg_.a
+packagefile golang.org/x/text/unicode/norm=$WORK\b288\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b284\\_pkg_.a" -trimpath "$WORK\\b284=>" -p golang.org/x/net/idna -lang=go1.18 -complete -buildid B1oMfIj7lFaIeVLnq8kK/B1oMfIj7lFaIeVLnq8kK -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b284\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\idna\\go118.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\idna\\idna10.0.0.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\idna\\punycode.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\idna\\tables15.0.0.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\idna\\trie.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\idna\\trie13.0.0.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\idna\\trieval.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b284\\_pkg_.a" # internal
+
+#
+# golang.org/x/net/http/httpguts
+#
+
+mkdir -p $WORK\b283\
+cat >$WORK\b283\importcfg << 'EOF' # internal
+# import config
+packagefile golang.org/x/net/idna=$WORK\b284\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile net/textproto=$WORK\b158\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b283\\_pkg_.a" -trimpath "$WORK\\b283=>" -p golang.org/x/net/http/httpguts -lang=go1.18 -complete -buildid I1RHDw__Xr_fsWHNa6F6/I1RHDw__Xr_fsWHNa6F6 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b283\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http\\httpguts\\guts.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http\\httpguts\\httplex.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b283\\_pkg_.a" # internal
+
+#
+# golang.org/x/net/http2/hpack
+#
+
+mkdir -p $WORK\b289\
+cat >$WORK\b289\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b289\\_pkg_.a" -trimpath "$WORK\\b289=>" -p golang.org/x/net/http2/hpack -lang=go1.18 -complete -buildid 2WC8_oykmiw85yATYroA/2WC8_oykmiw85yATYroA -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b289\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\hpack\\encode.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\hpack\\hpack.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\hpack\\huffman.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\hpack\\static_table.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\hpack\\tables.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b289\\_pkg_.a" # internal
+
+#
+# golang.org/x/net/http2
+#
+
+mkdir -p $WORK\b282\
+cat >$WORK\b282\importcfg << 'EOF' # internal
+# import config
+packagefile bufio=$WORK\b091\_pkg_.a
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile compress/gzip=$WORK\b092\_pkg_.a
+packagefile context=$WORK\b002\_pkg_.a
+packagefile crypto/rand=$WORK\b096\_pkg_.a
+packagefile crypto/tls=$WORK\b100\_pkg_.a
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile golang.org/x/net/http/httpguts=$WORK\b283\_pkg_.a
+packagefile golang.org/x/net/http2/hpack=$WORK\b289\_pkg_.a
+packagefile golang.org/x/net/idna=$WORK\b284\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile io/fs=$WORK\b052\_pkg_.a
+packagefile log=$WORK\b067\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+packagefile math/rand=$WORK\b099\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile net/http=$WORK\b090\_pkg_.a
+packagefile net/http/httptrace=$WORK\b165\_pkg_.a
+packagefile net/textproto=$WORK\b158\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b282\\_pkg_.a" -trimpath "$WORK\\b282=>" -p golang.org/x/net/http2 -lang=go1.18 -complete -buildid 4zy7vYBRFA8H2lkWCjtA/4zy7vYBRFA8H2lkWCjtA -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b282\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\ascii.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\ciphers.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\client_conn_pool.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\config.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\config_pre_go124.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\databuffer.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\errors.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\flow.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\frame.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\gotrack.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\headermap.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\http2.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\pipe.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\server.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\timer.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\transport.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\write.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\writesched.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\writesched_priority.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\writesched_random.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\golang.org\\x\\net@v0.30.0\\http2\\writesched_roundrobin.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b282\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/syscall
+#
+
+mkdir -p $WORK\b290\
+cat >$WORK\b290\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b290\\_pkg_.a" -trimpath "$WORK\\b290=>" -p google.golang.org/grpc/internal/syscall -lang=go1.21 -complete -buildid 3_mfp0Qz4ZCaTts2cgPy/3_mfp0Qz4ZCaTts2cgPy -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b290\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\syscall\\syscall_nonlinux.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b290\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/keepalive
+#
+
+mkdir -p $WORK\b291\
+cat >$WORK\b291\importcfg << 'EOF' # internal
+# import config
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b291\\_pkg_.a" -trimpath "$WORK\\b291=>" -p google.golang.org/grpc/keepalive -lang=go1.21 -complete -buildid 9gPjJwA7lDAJSp5NVzkv/9gPjJwA7lDAJSp5NVzkv -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b291\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\keepalive\\keepalive.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b291\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/peer
+#
+
+mkdir -p $WORK\b292\
+cat >$WORK\b292\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/credentials=$WORK\b208\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b292\\_pkg_.a" -trimpath "$WORK\\b292=>" -p google.golang.org/grpc/peer -lang=go1.21 -complete -buildid jNUIcruBlgJodSyLpvd9/jNUIcruBlgJodSyLpvd9 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b292\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\peer\\peer.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b292\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/tap
+#
+
+mkdir -p $WORK\b293\
+cat >$WORK\b293\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile google.golang.org/grpc/metadata=$WORK\b230\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b293\\_pkg_.a" -trimpath "$WORK\\b293=>" -p google.golang.org/grpc/tap -lang=go1.21 -complete -buildid Ou1TO5uJcnMhgtkKQmFi/Ou1TO5uJcnMhgtkKQmFi -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b293\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\tap\\tap.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b293\\_pkg_.a" # internal
+
+#
+# net/http/httputil
+#
+
+mkdir -p $WORK\b294\
+cat >$WORK\b294\importcfg << 'EOF' # internal
+# import config
+importmap golang.org/x/net/http/httpguts=vendor/golang.org/x/net/http/httpguts
+packagefile bufio=$WORK\b091\_pkg_.a
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile context=$WORK\b002\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile vendor/golang.org/x/net/http/httpguts=$WORK\b152\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile log=$WORK\b067\_pkg_.a
+packagefile mime=$WORK\b162\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile net/http=$WORK\b090\_pkg_.a
+packagefile net/http/httptrace=$WORK\b165\_pkg_.a
+packagefile net/http/internal=$WORK\b166\_pkg_.a
+packagefile net/http/internal/ascii=$WORK\b167\_pkg_.a
+packagefile net/textproto=$WORK\b158\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b294\\_pkg_.a" -trimpath "$WORK\\b294=>" -p net/http/httputil -lang=go1.23 -std -complete -buildid DwB6Q1QmUAZC6SnSicih/DwB6Q1QmUAZC6SnSicih -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b294\\importcfg" -pack "E:\\go1.23.3\\src\\net\\http\\httputil\\dump.go" "E:\\go1.23.3\\src\\net\\http\\httputil\\httputil.go" "E:\\go1.23.3\\src\\net\\http\\httputil\\persist.go" "E:\\go1.23.3\\src\\net\\http\\httputil\\reverseproxy.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b294\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/transport
+#
+
+mkdir -p $WORK\b281\
+cat >$WORK\b281\importcfg << 'EOF' # internal
+# import config
+packagefile bufio=$WORK\b091\_pkg_.a
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile context=$WORK\b002\_pkg_.a
+packagefile encoding/base64=$WORK\b064\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile golang.org/x/net/http2=$WORK\b282\_pkg_.a
+packagefile golang.org/x/net/http2/hpack=$WORK\b289\_pkg_.a
+packagefile google.golang.org/grpc/codes=$WORK\b253\_pkg_.a
+packagefile google.golang.org/grpc/credentials=$WORK\b208\_pkg_.a
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+packagefile google.golang.org/grpc/internal=$WORK\b227\_pkg_.a
+packagefile google.golang.org/grpc/internal/channelz=$WORK\b204\_pkg_.a
+packagefile google.golang.org/grpc/internal/credentials=$WORK\b210\_pkg_.a
+packagefile google.golang.org/grpc/internal/grpclog=$WORK\b234\_pkg_.a
+packagefile google.golang.org/grpc/internal/grpcsync=$WORK\b270\_pkg_.a
+packagefile google.golang.org/grpc/internal/grpcutil=$WORK\b256\_pkg_.a
+packagefile google.golang.org/grpc/internal/metadata=$WORK\b273\_pkg_.a
+packagefile google.golang.org/grpc/internal/pretty=$WORK\b235\_pkg_.a
+packagefile google.golang.org/grpc/internal/status=$WORK\b269\_pkg_.a
+packagefile google.golang.org/grpc/internal/syscall=$WORK\b290\_pkg_.a
+packagefile google.golang.org/grpc/internal/transport/networktype=$WORK\b278\_pkg_.a
+packagefile google.golang.org/grpc/keepalive=$WORK\b291\_pkg_.a
+packagefile google.golang.org/grpc/mem=$WORK\b257\_pkg_.a
+packagefile google.golang.org/grpc/metadata=$WORK\b230\_pkg_.a
+packagefile google.golang.org/grpc/peer=$WORK\b292\_pkg_.a
+packagefile google.golang.org/grpc/resolver=$WORK\b231\_pkg_.a
+packagefile google.golang.org/grpc/stats=$WORK\b280\_pkg_.a
+packagefile google.golang.org/grpc/status=$WORK\b266\_pkg_.a
+packagefile google.golang.org/grpc/tap=$WORK\b293\_pkg_.a
+packagefile google.golang.org/protobuf/proto=$WORK\b212\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile math/rand=$WORK\b099\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile net/http=$WORK\b090\_pkg_.a
+packagefile net/http/httputil=$WORK\b294\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile path/filepath=$WORK\b075\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b281\\_pkg_.a" -trimpath "$WORK\\b281=>" -p google.golang.org/grpc/internal/transport -lang=go1.21 -complete -buildid vAIoyxNOFikPubZ78BdL/vAIoyxNOFikPubZ78BdL -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b281\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\transport\\bdp_estimator.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\transport\\controlbuf.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\transport\\defaults.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\transport\\flowcontrol.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\transport\\handler_server.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\transport\\http2_client.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\transport\\http2_server.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\transport\\http_util.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\transport\\logging.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\transport\\proxy.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\transport\\transport.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b281\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/balancer/grpclb/state
+#
+
+mkdir -p $WORK\b297\
+cat >$WORK\b297\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/grpc/resolver=$WORK\b231\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b297\\_pkg_.a" -trimpath "$WORK\\b297=>" -p google.golang.org/grpc/balancer/grpclb/state -lang=go1.21 -complete -buildid 4voDA0GNI_aCyLiJxxRs/4voDA0GNI_aCyLiJxxRs -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b297\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\balancer\\grpclb\\state\\state.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b297\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/resolver/dns/internal
+#
+
+mkdir -p $WORK\b298\
+cat >$WORK\b298\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b298\\_pkg_.a" -trimpath "$WORK\\b298=>" -p google.golang.org/grpc/internal/resolver/dns/internal -lang=go1.21 -complete -buildid _S7r97PU_p9-bcYXfotm/_S7r97PU_p9-bcYXfotm -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b298\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\resolver\\dns\\internal\\internal.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b298\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/internal/resolver/dns
+#
+
+mkdir -p $WORK\b296\
+cat >$WORK\b296\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/balancer/grpclb/state=$WORK\b297\_pkg_.a
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+packagefile google.golang.org/grpc/internal/backoff=$WORK\b259\_pkg_.a
+packagefile google.golang.org/grpc/internal/envconfig=$WORK\b211\_pkg_.a
+packagefile google.golang.org/grpc/internal/resolver/dns/internal=$WORK\b298\_pkg_.a
+packagefile google.golang.org/grpc/resolver=$WORK\b231\_pkg_.a
+packagefile google.golang.org/grpc/serviceconfig=$WORK\b228\_pkg_.a
+packagefile math/rand=$WORK\b099\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b296\\_pkg_.a" -trimpath "$WORK\\b296=>" -p google.golang.org/grpc/internal/resolver/dns -lang=go1.21 -complete -buildid edYKBoZdvCWSRe-zuk_N/edYKBoZdvCWSRe-zuk_N -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b296\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\internal\\resolver\\dns\\dns_resolver.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b296\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/resolver/dns
+#
+
+mkdir -p $WORK\b295\
+cat >$WORK\b295\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/grpc/internal/resolver/dns=$WORK\b296\_pkg_.a
+packagefile google.golang.org/grpc/resolver=$WORK\b231\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b295\\_pkg_.a" -trimpath "$WORK\\b295=>" -p google.golang.org/grpc/resolver/dns -lang=go1.21 -complete -buildid zKXDfEu7cWV0nAzh3Dgi/zKXDfEu7cWV0nAzh3Dgi -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b295\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\resolver\\dns\\dns_resolver.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b295\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc
+#
+
+mkdir -p $WORK\b193\
+cat >$WORK\b193\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile compress/gzip=$WORK\b092\_pkg_.a
+packagefile context=$WORK\b002\_pkg_.a
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile golang.org/x/net/trace=$WORK\b194\_pkg_.a
+packagefile google.golang.org/grpc/backoff=$WORK\b201\_pkg_.a
+packagefile google.golang.org/grpc/balancer=$WORK\b202\_pkg_.a
+packagefile google.golang.org/grpc/balancer/base=$WORK\b232\_pkg_.a
+packagefile google.golang.org/grpc/balancer/pickfirst=$WORK\b233\_pkg_.a
+packagefile google.golang.org/grpc/balancer/roundrobin=$WORK\b252\_pkg_.a
+packagefile google.golang.org/grpc/channelz=$WORK\b203\_pkg_.a
+packagefile google.golang.org/grpc/codes=$WORK\b253\_pkg_.a
+packagefile google.golang.org/grpc/connectivity=$WORK\b205\_pkg_.a
+packagefile google.golang.org/grpc/credentials=$WORK\b208\_pkg_.a
+packagefile google.golang.org/grpc/credentials/insecure=$WORK\b254\_pkg_.a
+packagefile google.golang.org/grpc/encoding=$WORK\b255\_pkg_.a
+packagefile google.golang.org/grpc/encoding/proto=$WORK\b258\_pkg_.a
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+packagefile google.golang.org/grpc/internal=$WORK\b227\_pkg_.a
+packagefile google.golang.org/grpc/internal/backoff=$WORK\b259\_pkg_.a
+packagefile google.golang.org/grpc/internal/balancer/gracefulswitch=$WORK\b260\_pkg_.a
+packagefile google.golang.org/grpc/internal/balancerload=$WORK\b261\_pkg_.a
+packagefile google.golang.org/grpc/internal/binarylog=$WORK\b262\_pkg_.a
+packagefile google.golang.org/grpc/internal/channelz=$WORK\b204\_pkg_.a
+packagefile google.golang.org/grpc/internal/grpcsync=$WORK\b270\_pkg_.a
+packagefile google.golang.org/grpc/internal/grpcutil=$WORK\b256\_pkg_.a
+packagefile google.golang.org/grpc/internal/idle=$WORK\b272\_pkg_.a
+packagefile google.golang.org/grpc/internal/metadata=$WORK\b273\_pkg_.a
+packagefile google.golang.org/grpc/internal/pretty=$WORK\b235\_pkg_.a
+packagefile google.golang.org/grpc/internal/resolver=$WORK\b274\_pkg_.a
+packagefile google.golang.org/grpc/internal/resolver/passthrough=$WORK\b276\_pkg_.a
+packagefile google.golang.org/grpc/internal/resolver/unix=$WORK\b277\_pkg_.a
+packagefile google.golang.org/grpc/internal/serviceconfig=$WORK\b275\_pkg_.a
+packagefile google.golang.org/grpc/internal/stats=$WORK\b279\_pkg_.a
+packagefile google.golang.org/grpc/internal/status=$WORK\b269\_pkg_.a
+packagefile google.golang.org/grpc/internal/transport=$WORK\b281\_pkg_.a
+packagefile google.golang.org/grpc/keepalive=$WORK\b291\_pkg_.a
+packagefile google.golang.org/grpc/mem=$WORK\b257\_pkg_.a
+packagefile google.golang.org/grpc/metadata=$WORK\b230\_pkg_.a
+packagefile google.golang.org/grpc/peer=$WORK\b292\_pkg_.a
+packagefile google.golang.org/grpc/resolver=$WORK\b231\_pkg_.a
+packagefile google.golang.org/grpc/resolver/dns=$WORK\b295\_pkg_.a
+packagefile google.golang.org/grpc/serviceconfig=$WORK\b228\_pkg_.a
+packagefile google.golang.org/grpc/stats=$WORK\b280\_pkg_.a
+packagefile google.golang.org/grpc/status=$WORK\b266\_pkg_.a
+packagefile google.golang.org/grpc/tap=$WORK\b293\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile math/rand=$WORK\b099\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile net/http=$WORK\b090\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b193\\_pkg_.a" -trimpath "$WORK\\b193=>" -p google.golang.org/grpc -lang=go1.21 -complete -buildid UF84UHla8ZDLbS5lkMV-/UF84UHla8ZDLbS5lkMV- -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b193\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\backoff.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\balancer_wrapper.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\call.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\clientconn.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\codec.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\dialoptions.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\interceptor.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\picker_wrapper.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\preloader.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\resolver_wrapper.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\rpc_util.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\server.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\service_config.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\stream.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\stream_interfaces.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\trace.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\trace_withtrace.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\version.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b193\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/encoding/gzip
+#
+
+mkdir -p $WORK\b299\
+cat >$WORK\b299\importcfg << 'EOF' # internal
+# import config
+packagefile compress/gzip=$WORK\b092\_pkg_.a
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile google.golang.org/grpc/encoding=$WORK\b255\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b299\\_pkg_.a" -trimpath "$WORK\\b299=>" -p google.golang.org/grpc/encoding/gzip -lang=go1.21 -complete -buildid REK7IUJMWWdoXXzVwuXL/REK7IUJMWWdoXXzVwuXL -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b299\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\encoding\\gzip\\gzip.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b299\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal/oconf
+#
+
+mkdir -p $WORK\b170\
+cat >$WORK\b170\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/tls=$WORK\b100\_pkg_.a
+packagefile crypto/x509=$WORK\b139\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal/envconfig=$WORK\b171\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal/retry=$WORK\b172\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal/global=$WORK\b071\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric=$WORK\b174\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric/metricdata=$WORK\b180\_pkg_.a
+packagefile google.golang.org/grpc=$WORK\b193\_pkg_.a
+packagefile google.golang.org/grpc/backoff=$WORK\b201\_pkg_.a
+packagefile google.golang.org/grpc/credentials=$WORK\b208\_pkg_.a
+packagefile google.golang.org/grpc/credentials/insecure=$WORK\b254\_pkg_.a
+packagefile google.golang.org/grpc/encoding/gzip=$WORK\b299\_pkg_.a
+packagefile net/http=$WORK\b090\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile path=$WORK\b053\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b170\\_pkg_.a" -trimpath "$WORK\\b170=>" -p go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal/oconf -lang=go1.22 -complete -buildid RL34YGg4JjubJRJX_5Vm/RL34YGg4JjubJRJX_5Vm -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b170\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetricgrpc@v1.31.0\\internal\\oconf\\envconfig.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetricgrpc@v1.31.0\\internal\\oconf\\options.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetricgrpc@v1.31.0\\internal\\oconf\\optiontypes.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetricgrpc@v1.31.0\\internal\\oconf\\tls.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b170\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/proto/otlp/common/v1
+#
+
+mkdir -p $WORK\b301\
+cat >$WORK\b301\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoimpl=$WORK\b246\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b301\\_pkg_.a" -trimpath "$WORK\\b301=>" -p go.opentelemetry.io/proto/otlp/common/v1 -lang=go1.17 -complete -buildid XT8o8Cv82Y96dlzPgcW4/XT8o8Cv82Y96dlzPgcW4 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b301\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\proto\\otlp@v1.3.1\\common\\v1\\common.pb.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b301\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/proto/otlp/resource/v1
+#
+
+mkdir -p $WORK\b303\
+cat >$WORK\b303\importcfg << 'EOF' # internal
+# import config
+packagefile go.opentelemetry.io/proto/otlp/common/v1=$WORK\b301\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoimpl=$WORK\b246\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b303\\_pkg_.a" -trimpath "$WORK\\b303=>" -p go.opentelemetry.io/proto/otlp/resource/v1 -lang=go1.17 -complete -buildid HfGF8YWbX49VNW98dktc/HfGF8YWbX49VNW98dktc -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b303\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\proto\\otlp@v1.3.1\\resource\\v1\\resource.pb.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b303\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/proto/otlp/metrics/v1
+#
+
+mkdir -p $WORK\b302\
+cat >$WORK\b302\importcfg << 'EOF' # internal
+# import config
+packagefile go.opentelemetry.io/proto/otlp/common/v1=$WORK\b301\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/resource/v1=$WORK\b303\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoimpl=$WORK\b246\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b302\\_pkg_.a" -trimpath "$WORK\\b302=>" -p go.opentelemetry.io/proto/otlp/metrics/v1 -lang=go1.17 -complete -buildid WeTSgMoOJRXhxDy2Dv1-/WeTSgMoOJRXhxDy2Dv1- -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b302\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\proto\\otlp@v1.3.1\\metrics\\v1\\metrics.pb.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b302\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal/transform
+#
+
+mkdir -p $WORK\b300\
+cat >$WORK\b300\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel/attribute=$WORK\b076\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric/metricdata=$WORK\b180\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/common/v1=$WORK\b301\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/metrics/v1=$WORK\b302\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/resource/v1=$WORK\b303\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b300\\_pkg_.a" -trimpath "$WORK\\b300=>" -p go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal/transform -lang=go1.22 -complete -buildid PJ8L-uvg5nBNcW91oOhK/PJ8L-uvg5nBNcW91oOhK -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b300\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetricgrpc@v1.31.0\\internal\\transform\\attribute.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetricgrpc@v1.31.0\\internal\\transform\\error.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetricgrpc@v1.31.0\\internal\\transform\\metricdata.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b300\\_pkg_.a" # internal
+
+#
+# flag
+#
+
+mkdir -p $WORK\b308\
+cat >$WORK\b308\importcfg << 'EOF' # internal
+# import config
+packagefile encoding=$WORK\b062\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b308\\_pkg_.a" -trimpath "$WORK\\b308=>" -p flag -lang=go1.23 -std -complete -buildid 4XKiQTt9wDZVVzJ-7yDk/4XKiQTt9wDZVVzJ-7yDk -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b308\\importcfg" -pack "E:\\go1.23.3\\src\\flag\\flag.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b308\\_pkg_.a" # internal
+
+#
+# github.com/grpc-ecosystem/grpc-gateway/v2/utilities
+#
+
+mkdir -p $WORK\b307\
+cat >$WORK\b307\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile flag=$WORK\b308\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b307\\_pkg_.a" -trimpath "$WORK\\b307=>" -p github.com/grpc-ecosystem/grpc-gateway/v2/utilities -lang=go1.21 -complete -buildid TbSv2SNhJoOV3ZQHzUfA/TbSv2SNhJoOV3ZQHzUfA -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b307\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\utilities\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\utilities\\pattern.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\utilities\\readerfactory.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\utilities\\string_array_flag.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\utilities\\trie.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b307\\_pkg_.a" # internal
+
+#
+# github.com/grpc-ecosystem/grpc-gateway/v2/internal/httprule
+#
+
+mkdir -p $WORK\b306\
+cat >$WORK\b306\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile github.com/grpc-ecosystem/grpc-gateway/v2/utilities=$WORK\b307\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b306\\_pkg_.a" -trimpath "$WORK\\b306=>" -p github.com/grpc-ecosystem/grpc-gateway/v2/internal/httprule -lang=go1.21 -complete -buildid MNJ2zOtAShfuEKrwKrhW/MNJ2zOtAShfuEKrwKrhW -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b306\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\internal\\httprule\\compile.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\internal\\httprule\\parse.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\internal\\httprule\\types.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b306\\_pkg_.a" # internal
+
+#
+# google.golang.org/genproto/googleapis/api/httpbody
+#
+
+mkdir -p $WORK\b309\
+cat >$WORK\b309\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoimpl=$WORK\b246\_pkg_.a
+packagefile google.golang.org/protobuf/types/known/anypb=$WORK\b268\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b309\\_pkg_.a" -trimpath "$WORK\\b309=>" -p google.golang.org/genproto/googleapis/api/httpbody -lang=go1.21 -complete -buildid 9SXHrHIT2IABQla_psk2/9SXHrHIT2IABQla_psk2 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b309\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\genproto\\googleapis\\api@v0.0.0-20241104194629-dd2ea8efbc28\\httpbody\\httpbody.pb.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b309\\_pkg_.a" # internal
+
+#
+# google.golang.org/grpc/health/grpc_health_v1
+#
+
+mkdir -p $WORK\b310\
+cat >$WORK\b310\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile google.golang.org/grpc=$WORK\b193\_pkg_.a
+packagefile google.golang.org/grpc/codes=$WORK\b253\_pkg_.a
+packagefile google.golang.org/grpc/status=$WORK\b266\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoimpl=$WORK\b246\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b310\\_pkg_.a" -trimpath "$WORK\\b310=>" -p google.golang.org/grpc/health/grpc_health_v1 -lang=go1.21 -complete -buildid ds1wPxmgmb4TqxQacYma/ds1wPxmgmb4TqxQacYma -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b310\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\health\\grpc_health_v1\\health.pb.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\grpc@v1.67.1\\health\\grpc_health_v1\\health_grpc.pb.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b310\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/types/known/fieldmaskpb
+#
+
+mkdir -p $WORK\b311\
+cat >$WORK\b311\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/proto=$WORK\b212\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoimpl=$WORK\b246\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b311\\_pkg_.a" -trimpath "$WORK\\b311=>" -p google.golang.org/protobuf/types/known/fieldmaskpb -lang=go1.21 -complete -buildid U-Q0k7_tmXcDs6BS_WQc/U-Q0k7_tmXcDs6BS_WQc -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b311\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\types\\known\\fieldmaskpb\\field_mask.pb.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b311\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/types/known/structpb
+#
+
+mkdir -p $WORK\b312\
+cat >$WORK\b312\importcfg << 'EOF' # internal
+# import config
+packagefile encoding/base64=$WORK\b064\_pkg_.a
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile google.golang.org/protobuf/encoding/protojson=$WORK\b236\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoimpl=$WORK\b246\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b312\\_pkg_.a" -trimpath "$WORK\\b312=>" -p google.golang.org/protobuf/types/known/structpb -lang=go1.21 -complete -buildid oBtBG4J4DnLyuaYmQsnD/oBtBG4J4DnLyuaYmQsnD -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b312\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\types\\known\\structpb\\struct.pb.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b312\\_pkg_.a" # internal
+
+#
+# google.golang.org/protobuf/types/known/wrapperspb
+#
+
+mkdir -p $WORK\b313\
+cat >$WORK\b313\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoimpl=$WORK\b246\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b313\\_pkg_.a" -trimpath "$WORK\\b313=>" -p google.golang.org/protobuf/types/known/wrapperspb -lang=go1.21 -complete -buildid IJqJTBKl2ewCWNAdLaLv/IJqJTBKl2ewCWNAdLaLv -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b313\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\protobuf@v1.35.1\\types\\known\\wrapperspb\\wrappers.pb.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b313\\_pkg_.a" # internal
+
+#
+# github.com/grpc-ecosystem/grpc-gateway/v2/runtime
+#
+
+mkdir -p $WORK\b305\
+cat >$WORK\b305\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile context=$WORK\b002\_pkg_.a
+packagefile encoding/base64=$WORK\b064\_pkg_.a
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile github.com/grpc-ecosystem/grpc-gateway/v2/internal/httprule=$WORK\b306\_pkg_.a
+packagefile github.com/grpc-ecosystem/grpc-gateway/v2/utilities=$WORK\b307\_pkg_.a
+packagefile google.golang.org/genproto/googleapis/api/httpbody=$WORK\b309\_pkg_.a
+packagefile google.golang.org/grpc/codes=$WORK\b253\_pkg_.a
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+packagefile google.golang.org/grpc/health/grpc_health_v1=$WORK\b310\_pkg_.a
+packagefile google.golang.org/grpc/metadata=$WORK\b230\_pkg_.a
+packagefile google.golang.org/grpc/status=$WORK\b266\_pkg_.a
+packagefile google.golang.org/protobuf/encoding/protojson=$WORK\b236\_pkg_.a
+packagefile google.golang.org/protobuf/proto=$WORK\b212\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoregistry=$WORK\b225\_pkg_.a
+packagefile google.golang.org/protobuf/types/known/durationpb=$WORK\b264\_pkg_.a
+packagefile google.golang.org/protobuf/types/known/fieldmaskpb=$WORK\b311\_pkg_.a
+packagefile google.golang.org/protobuf/types/known/structpb=$WORK\b312\_pkg_.a
+packagefile google.golang.org/protobuf/types/known/timestamppb=$WORK\b265\_pkg_.a
+packagefile google.golang.org/protobuf/types/known/wrapperspb=$WORK\b313\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile mime=$WORK\b162\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile net/http=$WORK\b090\_pkg_.a
+packagefile net/textproto=$WORK\b158\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile regexp=$WORK\b190\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b305\\_pkg_.a" -trimpath "$WORK\\b305=>" -p github.com/grpc-ecosystem/grpc-gateway/v2/runtime -lang=go1.21 -complete -buildid DjiqjjDCTRUIbf65Y6bD/DjiqjjDCTRUIbf65Y6bD -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b305\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\runtime\\context.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\runtime\\convert.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\runtime\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\runtime\\errors.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\runtime\\fieldmask.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\runtime\\handler.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\runtime\\marshal_httpbodyproto.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\runtime\\marshal_json.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\runtime\\marshal_jsonpb.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\runtime\\marshal_proto.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\runtime\\marshaler.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\runtime\\marshaler_registry.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\runtime\\mux.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\runtime\\pattern.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\runtime\\proto2_convert.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\github.com\\grpc-ecosystem\\grpc-gateway\\v2@v2.23.0\\runtime\\query.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b305\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/proto/otlp/collector/metrics/v1
+#
+
+mkdir -p $WORK\b304\
+cat >$WORK\b304\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile github.com/grpc-ecosystem/grpc-gateway/v2/runtime=$WORK\b305\_pkg_.a
+packagefile github.com/grpc-ecosystem/grpc-gateway/v2/utilities=$WORK\b307\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/metrics/v1=$WORK\b302\_pkg_.a
+packagefile google.golang.org/grpc=$WORK\b193\_pkg_.a
+packagefile google.golang.org/grpc/codes=$WORK\b253\_pkg_.a
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+packagefile google.golang.org/grpc/metadata=$WORK\b230\_pkg_.a
+packagefile google.golang.org/grpc/status=$WORK\b266\_pkg_.a
+packagefile google.golang.org/protobuf/proto=$WORK\b212\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoimpl=$WORK\b246\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile net/http=$WORK\b090\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b304\\_pkg_.a" -trimpath "$WORK\\b304=>" -p go.opentelemetry.io/proto/otlp/collector/metrics/v1 -lang=go1.17 -complete -buildid 48vsvD_ADH16IkR0t2SR/48vsvD_ADH16IkR0t2SR -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b304\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\proto\\otlp@v1.3.1\\collector\\metrics\\v1\\metrics_service.pb.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\proto\\otlp@v1.3.1\\collector\\metrics\\v1\\metrics_service.pb.gw.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\proto\\otlp@v1.3.1\\collector\\metrics\\v1\\metrics_service_grpc.pb.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b304\\_pkg_.a" # internal
+
+#
+# google.golang.org/genproto/googleapis/rpc/errdetails
+#
+
+mkdir -p $WORK\b314\
+cat >$WORK\b314\importcfg << 'EOF' # internal
+# import config
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoimpl=$WORK\b246\_pkg_.a
+packagefile google.golang.org/protobuf/types/known/durationpb=$WORK\b264\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b314\\_pkg_.a" -trimpath "$WORK\\b314=>" -p google.golang.org/genproto/googleapis/rpc/errdetails -lang=go1.21 -complete -buildid Mj1gXRSgNev0Ldm_1JjB/Mj1gXRSgNev0Ldm_1JjB -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b314\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\google.golang.org\\genproto\\googleapis\\rpc@v0.0.0-20241104194629-dd2ea8efbc28\\errdetails\\error_details.pb.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b314\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc
+#
+
+mkdir -p $WORK\b168\
+cat >$WORK\b168\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel=$WORK\b058\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal=$WORK\b169\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal/oconf=$WORK\b170\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal/retry=$WORK\b172\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal/transform=$WORK\b300\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal/global=$WORK\b071\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric=$WORK\b174\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric/metricdata=$WORK\b180\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/collector/metrics/v1=$WORK\b304\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/metrics/v1=$WORK\b302\_pkg_.a
+packagefile google.golang.org/genproto/googleapis/rpc/errdetails=$WORK\b314\_pkg_.a
+packagefile google.golang.org/grpc=$WORK\b193\_pkg_.a
+packagefile google.golang.org/grpc/codes=$WORK\b253\_pkg_.a
+packagefile google.golang.org/grpc/credentials=$WORK\b208\_pkg_.a
+packagefile google.golang.org/grpc/metadata=$WORK\b230\_pkg_.a
+packagefile google.golang.org/grpc/status=$WORK\b266\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b168\\_pkg_.a" -trimpath "$WORK\\b168=>" -p go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc -lang=go1.22 -complete -buildid 3F43bj5nvxv0nBatZtR5/3F43bj5nvxv0nBatZtR5 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b168\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetricgrpc@v1.31.0\\client.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetricgrpc@v1.31.0\\config.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetricgrpc@v1.31.0\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetricgrpc@v1.31.0\\exporter.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetricgrpc@v1.31.0\\version.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b168\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal
+#
+
+mkdir -p $WORK\b316\
+cat >$WORK\b316\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b316\\_pkg_.a" -trimpath "$WORK\\b316=>" -p go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal -lang=go1.22 -complete -buildid AGVnUK53_VapVM2Nzk_r/AGVnUK53_VapVM2Nzk_r -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b316\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetrichttp@v1.31.0\\internal\\gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetrichttp@v1.31.0\\internal\\partialsuccess.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b316\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal/envconfig
+#
+
+mkdir -p $WORK\b318\
+cat >$WORK\b318\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/tls=$WORK\b100\_pkg_.a
+packagefile crypto/x509=$WORK\b139\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal/global=$WORK\b071\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b318\\_pkg_.a" -trimpath "$WORK\\b318=>" -p go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal/envconfig -lang=go1.22 -complete -buildid JisMrVXM_ikU2eFoFNig/JisMrVXM_ikU2eFoFNig -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b318\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetrichttp@v1.31.0\\internal\\envconfig\\envconfig.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b318\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal/retry
+#
+
+mkdir -p $WORK\b319\
+cat >$WORK\b319\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile github.com/cenkalti/backoff/v4=$WORK\b173\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b319\\_pkg_.a" -trimpath "$WORK\\b319=>" -p go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal/retry -lang=go1.22 -complete -buildid tPGJ9Q6XL9a8rKzTdUdG/tPGJ9Q6XL9a8rKzTdUdG -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b319\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetrichttp@v1.31.0\\internal\\retry\\retry.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b319\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal/oconf
+#
+
+mkdir -p $WORK\b317\
+cat >$WORK\b317\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/tls=$WORK\b100\_pkg_.a
+packagefile crypto/x509=$WORK\b139\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal/envconfig=$WORK\b318\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal/retry=$WORK\b319\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal/global=$WORK\b071\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric=$WORK\b174\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric/metricdata=$WORK\b180\_pkg_.a
+packagefile google.golang.org/grpc=$WORK\b193\_pkg_.a
+packagefile google.golang.org/grpc/backoff=$WORK\b201\_pkg_.a
+packagefile google.golang.org/grpc/credentials=$WORK\b208\_pkg_.a
+packagefile google.golang.org/grpc/credentials/insecure=$WORK\b254\_pkg_.a
+packagefile google.golang.org/grpc/encoding/gzip=$WORK\b299\_pkg_.a
+packagefile net/http=$WORK\b090\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile path=$WORK\b053\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b317\\_pkg_.a" -trimpath "$WORK\\b317=>" -p go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal/oconf -lang=go1.22 -complete -buildid CLLtEqULVQbOlvClCg_O/CLLtEqULVQbOlvClCg_O -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b317\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetrichttp@v1.31.0\\internal\\oconf\\envconfig.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetrichttp@v1.31.0\\internal\\oconf\\options.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetrichttp@v1.31.0\\internal\\oconf\\optiontypes.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetrichttp@v1.31.0\\internal\\oconf\\tls.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b317\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal/transform
+#
+
+mkdir -p $WORK\b320\
+cat >$WORK\b320\importcfg << 'EOF' # internal
+# import config
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel/attribute=$WORK\b076\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric/metricdata=$WORK\b180\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/common/v1=$WORK\b301\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/metrics/v1=$WORK\b302\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/resource/v1=$WORK\b303\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b320\\_pkg_.a" -trimpath "$WORK\\b320=>" -p go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal/transform -lang=go1.22 -complete -buildid o02BF9Dmv2egiltOpvwb/o02BF9Dmv2egiltOpvwb -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b320\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetrichttp@v1.31.0\\internal\\transform\\attribute.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetrichttp@v1.31.0\\internal\\transform\\error.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetrichttp@v1.31.0\\internal\\transform\\metricdata.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b320\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp
+#
+
+mkdir -p $WORK\b315\
+cat >$WORK\b315\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile compress/gzip=$WORK\b092\_pkg_.a
+packagefile context=$WORK\b002\_pkg_.a
+packagefile crypto/tls=$WORK\b100\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel=$WORK\b058\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal=$WORK\b316\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal/oconf=$WORK\b317\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal/retry=$WORK\b319\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal/transform=$WORK\b320\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal/global=$WORK\b071\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric=$WORK\b174\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric/metricdata=$WORK\b180\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/collector/metrics/v1=$WORK\b304\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/metrics/v1=$WORK\b302\_pkg_.a
+packagefile google.golang.org/protobuf/proto=$WORK\b212\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile net/http=$WORK\b090\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b315\\_pkg_.a" -trimpath "$WORK\\b315=>" -p go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp -lang=go1.22 -complete -buildid QgCL_e6P1ttjjeRmx7P6/QgCL_e6P1ttjjeRmx7P6 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b315\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetrichttp@v1.31.0\\client.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetrichttp@v1.31.0\\config.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetrichttp@v1.31.0\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetrichttp@v1.31.0\\exporter.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlpmetric\\otlpmetrichttp@v1.31.0\\version.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b315\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/sdk/internal/env
+#
+
+mkdir -p $WORK\b324\
+cat >$WORK\b324\importcfg << 'EOF' # internal
+# import config
+packagefile go.opentelemetry.io/otel/internal/global=$WORK\b071\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b324\\_pkg_.a" -trimpath "$WORK\\b324=>" -p go.opentelemetry.io/otel/sdk/internal/env -lang=go1.22 -complete -buildid jmrrDCBZG25H4I8XLVYM/jmrrDCBZG25H4I8XLVYM -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b324\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\internal\\env\\env.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b324\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/trace/noop
+#
+
+mkdir -p $WORK\b325\
+cat >$WORK\b325\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile go.opentelemetry.io/otel/attribute=$WORK\b076\_pkg_.a
+packagefile go.opentelemetry.io/otel/codes=$WORK\b080\_pkg_.a
+packagefile go.opentelemetry.io/otel/trace=$WORK\b088\_pkg_.a
+packagefile go.opentelemetry.io/otel/trace/embedded=$WORK\b089\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b325\\_pkg_.a" -trimpath "$WORK\\b325=>" -p go.opentelemetry.io/otel/trace/noop -lang=go1.22 -complete -buildid O2V2bAkj_y_Df8gGwBd_/O2V2bAkj_y_Df8gGwBd_ -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b325\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\trace@v1.32.0\\noop\\noop.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b325\\_pkg_.a" # internal
+
+#
+# runtime/trace
+#
+
+mkdir -p $WORK\b326\
+cat >$WORK\b326\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b326\\_pkg_.a" -trimpath "$WORK\\b326=>" -p runtime/trace -lang=go1.23 -std -buildid jeA9upFGG3Kp2eZEuZKo/jeA9upFGG3Kp2eZEuZKo -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b326\\importcfg" -pack "E:\\go1.23.3\\src\\runtime\\trace\\annotation.go" "E:\\go1.23.3\\src\\runtime\\trace\\trace.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b326\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/sdk/trace
+#
+
+mkdir -p $WORK\b323\
+cat >$WORK\b323\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile crypto/rand=$WORK\b096\_pkg_.a
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel=$WORK\b058\_pkg_.a
+packagefile go.opentelemetry.io/otel/attribute=$WORK\b076\_pkg_.a
+packagefile go.opentelemetry.io/otel/codes=$WORK\b080\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal/global=$WORK\b071\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/instrumentation=$WORK\b176\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/internal/env=$WORK\b324\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/resource=$WORK\b181\_pkg_.a
+packagefile go.opentelemetry.io/otel/semconv/v1.26.0=$WORK\b186\_pkg_.a
+packagefile go.opentelemetry.io/otel/trace=$WORK\b088\_pkg_.a
+packagefile go.opentelemetry.io/otel/trace/embedded=$WORK\b089\_pkg_.a
+packagefile go.opentelemetry.io/otel/trace/noop=$WORK\b325\_pkg_.a
+packagefile math/rand=$WORK\b099\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile runtime/trace=$WORK\b326\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b323\\_pkg_.a" -trimpath "$WORK\\b323=>" -p go.opentelemetry.io/otel/sdk/trace -lang=go1.22 -complete -buildid VEa0J-SB_ckd8O7N78JQ/VEa0J-SB_ckd8O7N78JQ -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b323\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\trace\\batch_span_processor.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\trace\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\trace\\event.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\trace\\evictedqueue.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\trace\\id_generator.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\trace\\link.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\trace\\provider.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\trace\\sampler_env.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\trace\\sampling.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\trace\\simple_span_processor.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\trace\\snapshot.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\trace\\span.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\trace\\span_exporter.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\trace\\span_limits.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\trace\\span_processor.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\trace\\tracer.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\sdk@v1.32.0\\trace\\version.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b323\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/proto/otlp/trace/v1
+#
+
+mkdir -p $WORK\b327\
+cat >$WORK\b327\importcfg << 'EOF' # internal
+# import config
+packagefile go.opentelemetry.io/proto/otlp/common/v1=$WORK\b301\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/resource/v1=$WORK\b303\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoimpl=$WORK\b246\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b327\\_pkg_.a" -trimpath "$WORK\\b327=>" -p go.opentelemetry.io/proto/otlp/trace/v1 -lang=go1.17 -complete -buildid ICcryNo9xFf_fRKVQKB9/ICcryNo9xFf_fRKVQKB9 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b327\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\proto\\otlp@v1.3.1\\trace\\v1\\trace.pb.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b327\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlptrace/internal/tracetransform
+#
+
+mkdir -p $WORK\b322\
+cat >$WORK\b322\importcfg << 'EOF' # internal
+# import config
+packagefile go.opentelemetry.io/otel/attribute=$WORK\b076\_pkg_.a
+packagefile go.opentelemetry.io/otel/codes=$WORK\b080\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/instrumentation=$WORK\b176\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/resource=$WORK\b181\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/trace=$WORK\b323\_pkg_.a
+packagefile go.opentelemetry.io/otel/trace=$WORK\b088\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/common/v1=$WORK\b301\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/resource/v1=$WORK\b303\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/trace/v1=$WORK\b327\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b322\\_pkg_.a" -trimpath "$WORK\\b322=>" -p go.opentelemetry.io/otel/exporters/otlp/otlptrace/internal/tracetransform -lang=go1.22 -complete -buildid fsY7CDPR5tsO8hnRVwXh/fsY7CDPR5tsO8hnRVwXh -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b322\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace@v1.31.0\\internal\\tracetransform\\attribute.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace@v1.31.0\\internal\\tracetransform\\instrumentation.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace@v1.31.0\\internal\\tracetransform\\resource.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace@v1.31.0\\internal\\tracetransform\\span.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b322\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlptrace
+#
+
+mkdir -p $WORK\b321\
+cat >$WORK\b321\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/internal/tracetransform=$WORK\b322\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/trace=$WORK\b323\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/trace/v1=$WORK\b327\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b321\\_pkg_.a" -trimpath "$WORK\\b321=>" -p go.opentelemetry.io/otel/exporters/otlp/otlptrace -lang=go1.22 -complete -buildid x2FlvIDofFaPp71E7yNJ/x2FlvIDofFaPp71E7yNJ -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b321\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace@v1.31.0\\clients.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace@v1.31.0\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace@v1.31.0\\exporter.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace@v1.31.0\\version.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b321\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc/internal
+#
+
+mkdir -p $WORK\b329\
+cat >$WORK\b329\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b329\\_pkg_.a" -trimpath "$WORK\\b329=>" -p go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc/internal -lang=go1.22 -complete -buildid f5e7jb0N9f_9kbKWovk5/f5e7jb0N9f_9kbKWovk5 -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b329\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracegrpc@v1.31.0\\internal\\gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracegrpc@v1.31.0\\internal\\partialsuccess.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b329\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc/internal/envconfig
+#
+
+mkdir -p $WORK\b331\
+cat >$WORK\b331\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/tls=$WORK\b100\_pkg_.a
+packagefile crypto/x509=$WORK\b139\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal/global=$WORK\b071\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b331\\_pkg_.a" -trimpath "$WORK\\b331=>" -p go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc/internal/envconfig -lang=go1.22 -complete -buildid y1sRA1ntDFbNlXdY5MJE/y1sRA1ntDFbNlXdY5MJE -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b331\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracegrpc@v1.31.0\\internal\\envconfig\\envconfig.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b331\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc/internal/retry
+#
+
+mkdir -p $WORK\b332\
+cat >$WORK\b332\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile github.com/cenkalti/backoff/v4=$WORK\b173\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b332\\_pkg_.a" -trimpath "$WORK\\b332=>" -p go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc/internal/retry -lang=go1.22 -complete -buildid -qEze4FzFXfIlWjugA7Q/-qEze4FzFXfIlWjugA7Q -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b332\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracegrpc@v1.31.0\\internal\\retry\\retry.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b332\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc/internal/otlpconfig
+#
+
+mkdir -p $WORK\b330\
+cat >$WORK\b330\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/tls=$WORK\b100\_pkg_.a
+packagefile crypto/x509=$WORK\b139\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace=$WORK\b321\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc/internal/envconfig=$WORK\b331\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc/internal/retry=$WORK\b332\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal/global=$WORK\b071\_pkg_.a
+packagefile google.golang.org/grpc=$WORK\b193\_pkg_.a
+packagefile google.golang.org/grpc/backoff=$WORK\b201\_pkg_.a
+packagefile google.golang.org/grpc/credentials=$WORK\b208\_pkg_.a
+packagefile google.golang.org/grpc/credentials/insecure=$WORK\b254\_pkg_.a
+packagefile google.golang.org/grpc/encoding/gzip=$WORK\b299\_pkg_.a
+packagefile net/http=$WORK\b090\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile path=$WORK\b053\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b330\\_pkg_.a" -trimpath "$WORK\\b330=>" -p go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc/internal/otlpconfig -lang=go1.22 -complete -buildid YJwck-yUq9Js1YGi4y1I/YJwck-yUq9Js1YGi4y1I -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b330\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracegrpc@v1.31.0\\internal\\otlpconfig\\envconfig.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracegrpc@v1.31.0\\internal\\otlpconfig\\options.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracegrpc@v1.31.0\\internal\\otlpconfig\\optiontypes.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracegrpc@v1.31.0\\internal\\otlpconfig\\tls.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b330\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/proto/otlp/collector/trace/v1
+#
+
+mkdir -p $WORK\b333\
+cat >$WORK\b333\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile github.com/grpc-ecosystem/grpc-gateway/v2/runtime=$WORK\b305\_pkg_.a
+packagefile github.com/grpc-ecosystem/grpc-gateway/v2/utilities=$WORK\b307\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/trace/v1=$WORK\b327\_pkg_.a
+packagefile google.golang.org/grpc=$WORK\b193\_pkg_.a
+packagefile google.golang.org/grpc/codes=$WORK\b253\_pkg_.a
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+packagefile google.golang.org/grpc/metadata=$WORK\b230\_pkg_.a
+packagefile google.golang.org/grpc/status=$WORK\b266\_pkg_.a
+packagefile google.golang.org/protobuf/proto=$WORK\b212\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoimpl=$WORK\b246\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile net/http=$WORK\b090\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b333\\_pkg_.a" -trimpath "$WORK\\b333=>" -p go.opentelemetry.io/proto/otlp/collector/trace/v1 -lang=go1.17 -complete -buildid 6W5Sex9-qGwsuPLIwlTL/6W5Sex9-qGwsuPLIwlTL -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b333\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\proto\\otlp@v1.3.1\\collector\\trace\\v1\\trace_service.pb.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\proto\\otlp@v1.3.1\\collector\\trace\\v1\\trace_service.pb.gw.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\proto\\otlp@v1.3.1\\collector\\trace\\v1\\trace_service_grpc.pb.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b333\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc
+#
+
+mkdir -p $WORK\b328\
+cat >$WORK\b328\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel=$WORK\b058\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace=$WORK\b321\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc/internal=$WORK\b329\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc/internal/otlpconfig=$WORK\b330\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc/internal/retry=$WORK\b332\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/collector/trace/v1=$WORK\b333\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/trace/v1=$WORK\b327\_pkg_.a
+packagefile google.golang.org/genproto/googleapis/rpc/errdetails=$WORK\b314\_pkg_.a
+packagefile google.golang.org/grpc=$WORK\b193\_pkg_.a
+packagefile google.golang.org/grpc/codes=$WORK\b253\_pkg_.a
+packagefile google.golang.org/grpc/credentials=$WORK\b208\_pkg_.a
+packagefile google.golang.org/grpc/metadata=$WORK\b230\_pkg_.a
+packagefile google.golang.org/grpc/status=$WORK\b266\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b328\\_pkg_.a" -trimpath "$WORK\\b328=>" -p go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc -lang=go1.22 -complete -buildid vxEp3R8KtDm7zWlcaXKx/vxEp3R8KtDm7zWlcaXKx -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b328\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracegrpc@v1.31.0\\client.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracegrpc@v1.31.0\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracegrpc@v1.31.0\\exporter.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracegrpc@v1.31.0\\options.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b328\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp/internal
+#
+
+mkdir -p $WORK\b335\
+cat >$WORK\b335\importcfg << 'EOF' # internal
+# import config
+packagefile fmt=$WORK\b039\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b335\\_pkg_.a" -trimpath "$WORK\\b335=>" -p go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp/internal -lang=go1.22 -complete -buildid 5yV1YaWqdIJL7BHj1aQW/5yV1YaWqdIJL7BHj1aQW -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b335\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracehttp@v1.31.0\\internal\\gen.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracehttp@v1.31.0\\internal\\partialsuccess.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b335\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp/internal/envconfig
+#
+
+mkdir -p $WORK\b337\
+cat >$WORK\b337\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/tls=$WORK\b100\_pkg_.a
+packagefile crypto/x509=$WORK\b139\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal/global=$WORK\b071\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b337\\_pkg_.a" -trimpath "$WORK\\b337=>" -p go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp/internal/envconfig -lang=go1.22 -complete -buildid QmTsWuQnm3E7nzzqz2Ot/QmTsWuQnm3E7nzzqz2Ot -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b337\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracehttp@v1.31.0\\internal\\envconfig\\envconfig.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b337\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp/internal/retry
+#
+
+mkdir -p $WORK\b338\
+cat >$WORK\b338\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile github.com/cenkalti/backoff/v4=$WORK\b173\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b338\\_pkg_.a" -trimpath "$WORK\\b338=>" -p go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp/internal/retry -lang=go1.22 -complete -buildid lUlshsz5CkA2V1Ncdr_w/lUlshsz5CkA2V1Ncdr_w -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b338\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracehttp@v1.31.0\\internal\\retry\\retry.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b338\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp/internal/otlpconfig
+#
+
+mkdir -p $WORK\b336\
+cat >$WORK\b336\importcfg << 'EOF' # internal
+# import config
+packagefile crypto/tls=$WORK\b100\_pkg_.a
+packagefile crypto/x509=$WORK\b139\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace=$WORK\b321\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp/internal/envconfig=$WORK\b337\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp/internal/retry=$WORK\b338\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal/global=$WORK\b071\_pkg_.a
+packagefile google.golang.org/grpc=$WORK\b193\_pkg_.a
+packagefile google.golang.org/grpc/backoff=$WORK\b201\_pkg_.a
+packagefile google.golang.org/grpc/credentials=$WORK\b208\_pkg_.a
+packagefile google.golang.org/grpc/credentials/insecure=$WORK\b254\_pkg_.a
+packagefile google.golang.org/grpc/encoding/gzip=$WORK\b299\_pkg_.a
+packagefile net/http=$WORK\b090\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile path=$WORK\b053\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b336\\_pkg_.a" -trimpath "$WORK\\b336=>" -p go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp/internal/otlpconfig -lang=go1.22 -complete -buildid WqCSBgLV8DqSHDpTRqWA/WqCSBgLV8DqSHDpTRqWA -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b336\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracehttp@v1.31.0\\internal\\otlpconfig\\envconfig.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracehttp@v1.31.0\\internal\\otlpconfig\\options.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracehttp@v1.31.0\\internal\\otlpconfig\\optiontypes.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracehttp@v1.31.0\\internal\\otlpconfig\\tls.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b336\\_pkg_.a" # internal
+
+#
+# go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp
+#
+
+mkdir -p $WORK\b334\
+cat >$WORK\b334\importcfg << 'EOF' # internal
+# import config
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile compress/gzip=$WORK\b092\_pkg_.a
+packagefile context=$WORK\b002\_pkg_.a
+packagefile crypto/tls=$WORK\b100\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel=$WORK\b058\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace=$WORK\b321\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp/internal=$WORK\b335\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp/internal/otlpconfig=$WORK\b336\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp/internal/retry=$WORK\b338\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/collector/trace/v1=$WORK\b333\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/trace/v1=$WORK\b327\_pkg_.a
+packagefile google.golang.org/protobuf/proto=$WORK\b212\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile net/http=$WORK\b090\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b334\\_pkg_.a" -trimpath "$WORK\\b334=>" -p go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp -lang=go1.22 -complete -buildid RvxKQewHSC4TfJCa8rpx/RvxKQewHSC4TfJCa8rpx -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b334\\importcfg" -pack "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracehttp@v1.31.0\\client.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracehttp@v1.31.0\\doc.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracehttp@v1.31.0\\exporter.go" "C:\\Users\\ADMIN\\go\\pkg\\mod\\go.opentelemetry.io\\otel\\exporters\\otlp\\otlptrace\\otlptracehttp@v1.31.0\\options.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b334\\_pkg_.a" # internal
+
+#
+# otelbuild-demo/model
+#
+
+mkdir -p $WORK\b340\
+echo '# import config' > $WORK\b340\importcfg # internal
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b340\\_pkg_.a" -trimpath "$WORK\\b340=>" -p otelbuild-demo/model -lang=go1.23 -complete -buildid ad_DP-1npryM9r6WzXtz/ad_DP-1npryM9r6WzXtz -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b340\\importcfg" -pack "E:\\go-workspace\\src\\otelbuild-demo\\model\\user.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b340\\_pkg_.a" # internal
+
+#
+# otelbuild-demo/service
+#
+
+mkdir -p $WORK\b339\
+cat >$WORK\b339\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile otelbuild-demo/model=$WORK\b340\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b339\\_pkg_.a" -trimpath "$WORK\\b339=>" -p otelbuild-demo/service -lang=go1.23 -complete -buildid zuC5cWsAQrTkCu01NkcG/zuC5cWsAQrTkCu01NkcG -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b339\\importcfg" -pack "E:\\go-workspace\\src\\otelbuild-demo\\service\\user.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b339\\_pkg_.a" # internal
+
+#
+# command-line-arguments
+#
+
+mkdir -p $WORK\b001\
+cat >$WORK\b001\importcfg << 'EOF' # internal
+# import config
+packagefile context=$WORK\b002\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel=$WORK\b058\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc=$WORK\b168\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp=$WORK\b315\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace=$WORK\b321\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc=$WORK\b328\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp=$WORK\b334\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk=$WORK\b184\_pkg_.a
+packagefile net/http=$WORK\b090\_pkg_.a
+packagefile otelbuild-demo/service=$WORK\b339\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+EOF
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\compile.exe" -o "$WORK\\b001\\_pkg_.a" -trimpath "$WORK\\b001=>" -p main -lang=go1.23 -complete -buildid 1eoRgMTm1FJOufH7ZQVi/1eoRgMTm1FJOufH7ZQVi -goversion go1.23.3 -c=4 -nolocalimports -importcfg "$WORK\\b001\\importcfg" -pack "E:\\go-workspace\\src\\otelbuild-demo\\main.go"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b001\\_pkg_.a" # internal
+cat >$WORK\b001\importcfg.link << 'EOF' # internal
+packagefile command-line-arguments=$WORK\b001\_pkg_.a
+packagefile context=$WORK\b002\_pkg_.a
+packagefile fmt=$WORK\b039\_pkg_.a
+packagefile go.opentelemetry.io/otel=$WORK\b058\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc=$WORK\b168\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp=$WORK\b315\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace=$WORK\b321\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc=$WORK\b328\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp=$WORK\b334\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk=$WORK\b184\_pkg_.a
+packagefile net/http=$WORK\b090\_pkg_.a
+packagefile otelbuild-demo/service=$WORK\b339\_pkg_.a
+packagefile runtime=$WORK\b009\_pkg_.a
+packagefile errors=$WORK\b003\_pkg_.a
+packagefile internal/reflectlite=$WORK\b004\_pkg_.a
+packagefile sync=$WORK\b024\_pkg_.a
+packagefile sync/atomic=$WORK\b026\_pkg_.a
+packagefile time=$WORK\b027\_pkg_.a
+packagefile internal/fmtsort=$WORK\b040\_pkg_.a
+packagefile io=$WORK\b049\_pkg_.a
+packagefile math=$WORK\b044\_pkg_.a
+packagefile os=$WORK\b050\_pkg_.a
+packagefile reflect=$WORK\b042\_pkg_.a
+packagefile slices=$WORK\b048\_pkg_.a
+packagefile strconv=$WORK\b046\_pkg_.a
+packagefile unicode/utf8=$WORK\b038\_pkg_.a
+packagefile github.com/go-logr/logr=$WORK\b059\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal/global=$WORK\b071\_pkg_.a
+packagefile go.opentelemetry.io/otel/metric=$WORK\b081\_pkg_.a
+packagefile go.opentelemetry.io/otel/propagation=$WORK\b083\_pkg_.a
+packagefile go.opentelemetry.io/otel/trace=$WORK\b088\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal=$WORK\b169\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal/oconf=$WORK\b170\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal/retry=$WORK\b172\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal/transform=$WORK\b300\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric=$WORK\b174\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric/metricdata=$WORK\b180\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/collector/metrics/v1=$WORK\b304\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/metrics/v1=$WORK\b302\_pkg_.a
+packagefile google.golang.org/genproto/googleapis/rpc/errdetails=$WORK\b314\_pkg_.a
+packagefile google.golang.org/grpc=$WORK\b193\_pkg_.a
+packagefile google.golang.org/grpc/codes=$WORK\b253\_pkg_.a
+packagefile google.golang.org/grpc/credentials=$WORK\b208\_pkg_.a
+packagefile google.golang.org/grpc/metadata=$WORK\b230\_pkg_.a
+packagefile google.golang.org/grpc/status=$WORK\b266\_pkg_.a
+packagefile bytes=$WORK\b061\_pkg_.a
+packagefile compress/gzip=$WORK\b092\_pkg_.a
+packagefile crypto/tls=$WORK\b100\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal=$WORK\b316\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal/oconf=$WORK\b317\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal/retry=$WORK\b319\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal/transform=$WORK\b320\_pkg_.a
+packagefile google.golang.org/protobuf/proto=$WORK\b212\_pkg_.a
+packagefile net=$WORK\b143\_pkg_.a
+packagefile net/url=$WORK\b087\_pkg_.a
+packagefile strings=$WORK\b066\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/internal/tracetransform=$WORK\b322\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/trace=$WORK\b323\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/trace/v1=$WORK\b327\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc/internal=$WORK\b329\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc/internal/otlpconfig=$WORK\b330\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc/internal/retry=$WORK\b332\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/collector/trace/v1=$WORK\b333\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp/internal=$WORK\b335\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp/internal/otlpconfig=$WORK\b336\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp/internal/retry=$WORK\b338\_pkg_.a
+packagefile bufio=$WORK\b091\_pkg_.a
+packagefile container/list=$WORK\b072\_pkg_.a
+packagefile crypto/rand=$WORK\b096\_pkg_.a
+packagefile encoding/base64=$WORK\b064\_pkg_.a
+packagefile encoding/binary=$WORK\b065\_pkg_.a
+packagefile vendor/golang.org/x/net/http/httpguts=$WORK\b152\_pkg_.a
+packagefile vendor/golang.org/x/net/http/httpproxy=$WORK\b159\_pkg_.a
+packagefile vendor/golang.org/x/net/http2/hpack=$WORK\b160\_pkg_.a
+packagefile vendor/golang.org/x/net/idna=$WORK\b153\_pkg_.a
+packagefile internal/godebug=$WORK\b028\_pkg_.a
+packagefile io/fs=$WORK\b052\_pkg_.a
+packagefile log=$WORK\b067\_pkg_.a
+packagefile maps=$WORK\b161\_pkg_.a
+packagefile math/bits=$WORK\b045\_pkg_.a
+packagefile math/rand=$WORK\b099\_pkg_.a
+packagefile mime=$WORK\b162\_pkg_.a
+packagefile mime/multipart=$WORK\b163\_pkg_.a
+packagefile net/http/httptrace=$WORK\b165\_pkg_.a
+packagefile net/http/internal=$WORK\b166\_pkg_.a
+packagefile net/http/internal/ascii=$WORK\b167\_pkg_.a
+packagefile net/textproto=$WORK\b158\_pkg_.a
+packagefile path=$WORK\b053\_pkg_.a
+packagefile path/filepath=$WORK\b075\_pkg_.a
+packagefile sort=$WORK\b079\_pkg_.a
+packagefile unicode=$WORK\b047\_pkg_.a
+packagefile otelbuild-demo/model=$WORK\b340\_pkg_.a
+packagefile internal/abi=$WORK\b005\_pkg_.a
+packagefile internal/bytealg=$WORK\b010\_pkg_.a
+packagefile internal/chacha8rand=$WORK\b012\_pkg_.a
+packagefile internal/coverage/rtcov=$WORK\b014\_pkg_.a
+packagefile internal/cpu=$WORK\b011\_pkg_.a
+packagefile internal/goarch=$WORK\b006\_pkg_.a
+packagefile internal/godebugs=$WORK\b015\_pkg_.a
+packagefile internal/goexperiment=$WORK\b016\_pkg_.a
+packagefile internal/goos=$WORK\b017\_pkg_.a
+packagefile internal/profilerecord=$WORK\b018\_pkg_.a
+packagefile internal/runtime/atomic=$WORK\b019\_pkg_.a
+packagefile internal/runtime/exithook=$WORK\b020\_pkg_.a
+packagefile internal/stringslite=$WORK\b021\_pkg_.a
+packagefile runtime/internal/math=$WORK\b022\_pkg_.a
+packagefile runtime/internal/sys=$WORK\b023\_pkg_.a
+packagefile internal/unsafeheader=$WORK\b008\_pkg_.a
+packagefile internal/race=$WORK\b025\_pkg_.a
+packagefile internal/syscall/windows/registry=$WORK\b030\_pkg_.a
+packagefile syscall=$WORK\b032\_pkg_.a
+packagefile cmp=$WORK\b041\_pkg_.a
+packagefile internal/filepathlite=$WORK\b051\_pkg_.a
+packagefile internal/itoa=$WORK\b034\_pkg_.a
+packagefile internal/poll=$WORK\b054\_pkg_.a
+packagefile internal/syscall/execenv=$WORK\b056\_pkg_.a
+packagefile internal/syscall/windows=$WORK\b055\_pkg_.a
+packagefile internal/testlog=$WORK\b057\_pkg_.a
+packagefile iter=$WORK\b043\_pkg_.a
+packagefile log/slog=$WORK\b060\_pkg_.a
+packagefile github.com/go-logr/stdr=$WORK\b073\_pkg_.a
+packagefile go.opentelemetry.io/otel/attribute=$WORK\b076\_pkg_.a
+packagefile go.opentelemetry.io/otel/codes=$WORK\b080\_pkg_.a
+packagefile go.opentelemetry.io/otel/metric/embedded=$WORK\b082\_pkg_.a
+packagefile go.opentelemetry.io/otel/trace/embedded=$WORK\b089\_pkg_.a
+packagefile encoding/hex=$WORK\b084\_pkg_.a
+packagefile go.opentelemetry.io/otel/baggage=$WORK\b085\_pkg_.a
+packagefile encoding/json=$WORK\b063\_pkg_.a
+packagefile crypto/x509=$WORK\b139\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/internal/envconfig=$WORK\b171\_pkg_.a
+packagefile google.golang.org/grpc/backoff=$WORK\b201\_pkg_.a
+packagefile google.golang.org/grpc/credentials/insecure=$WORK\b254\_pkg_.a
+packagefile google.golang.org/grpc/encoding/gzip=$WORK\b299\_pkg_.a
+packagefile github.com/cenkalti/backoff/v4=$WORK\b173\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/common/v1=$WORK\b301\_pkg_.a
+packagefile go.opentelemetry.io/proto/otlp/resource/v1=$WORK\b303\_pkg_.a
+packagefile go.opentelemetry.io/otel/metric/noop=$WORK\b175\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/instrumentation=$WORK\b176\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric/exemplar=$WORK\b177\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric/internal=$WORK\b178\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric/internal/aggregate=$WORK\b179\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/metric/internal/x=$WORK\b192\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/resource=$WORK\b181\_pkg_.a
+packagefile regexp=$WORK\b190\_pkg_.a
+packagefile github.com/grpc-ecosystem/grpc-gateway/v2/runtime=$WORK\b305\_pkg_.a
+packagefile github.com/grpc-ecosystem/grpc-gateway/v2/utilities=$WORK\b307\_pkg_.a
+packagefile google.golang.org/grpc/grpclog=$WORK\b206\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoreflect=$WORK\b218\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoimpl=$WORK\b246\_pkg_.a
+packagefile google.golang.org/protobuf/types/known/durationpb=$WORK\b264\_pkg_.a
+packagefile golang.org/x/net/trace=$WORK\b194\_pkg_.a
+packagefile google.golang.org/grpc/balancer=$WORK\b202\_pkg_.a
+packagefile google.golang.org/grpc/balancer/base=$WORK\b232\_pkg_.a
+packagefile google.golang.org/grpc/balancer/pickfirst=$WORK\b233\_pkg_.a
+packagefile google.golang.org/grpc/balancer/roundrobin=$WORK\b252\_pkg_.a
+packagefile google.golang.org/grpc/channelz=$WORK\b203\_pkg_.a
+packagefile google.golang.org/grpc/connectivity=$WORK\b205\_pkg_.a
+packagefile google.golang.org/grpc/encoding=$WORK\b255\_pkg_.a
+packagefile google.golang.org/grpc/encoding/proto=$WORK\b258\_pkg_.a
+packagefile google.golang.org/grpc/internal=$WORK\b227\_pkg_.a
+packagefile google.golang.org/grpc/internal/backoff=$WORK\b259\_pkg_.a
+packagefile google.golang.org/grpc/internal/balancer/gracefulswitch=$WORK\b260\_pkg_.a
+packagefile google.golang.org/grpc/internal/balancerload=$WORK\b261\_pkg_.a
+packagefile google.golang.org/grpc/internal/binarylog=$WORK\b262\_pkg_.a
+packagefile google.golang.org/grpc/internal/channelz=$WORK\b204\_pkg_.a
+packagefile google.golang.org/grpc/internal/grpcsync=$WORK\b270\_pkg_.a
+packagefile google.golang.org/grpc/internal/grpcutil=$WORK\b256\_pkg_.a
+packagefile google.golang.org/grpc/internal/idle=$WORK\b272\_pkg_.a
+packagefile google.golang.org/grpc/internal/metadata=$WORK\b273\_pkg_.a
+packagefile google.golang.org/grpc/internal/pretty=$WORK\b235\_pkg_.a
+packagefile google.golang.org/grpc/internal/resolver=$WORK\b274\_pkg_.a
+packagefile google.golang.org/grpc/internal/resolver/passthrough=$WORK\b276\_pkg_.a
+packagefile google.golang.org/grpc/internal/resolver/unix=$WORK\b277\_pkg_.a
+packagefile google.golang.org/grpc/internal/serviceconfig=$WORK\b275\_pkg_.a
+packagefile google.golang.org/grpc/internal/stats=$WORK\b279\_pkg_.a
+packagefile google.golang.org/grpc/internal/status=$WORK\b269\_pkg_.a
+packagefile google.golang.org/grpc/internal/transport=$WORK\b281\_pkg_.a
+packagefile google.golang.org/grpc/keepalive=$WORK\b291\_pkg_.a
+packagefile google.golang.org/grpc/mem=$WORK\b257\_pkg_.a
+packagefile google.golang.org/grpc/peer=$WORK\b292\_pkg_.a
+packagefile google.golang.org/grpc/resolver=$WORK\b231\_pkg_.a
+packagefile google.golang.org/grpc/resolver/dns=$WORK\b295\_pkg_.a
+packagefile google.golang.org/grpc/serviceconfig=$WORK\b228\_pkg_.a
+packagefile google.golang.org/grpc/stats=$WORK\b280\_pkg_.a
+packagefile google.golang.org/grpc/tap=$WORK\b293\_pkg_.a
+packagefile google.golang.org/grpc/attributes=$WORK\b209\_pkg_.a
+packagefile google.golang.org/grpc/internal/credentials=$WORK\b210\_pkg_.a
+packagefile google.golang.org/grpc/internal/envconfig=$WORK\b211\_pkg_.a
+packagefile google.golang.org/genproto/googleapis/rpc/status=$WORK\b267\_pkg_.a
+packagefile compress/flate=$WORK\b093\_pkg_.a
+packagefile hash/crc32=$WORK\b094\_pkg_.a
+packagefile crypto=$WORK\b101\_pkg_.a
+packagefile crypto/aes=$WORK\b102\_pkg_.a
+packagefile crypto/cipher=$WORK\b103\_pkg_.a
+packagefile crypto/des=$WORK\b108\_pkg_.a
+packagefile crypto/ecdh=$WORK\b109\_pkg_.a
+packagefile crypto/ecdsa=$WORK\b114\_pkg_.a
+packagefile crypto/ed25519=$WORK\b122\_pkg_.a
+packagefile crypto/elliptic=$WORK\b115\_pkg_.a
+packagefile crypto/hmac=$WORK\b124\_pkg_.a
+packagefile crypto/internal/boring=$WORK\b106\_pkg_.a
+packagefile crypto/internal/hpke=$WORK\b125\_pkg_.a
+packagefile crypto/internal/mlkem768=$WORK\b132\_pkg_.a
+packagefile crypto/md5=$WORK\b134\_pkg_.a
+packagefile crypto/rc4=$WORK\b135\_pkg_.a
+packagefile crypto/rsa=$WORK\b136\_pkg_.a
+packagefile crypto/sha1=$WORK\b137\_pkg_.a
+packagefile crypto/sha256=$WORK\b138\_pkg_.a
+packagefile crypto/sha512=$WORK\b118\_pkg_.a
+packagefile crypto/subtle=$WORK\b105\_pkg_.a
+packagefile encoding/pem=$WORK\b142\_pkg_.a
+packagefile vendor/golang.org/x/crypto/chacha20poly1305=$WORK\b126\_pkg_.a
+packagefile vendor/golang.org/x/crypto/cryptobyte=$WORK\b119\_pkg_.a
+packagefile vendor/golang.org/x/crypto/hkdf=$WORK\b131\_pkg_.a
+packagefile vendor/golang.org/x/crypto/sha3=$WORK\b133\_pkg_.a
+packagefile hash=$WORK\b095\_pkg_.a
+packagefile internal/byteorder=$WORK\b013\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/internal/envconfig=$WORK\b318\_pkg_.a
+packagefile google.golang.org/protobuf/encoding/protowire=$WORK\b213\_pkg_.a
+packagefile google.golang.org/protobuf/internal/encoding/messageset=$WORK\b217\_pkg_.a
+packagefile google.golang.org/protobuf/internal/errors=$WORK\b214\_pkg_.a
+packagefile google.golang.org/protobuf/internal/flags=$WORK\b220\_pkg_.a
+packagefile google.golang.org/protobuf/internal/genid=$WORK\b221\_pkg_.a
+packagefile google.golang.org/protobuf/internal/order=$WORK\b222\_pkg_.a
+packagefile google.golang.org/protobuf/internal/pragma=$WORK\b219\_pkg_.a
+packagefile google.golang.org/protobuf/internal/strs=$WORK\b223\_pkg_.a
+packagefile google.golang.org/protobuf/reflect/protoregistry=$WORK\b225\_pkg_.a
+packagefile google.golang.org/protobuf/runtime/protoiface=$WORK\b226\_pkg_.a
+packagefile vendor/golang.org/x/net/dns/dnsmessage=$WORK\b144\_pkg_.a
+packagefile internal/nettrace=$WORK\b145\_pkg_.a
+packagefile internal/singleflight=$WORK\b146\_pkg_.a
+packagefile net/netip=$WORK\b147\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/internal/env=$WORK\b324\_pkg_.a
+packagefile go.opentelemetry.io/otel/semconv/v1.26.0=$WORK\b186\_pkg_.a
+packagefile go.opentelemetry.io/otel/trace/noop=$WORK\b325\_pkg_.a
+packagefile runtime/trace=$WORK\b326\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc/internal/envconfig=$WORK\b331\_pkg_.a
+packagefile go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp/internal/envconfig=$WORK\b337\_pkg_.a
+packagefile crypto/internal/randutil=$WORK\b097\_pkg_.a
+packagefile math/big=$WORK\b098\_pkg_.a
+packagefile vendor/golang.org/x/text/secure/bidirule=$WORK\b154\_pkg_.a
+packagefile vendor/golang.org/x/text/unicode/bidi=$WORK\b156\_pkg_.a
+packagefile vendor/golang.org/x/text/unicode/norm=$WORK\b157\_pkg_.a
+packagefile internal/bisect=$WORK\b029\_pkg_.a
+packagefile internal/oserror=$WORK\b036\_pkg_.a
+packagefile log/internal=$WORK\b068\_pkg_.a
+packagefile mime/quotedprintable=$WORK\b164\_pkg_.a
+packagefile internal/syscall/windows/sysdll=$WORK\b031\_pkg_.a
+packagefile unicode/utf16=$WORK\b037\_pkg_.a
+packagefile internal/asan=$WORK\b033\_pkg_.a
+packagefile internal/msan=$WORK\b035\_pkg_.a
+packagefile encoding=$WORK\b062\_pkg_.a
+packagefile log/slog/internal=$WORK\b069\_pkg_.a
+packagefile log/slog/internal/buffer=$WORK\b070\_pkg_.a
+packagefile github.com/go-logr/logr/funcr=$WORK\b074\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal=$WORK\b077\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal/attribute=$WORK\b078\_pkg_.a
+packagefile go.opentelemetry.io/otel/internal/baggage=$WORK\b086\_pkg_.a
+packagefile crypto/dsa=$WORK\b140\_pkg_.a
+packagefile crypto/x509/pkix=$WORK\b141\_pkg_.a
+packagefile encoding/asn1=$WORK\b120\_pkg_.a
+packagefile vendor/golang.org/x/crypto/cryptobyte/asn1=$WORK\b121\_pkg_.a
+packagefile github.com/google/uuid=$WORK\b182\_pkg_.a
+packagefile go.opentelemetry.io/otel/sdk/internal/x=$WORK\b185\_pkg_.a
+packagefile golang.org/x/sys/windows/registry=$WORK\b187\_pkg_.a
+packagefile os/user=$WORK\b189\_pkg_.a
+packagefile regexp/syntax=$WORK\b191\_pkg_.a
+packagefile github.com/grpc-ecosystem/grpc-gateway/v2/internal/httprule=$WORK\b306\_pkg_.a
+packagefile google.golang.org/genproto/googleapis/api/httpbody=$WORK\b309\_pkg_.a
+packagefile google.golang.org/grpc/health/grpc_health_v1=$WORK\b310\_pkg_.a
+packagefile google.golang.org/protobuf/encoding/protojson=$WORK\b236\_pkg_.a
+packagefile google.golang.org/protobuf/types/known/fieldmaskpb=$WORK\b311\_pkg_.a
+packagefile google.golang.org/protobuf/types/known/structpb=$WORK\b312\_pkg_.a
+packagefile google.golang.org/protobuf/types/known/timestamppb=$WORK\b265\_pkg_.a
+packagefile google.golang.org/protobuf/types/known/wrapperspb=$WORK\b313\_pkg_.a
+packagefile flag=$WORK\b308\_pkg_.a
+packagefile google.golang.org/grpc/grpclog/internal=$WORK\b207\_pkg_.a
+packagefile google.golang.org/protobuf/internal/filedesc=$WORK\b238\_pkg_.a
+packagefile google.golang.org/protobuf/internal/filetype=$WORK\b247\_pkg_.a
+packagefile google.golang.org/protobuf/internal/impl=$WORK\b248\_pkg_.a
+packagefile google.golang.org/protobuf/internal/version=$WORK\b251\_pkg_.a
+packagefile golang.org/x/net/internal/timeseries=$WORK\b195\_pkg_.a
+packagefile html/template=$WORK\b196\_pkg_.a
+packagefile text/tabwriter=$WORK\b200\_pkg_.a
+packagefile google.golang.org/grpc/experimental/stats=$WORK\b229\_pkg_.a
+packagefile google.golang.org/grpc/internal/grpclog=$WORK\b234\_pkg_.a
+packagefile google.golang.org/protobuf/protoadapt=$WORK\b245\_pkg_.a
+packagefile golang.org/x/sys/windows=$WORK\b188\_pkg_.a
+packagefile google.golang.org/grpc/binarylog/grpc_binarylog_v1=$WORK\b263\_pkg_.a
+packagefile google.golang.org/grpc/internal/buffer=$WORK\b271\_pkg_.a
+packagefile google.golang.org/grpc/internal/transport/networktype=$WORK\b278\_pkg_.a
+packagefile google.golang.org/protobuf/types/known/anypb=$WORK\b268\_pkg_.a
+packagefile golang.org/x/net/http2=$WORK\b282\_pkg_.a
+packagefile golang.org/x/net/http2/hpack=$WORK\b289\_pkg_.a
+packagefile google.golang.org/grpc/internal/syscall=$WORK\b290\_pkg_.a
+packagefile net/http/httputil=$WORK\b294\_pkg_.a
+packagefile google.golang.org/grpc/internal/resolver/dns=$WORK\b296\_pkg_.a
+packagefile crypto/internal/alias=$WORK\b104\_pkg_.a
+packagefile crypto/internal/edwards25519/field=$WORK\b110\_pkg_.a
+packagefile crypto/internal/nistec=$WORK\b111\_pkg_.a
+packagefile crypto/internal/bigmod=$WORK\b116\_pkg_.a
+packagefile crypto/internal/boring/bbig=$WORK\b117\_pkg_.a
+packagefile crypto/internal/edwards25519=$WORK\b123\_pkg_.a
+packagefile crypto/internal/boring/sig=$WORK\b107\_pkg_.a
+packagefile vendor/golang.org/x/crypto/chacha20=$WORK\b127\_pkg_.a
+packagefile vendor/golang.org/x/crypto/internal/alias=$WORK\b128\_pkg_.a
+packagefile vendor/golang.org/x/crypto/internal/poly1305=$WORK\b129\_pkg_.a
+packagefile vendor/golang.org/x/sys/cpu=$WORK\b130\_pkg_.a
+packagefile google.golang.org/protobuf/internal/detrand=$WORK\b215\_pkg_.a
+packagefile go/token=$WORK\b224\_pkg_.a
+packagefile unique=$WORK\b148\_pkg_.a
+packagefile vendor/golang.org/x/text/transform=$WORK\b155\_pkg_.a
+packagefile database/sql/driver=$WORK\b183\_pkg_.a
+packagefile google.golang.org/protobuf/internal/encoding/json=$WORK\b237\_pkg_.a
+packagefile google.golang.org/protobuf/internal/set=$WORK\b244\_pkg_.a
+packagefile google.golang.org/protobuf/internal/descfmt=$WORK\b239\_pkg_.a
+packagefile google.golang.org/protobuf/internal/descopts=$WORK\b240\_pkg_.a
+packagefile google.golang.org/protobuf/internal/editiondefaults=$WORK\b241\_pkg_.a
+packagefile google.golang.org/protobuf/internal/encoding/defval=$WORK\b242\_pkg_.a
+packagefile google.golang.org/protobuf/encoding/prototext=$WORK\b249\_pkg_.a
+packagefile google.golang.org/protobuf/internal/encoding/tag=$WORK\b250\_pkg_.a
+packagefile html=$WORK\b197\_pkg_.a
+packagefile text/template=$WORK\b198\_pkg_.a
+packagefile text/template/parse=$WORK\b199\_pkg_.a
+packagefile golang.org/x/net/http/httpguts=$WORK\b283\_pkg_.a
+packagefile golang.org/x/net/idna=$WORK\b284\_pkg_.a
+packagefile google.golang.org/grpc/balancer/grpclb/state=$WORK\b297\_pkg_.a
+packagefile google.golang.org/grpc/internal/resolver/dns/internal=$WORK\b298\_pkg_.a
+packagefile crypto/internal/nistec/fiat=$WORK\b112\_pkg_.a
+packagefile embed=$WORK\b113\_pkg_.a
+packagefile hash/fnv=$WORK\b216\_pkg_.a
+packagefile internal/concurrent=$WORK\b149\_pkg_.a
+packagefile internal/weak=$WORK\b151\_pkg_.a
+packagefile google.golang.org/protobuf/internal/encoding/text=$WORK\b243\_pkg_.a
+packagefile golang.org/x/text/secure/bidirule=$WORK\b285\_pkg_.a
+packagefile golang.org/x/text/unicode/bidi=$WORK\b287\_pkg_.a
+packagefile golang.org/x/text/unicode/norm=$WORK\b288\_pkg_.a
+packagefile math/rand/v2=$WORK\b150\_pkg_.a
+packagefile golang.org/x/text/transform=$WORK\b286\_pkg_.a
+modinfo "0w\xaf\f\x92t\b\x02A\xe1\xc1\a\xe6\xd6\x18\xe6path\tcommand-line-arguments\ndep\tgithub.com/cenkalti/backoff/v4\tv4.3.0\th1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ndep\tgithub.com/go-logr/logr\tv1.4.2\th1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ndep\tgithub.com/go-logr/stdr\tv1.2.2\th1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ndep\tgithub.com/google/uuid\tv1.6.0\th1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ndep\tgithub.com/grpc-ecosystem/grpc-gateway/v2\tv2.23.0\th1:ad0vkEBuk23VJzZR9nkLVG0YAoN9coASF1GusYX6AlU=\ndep\tgo.opentelemetry.io/otel\tv1.32.0\th1:WnBN+Xjcteh0zdk01SVqV55d/m62NJLJdIyb4y/WO5U=\ndep\tgo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc\tv1.31.0\th1:FZ6ei8GFW7kyPYdxJaV2rgI6M+4tvZzhYsQ2wgyVC08=\ndep\tgo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp\tv1.31.0\th1:ZsXq73BERAiNuuFXYqP4MR5hBrjXfMGSO+Cx7qoOZiM=\ndep\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace\tv1.31.0\th1:K0XaT3DwHAcV4nKLzcQvwAgSyisUghWoY20I7huthMk=\ndep\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc\tv1.31.0\th1:FFeLy03iVTXP6ffeN2iXrxfGsZGCjVx0/4KlizjyBwU=\ndep\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp\tv1.31.0\th1:lUsI2TYsQw2r1IASwoROaCnjdj2cvC2+Jbxvk6nHnWU=\ndep\tgo.opentelemetry.io/otel/metric\tv1.32.0\th1:xV2umtmNcThh2/a/aCP+h64Xx5wsj8qqnkYZktzNa0M=\ndep\tgo.opentelemetry.io/otel/sdk\tv1.32.0\th1:RNxepc9vK59A8XsgZQouW8ue8Gkb4jpWtJm9ge5lEG4=\ndep\tgo.opentelemetry.io/otel/sdk/metric\tv1.32.0\th1:rZvFnvmvawYb0alrYkjraqJq0Z4ZUJAiyYCU9snn1CU=\ndep\tgo.opentelemetry.io/otel/trace\tv1.32.0\th1:WIC9mYrXf8TmY/EXuULKc8hR17vE+Hjv2cssQDe03fM=\ndep\tgo.opentelemetry.io/proto/otlp\tv1.3.1\th1:TrMUixzpM0yuc/znrFTP9MMRh8trP93mkCiDVeXrui0=\ndep\tgolang.org/x/net\tv0.30.0\th1:AcW1SDZMkb8IpzCdQUaIq2sP4sZ4zw+55h6ynffypl4=\ndep\tgolang.org/x/sys\tv0.27.0\th1:wBqf8DvsY9Y/2P8gAfPDEYNuS30J4lPHJxXSb/nJZ+s=\ndep\tgolang.org/x/text\tv0.20.0\th1:gK/Kv2otX8gz+wn7Rmb3vT96ZwuoxnQlY+HlJVj7Qug=\ndep\tgoogle.golang.org/genproto/googleapis/api\tv0.0.0-20241104194629-dd2ea8efbc28\th1:M0KvPgPmDZHPlbRbaNU1APr28TvwvvdUPlSv7PUvy8g=\ndep\tgoogle.golang.org/genproto/googleapis/rpc\tv0.0.0-20241104194629-dd2ea8efbc28\th1:XVhgTWWV3kGQlwJHR3upFWZeTsei6Oks1apkZSeonIE=\ndep\tgoogle.golang.org/grpc\tv1.67.1\th1:zWnc1Vrcno+lHZCOofnIMvycFcc0QRGIzm9dhnDX68E=\ndep\tgoogle.golang.org/protobuf\tv1.35.1\th1:m3LfL6/Ca+fqnjnlqQXNpFPABW1UD7mjh8KO2mKFytA=\ndep\totelbuild-demo\t(devel)\t\nbuild\t-buildmode=exe\nbuild\t-compiler=gc\nbuild\tCGO_ENABLED=1\nbuild\tCGO_CFLAGS=\nbuild\tCGO_CPPFLAGS=\nbuild\tCGO_CXXFLAGS=\nbuild\tCGO_LDFLAGS=\nbuild\tGOARCH=amd64\nbuild\tGOOS=windows\nbuild\tGOAMD64=v1\n\xf92C1\x86\x18 r\x00\x82B\x10A\x16\xd8\xf2"
+EOF
+mkdir -p $WORK\b001\exe\
+cd .
+GOROOT='E:/go1.23.3' "E:\\go1.23.3\\pkg\\tool\\windows_amd64\\link.exe" -o "$WORK\\b001\\exe\\a.out.exe" -importcfg "$WORK\\b001\\importcfg.link" -buildmode=pie -buildid=Lol7nsw7jpABNPhvMLLg/1eoRgMTm1FJOufH7ZQVi/1eoRgMTm1FJOufH7ZQVi/Lol7nsw7jpABNPhvMLLg -extld=gcc "$WORK\\b001\\_pkg_.a"
+"E:\\go1.23.3\\pkg\\tool\\windows_amd64\\buildid.exe" -w "$WORK\\b001\\exe\\a.out.exe" # internal
+mv $WORK\b001\exe\a.out.exe main.exe
+rm -rf $WORK\b001\
Index: .otel-build/preprocess/rule_bundle.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.otel-build/preprocess/rule_bundle.json b/.otel-build/preprocess/rule_bundle.json
new file mode 100644
--- /dev/null	(date 1732095811435)
+++ b/.otel-build/preprocess/rule_bundle.json	(date 1732095811435)
@@ -0,0 +1,1 @@
+[{"PackageName":"model","ImportPath":"otelbuild-demo/model","FileRules":[],"File2FuncRules":{},"File2StructRules":{"E:\\go-workspace\\src\\otelbuild-demo\\model\\user.go":{"UserModel":[{"ImportPath":"otelbuild-demo/model","StructType":"UserModel","FieldName":"Age","FieldType":"int"}]}}},{"PackageName":"service","ImportPath":"otelbuild-demo/service","FileRules":[],"File2FuncRules":{"E:\\go-workspace\\src\\otelbuild-demo\\service\\user.go":{"CreateUser,":[{"Path":"hook/service","ImportPath":"otelbuild-demo/service","Function":"CreateUser","OnEnter":"createUserEnterHook","OnExit":"createUserExitHook"}]}},"File2StructRules":{}},{"PackageName":"http","ImportPath":"net/http","FileRules":[],"File2FuncRules":{"E:\\go1.23.3\\src\\net\\http\\roundtrip.go":{"RoundTrip,*Transport":[{"Path":"hook/http","ImportPath":"net/http","Function":"RoundTrip","ReceiverType":"*Transport","OnEnter":"httpClientEnterHook","OnExit":"httpClientExitHook"}]}},"File2StructRules":{}}]
\ No newline at end of file
Index: .otel-build/instrument/service/user.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.otel-build/instrument/service/user.go b/.otel-build/instrument/service/user.go
new file mode 100644
--- /dev/null	(date 1732095847994)
+++ b/.otel-build/instrument/service/user.go	(date 1732095847994)
@@ -0,0 +1,143 @@
+package service
+
+import (
+	"context"
+	"otelbuild-demo/model"
+)
+
+type User struct {
+	Id       int64
+	Nickname string
+}
+
+func CreateUser(ctx context.Context, id int64, nickname string) (u *model.UserModel, err error) {
+	if  callContext30042, _ := OtelOnEnterTrampoline_CreateUser30042(&ctx, &id, &nickname); false { /* NO_NEWWLINE_PLACEHOLDER */ ;	} else {  		defer OtelOnExitTrampoline_CreateUser30042(callContext30042, &u, &err) ;	}  
+	user := &model.UserModel{
+		Id:       id,
+		Nickname: nickname,
+	}
+	return user, nil
+}
+
+// Seeing is not always believing. The following template is a bit tricky, see
+// trampoline.go for more details
+// Struct Template
+type CallContextImpl30042 struct {
+	Params     []interface{}
+	ReturnVals []interface{}
+	SkipCall   bool
+	Data       interface{}
+}
+
+func (c *CallContextImpl30042) SetSkipCall(skip bool)    { c.SkipCall = skip }
+func (c *CallContextImpl30042) IsSkipCall() bool         { return c.SkipCall }
+func (c *CallContextImpl30042) SetData(data interface{}) { c.Data = data }
+func (c *CallContextImpl30042) GetData() interface{}     { return c.Data }
+func (c *CallContextImpl30042) GetKeyData(key string) interface{} {
+	if c.Data == nil {
+		return nil
+	}
+	return c.Data.(map[string]interface{})[key]
+}
+func (c *CallContextImpl30042) SetKeyData(key string, val interface{}) {
+	if c.Data == nil {
+		c.Data = make(map[string]interface{})
+	}
+	c.Data.(map[string]interface{})[key] = val
+}
+func (c *CallContextImpl30042) HasKeyData(key string) bool {
+	if c.Data == nil {
+		return false
+	}
+	_, ok := c.Data.(map[string]interface{})[key]
+	return ok
+}
+func (c *CallContextImpl30042) GetParam(idx int) interface{} {
+	switch idx {
+	case 0:
+		return *(c.Params[0].(*context.Context))
+	case 1:
+		return *(c.Params[1].(*int64))
+	case 2:
+		return *(c.Params[2].(*string))
+	}
+	return nil
+}
+func (c *CallContextImpl30042) SetParam(idx int, val interface{}) {
+	if val == nil {
+		c.Params[idx] = nil
+		return
+	}
+	switch idx {
+	case 0:
+		*(c.Params[0].(*context.Context)) = val.(context.Context)
+	case 1:
+		*(c.Params[1].(*int64)) = val.(int64)
+	case 2:
+		*(c.Params[2].(*string)) = val.(string)
+	}
+}
+func (c *CallContextImpl30042) GetReturnVal(idx int) interface{} {
+	switch idx {
+	case 0:
+		return *(c.ReturnVals[0].(**model.UserModel))
+	case 1:
+		return *(c.ReturnVals[1].(*error))
+	}
+	return nil
+}
+func (c *CallContextImpl30042) SetReturnVal(idx int, val interface{}) {
+	if val == nil {
+		c.ReturnVals[idx] = nil
+		return
+	}
+	switch idx {
+	case 0:
+		*(c.ReturnVals[0].(**model.UserModel)) = val.(*model.UserModel)
+	case 1:
+		*(c.ReturnVals[1].(*error)) = val.(error)
+	}
+}
+
+// Trampoline Template
+func OtelOnEnterTrampoline_CreateUser30042(ctx *context.Context, id *int64, nickname *string) (CallContext, bool) {
+	defer func() {
+		if err := recover(); err != nil {
+			println("failed to exec onEnter hook", "createUserEnterHook")
+			if e, ok := err.(error); ok {
+				println(e.Error())
+			}
+			fetchStack, printStack := OtelGetStackImpl, OtelPrintStackImpl
+			if fetchStack != nil && printStack != nil {
+				printStack(fetchStack())
+			}
+		}
+	}()
+	callContext := &CallContextImpl30042{}
+	callContext.Params = []interface{}{ctx, id, nickname}
+	if CreateUserEnterHookImpl != nil {
+		CreateUserEnterHookImpl(callContext, *ctx, *id, *nickname)
+	}
+	return callContext, callContext.SkipCall
+}
+func OtelOnExitTrampoline_CreateUser30042(callContext CallContext, u **model.UserModel, err *error) {
+	defer func() {
+		if err := recover(); err != nil {
+			println("failed to exec onExit hook", "createUserExitHook")
+			if e, ok := err.(error); ok {
+				println(e.Error())
+			}
+			fetchStack, printStack := OtelGetStackImpl, OtelPrintStackImpl
+			if fetchStack != nil && printStack != nil {
+				printStack(fetchStack())
+			}
+		}
+	}()
+	callContext.(*CallContextImpl30042).ReturnVals = []interface{}{u, err}
+	if CreateUserExitHookImpl != nil {
+		CreateUserExitHookImpl(callContext, *u, *err)
+	}
+}
+
+var CreateUserEnterHookImpl func(callContext CallContext, ctx context.Context, id int64, nickname string)
+var CreateUserExitHookImpl func(callContext CallContext, u *model.UserModel, err error)
Index: .otel-build/preprocess/backups/go.mod.bk
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.otel-build/preprocess/backups/go.mod.bk b/.otel-build/preprocess/backups/go.mod.bk
new file mode 100644
--- /dev/null	(date 1732095805309)
+++ b/.otel-build/preprocess/backups/go.mod.bk	(date 1732095805309)
@@ -0,0 +1,33 @@
+module otelbuild-demo
+
+go 1.23.3
+
+require (
+	github.com/antgan-0226/opentelemetry-go-auto-instrumentation v0.5.1
+	go.opentelemetry.io/otel v1.32.0
+	go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.31.0
+	go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.31.0
+	go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.31.0
+	go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.31.0
+	go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.31.0
+)
+
+require (
+	github.com/cenkalti/backoff/v4 v4.3.0 // indirect
+	github.com/go-logr/logr v1.4.2 // indirect
+	github.com/go-logr/stdr v1.2.2 // indirect
+	github.com/google/uuid v1.6.0 // indirect
+	github.com/grpc-ecosystem/grpc-gateway/v2 v2.23.0 // indirect
+	go.opentelemetry.io/otel/metric v1.32.0 // indirect
+	go.opentelemetry.io/otel/sdk v1.32.0
+	go.opentelemetry.io/otel/sdk/metric v1.32.0 // indirect
+	go.opentelemetry.io/otel/trace v1.32.0 // indirect
+	go.opentelemetry.io/proto/otlp v1.3.1 // indirect
+	golang.org/x/net v0.30.0 // indirect
+	golang.org/x/sys v0.27.0 // indirect
+	golang.org/x/text v0.20.0 // indirect
+	google.golang.org/genproto/googleapis/api v0.0.0-20241104194629-dd2ea8efbc28 // indirect
+	google.golang.org/genproto/googleapis/rpc v0.0.0-20241104194629-dd2ea8efbc28 // indirect
+	google.golang.org/grpc v1.67.1 // indirect
+	google.golang.org/protobuf v1.35.1 // indirect
+)
Index: .otel-build/preprocess/build_conf.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.otel-build/preprocess/build_conf.json b/.otel-build/preprocess/build_conf.json
new file mode 100644
--- /dev/null	(date 1732095804761)
+++ b/.otel-build/preprocess/build_conf.json	(date 1732095804761)
@@ -0,0 +1,1 @@
+{"RuleJsonFiles":"E:\\go-workspace\\src\\otelbuild-demo\\config.json","InToolexec":false,"DebugLog":false,"Verbose":false,"Debug":true,"Restore":false,"BuildArgs":["main.go"],"PrintVersion":false}
\ No newline at end of file
Index: .otel-build/preprocess/otel_user/go.sum
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.otel-build/preprocess/otel_user/go.sum b/.otel-build/preprocess/otel_user/go.sum
new file mode 100644
--- /dev/null	(date 1732095815305)
+++ b/.otel-build/preprocess/otel_user/go.sum	(date 1732095815305)
@@ -0,0 +1,67 @@
+github.com/antgan-0226/opentelemetry-go-auto-instrumentation v0.5.1 h1:eGySlODbwEWbOqQUgsug6d2RniKQsvbsBxsI8cFy81A=
+github.com/antgan-0226/opentelemetry-go-auto-instrumentation v0.5.1/go.mod h1:MTJEQMbKFcoEct/tBB5Gv4ho6x6Q/E88FSvuePqcmMY=
+github.com/antgan-0226/opentelemetry-go-auto-instrumentation/test/verifier v0.0.0-20241120080835-df6534803198 h1:FmmIJwtAZYKOLPuJy4N5XAUMBCyZi98T7tcWNZuciMQ=
+github.com/antgan-0226/opentelemetry-go-auto-instrumentation/test/verifier v0.0.0-20241120080835-df6534803198/go.mod h1:qu1XZXTC05H1PhNCIpmEHw8dhGm5krb4kUMTvs8A2Os=
+github.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=
+github.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=
+github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=
+github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
+github.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=
+github.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=
+github.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=
+github.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=
+github.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=
+github.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=
+github.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=
+github.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=
+github.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=
+github.com/grpc-ecosystem/grpc-gateway/v2 v2.23.0 h1:ad0vkEBuk23VJzZR9nkLVG0YAoN9coASF1GusYX6AlU=
+github.com/grpc-ecosystem/grpc-gateway/v2 v2.23.0/go.mod h1:igFoXX2ELCW06bol23DWPB5BEWfZISOzSP5K2sbLea0=
+github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826 h1:RWengNIwukTxcDr9M+97sNutRR1RKhG96O6jWumTTnw=
+github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826/go.mod h1:TaXosZuwdSHYgviHp1DAtfrULt5eUgsSMsZf+YrPgl8=
+github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=
+github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=
+github.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=
+github.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=
+go.opentelemetry.io/contrib/instrumentation/runtime v0.56.0 h1:s7wHG+t8bEoH7ibWk1nk682h7EoWLJ5/8j+TSO3bX/o=
+go.opentelemetry.io/contrib/instrumentation/runtime v0.56.0/go.mod h1:Q8Hsv3d9DwryfIl+ebj4mY81IYVRSPy4QfxroVZwqLo=
+go.opentelemetry.io/otel v1.32.0 h1:WnBN+Xjcteh0zdk01SVqV55d/m62NJLJdIyb4y/WO5U=
+go.opentelemetry.io/otel v1.32.0/go.mod h1:00DCVSB0RQcnzlwyTfqtxSm+DRr9hpYrHjNGiBHVQIg=
+go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.31.0 h1:FZ6ei8GFW7kyPYdxJaV2rgI6M+4tvZzhYsQ2wgyVC08=
+go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.31.0/go.mod h1:MdEu/mC6j3D+tTEfvI15b5Ci2Fn7NneJ71YMoiS3tpI=
+go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.31.0 h1:ZsXq73BERAiNuuFXYqP4MR5hBrjXfMGSO+Cx7qoOZiM=
+go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.31.0/go.mod h1:hg1zaDMpyZJuUzjFxFsRYBoccE86tM9Uf4IqNMUxvrY=
+go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.31.0 h1:K0XaT3DwHAcV4nKLzcQvwAgSyisUghWoY20I7huthMk=
+go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.31.0/go.mod h1:B5Ki776z/MBnVha1Nzwp5arlzBbE3+1jk+pGmaP5HME=
+go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.31.0 h1:FFeLy03iVTXP6ffeN2iXrxfGsZGCjVx0/4KlizjyBwU=
+go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.31.0/go.mod h1:TMu73/k1CP8nBUpDLc71Wj/Kf7ZS9FK5b53VapRsP9o=
+go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.31.0 h1:lUsI2TYsQw2r1IASwoROaCnjdj2cvC2+Jbxvk6nHnWU=
+go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.31.0/go.mod h1:2HpZxxQurfGxJlJDblybejHB6RX6pmExPNe517hREw4=
+go.opentelemetry.io/otel/metric v1.32.0 h1:xV2umtmNcThh2/a/aCP+h64Xx5wsj8qqnkYZktzNa0M=
+go.opentelemetry.io/otel/metric v1.32.0/go.mod h1:jH7CIbbK6SH2V2wE16W05BHCtIDzauciCRLoc/SyMv8=
+go.opentelemetry.io/otel/sdk v1.32.0 h1:RNxepc9vK59A8XsgZQouW8ue8Gkb4jpWtJm9ge5lEG4=
+go.opentelemetry.io/otel/sdk v1.32.0/go.mod h1:LqgegDBjKMmb2GC6/PrTnteJG39I8/vJCAP9LlJXEjU=
+go.opentelemetry.io/otel/sdk/metric v1.32.0 h1:rZvFnvmvawYb0alrYkjraqJq0Z4ZUJAiyYCU9snn1CU=
+go.opentelemetry.io/otel/sdk/metric v1.32.0/go.mod h1:PWeZlq0zt9YkYAp3gjKZ0eicRYvOh1Gd+X99x6GHpCQ=
+go.opentelemetry.io/otel/trace v1.32.0 h1:WIC9mYrXf8TmY/EXuULKc8hR17vE+Hjv2cssQDe03fM=
+go.opentelemetry.io/otel/trace v1.32.0/go.mod h1:+i4rkvCraA+tG6AzwloGaCtkx53Fa+L+V8e9a7YvhT8=
+go.opentelemetry.io/proto/otlp v1.3.1 h1:TrMUixzpM0yuc/znrFTP9MMRh8trP93mkCiDVeXrui0=
+go.opentelemetry.io/proto/otlp v1.3.1/go.mod h1:0X1WI4de4ZsLrrJNLAQbFeLCm3T7yBkR0XqQ7niQU+8=
+go.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=
+go.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=
+golang.org/x/net v0.30.0 h1:AcW1SDZMkb8IpzCdQUaIq2sP4sZ4zw+55h6ynffypl4=
+golang.org/x/net v0.30.0/go.mod h1:2wGyMJ5iFasEhkwi13ChkO/t1ECNC4X4eBKkVFyYFlU=
+golang.org/x/sys v0.27.0 h1:wBqf8DvsY9Y/2P8gAfPDEYNuS30J4lPHJxXSb/nJZ+s=
+golang.org/x/sys v0.27.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
+golang.org/x/text v0.20.0 h1:gK/Kv2otX8gz+wn7Rmb3vT96ZwuoxnQlY+HlJVj7Qug=
+golang.org/x/text v0.20.0/go.mod h1:D4IsuqiFMhST5bX19pQ9ikHC2GsaKyk/oF+pn3ducp4=
+google.golang.org/genproto/googleapis/api v0.0.0-20241104194629-dd2ea8efbc28 h1:M0KvPgPmDZHPlbRbaNU1APr28TvwvvdUPlSv7PUvy8g=
+google.golang.org/genproto/googleapis/api v0.0.0-20241104194629-dd2ea8efbc28/go.mod h1:dguCy7UOdZhTvLzDyt15+rOrawrpM4q7DD9dQ1P11P4=
+google.golang.org/genproto/googleapis/rpc v0.0.0-20241104194629-dd2ea8efbc28 h1:XVhgTWWV3kGQlwJHR3upFWZeTsei6Oks1apkZSeonIE=
+google.golang.org/genproto/googleapis/rpc v0.0.0-20241104194629-dd2ea8efbc28/go.mod h1:GX3210XPVPUjJbTUbvwI8f2IpZDMZuPJWDzDuebbviI=
+google.golang.org/grpc v1.67.1 h1:zWnc1Vrcno+lHZCOofnIMvycFcc0QRGIzm9dhnDX68E=
+google.golang.org/grpc v1.67.1/go.mod h1:1gLDyUQU7CTLJI90u3nXZ9ekeghjeM7pTDZlqFNg2AA=
+google.golang.org/protobuf v1.35.1 h1:m3LfL6/Ca+fqnjnlqQXNpFPABW1UD7mjh8KO2mKFytA=
+google.golang.org/protobuf v1.35.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=
+gopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=
+gopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
Index: .otel-build/preprocess/otel_user/go.mod
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.otel-build/preprocess/otel_user/go.mod b/.otel-build/preprocess/otel_user/go.mod
new file mode 100644
--- /dev/null	(date 1732095815305)
+++ b/.otel-build/preprocess/otel_user/go.mod	(date 1732095815305)
@@ -0,0 +1,37 @@
+module otelbuild-demo
+
+go 1.23.3
+
+require (
+	github.com/antgan-0226/opentelemetry-go-auto-instrumentation v0.5.1
+	github.com/antgan-0226/opentelemetry-go-auto-instrumentation/test/verifier v0.0.0-20241120080835-df6534803198
+	go.opentelemetry.io/otel v1.32.0
+	go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.31.0
+	go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.31.0
+	go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.31.0
+	go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.31.0
+	go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.31.0
+)
+
+require github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826 // indirect
+
+require (
+	github.com/cenkalti/backoff/v4 v4.3.0 // indirect
+	github.com/go-logr/logr v1.4.2 // indirect
+	github.com/go-logr/stdr v1.2.2 // indirect
+	github.com/google/uuid v1.6.0 // indirect
+	github.com/grpc-ecosystem/grpc-gateway/v2 v2.23.0 // indirect
+	go.opentelemetry.io/contrib/instrumentation/runtime v0.56.0
+	go.opentelemetry.io/otel/metric v1.32.0
+	go.opentelemetry.io/otel/sdk v1.32.0
+	go.opentelemetry.io/otel/sdk/metric v1.32.0
+	go.opentelemetry.io/otel/trace v1.32.0
+	go.opentelemetry.io/proto/otlp v1.3.1 // indirect
+	golang.org/x/net v0.30.0 // indirect
+	golang.org/x/sys v0.27.0 // indirect
+	golang.org/x/text v0.20.0 // indirect
+	google.golang.org/genproto/googleapis/api v0.0.0-20241104194629-dd2ea8efbc28 // indirect
+	google.golang.org/genproto/googleapis/rpc v0.0.0-20241104194629-dd2ea8efbc28 // indirect
+	google.golang.org/grpc v1.67.1 // indirect
+	google.golang.org/protobuf v1.35.1 // indirect
+)
Index: .otel-build/preprocess/backups/main.go.bk
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.otel-build/preprocess/backups/main.go.bk b/.otel-build/preprocess/backups/main.go.bk
new file mode 100644
--- /dev/null	(date 1732095805510)
+++ b/.otel-build/preprocess/backups/main.go.bk	(date 1732095805510)
@@ -0,0 +1,41 @@
+package main
+
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlptrace"
+import _ "go.opentelemetry.io/otel/sdk"
+import _ "go.opentelemetry.io/otel"
+
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlptrace"
+import _ "go.opentelemetry.io/otel"
+
+import (
+	"context"
+	"fmt"
+	"net/http"
+	"otelbuild-demo/service"
+)
+
+func main() {
+	//测试net/http::RoundTrip的hook效果
+	req, err := http.NewRequestWithContext(context.Background(), "GET", "http://www.baidu.com", nil)
+	if err != nil {
+		panic(err)
+	}
+	req.Header.Set("otelbuild", "true")
+	client := &http.Client{}
+	resp, err := client.Do(req)
+	defer resp.Body.Close()
+
+	//测试service::CreateUser的hook效果
+	u, _ := service.CreateUser(context.Background(), 1, "test")
+
+	//model.UserModel注入了新字段age
+	fmt.Println(fmt.Sprintf("UserModel: %+v", u))
+}
Index: .otel-build/preprocess/backups/go.sum.bk
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.otel-build/preprocess/backups/go.sum.bk b/.otel-build/preprocess/backups/go.sum.bk
new file mode 100644
--- /dev/null	(date 1732095805323)
+++ b/.otel-build/preprocess/backups/go.sum.bk	(date 1732095805323)
@@ -0,0 +1,61 @@
+github.com/antgan-0226/opentelemetry-go-auto-instrumentation v0.5.1 h1:eGySlODbwEWbOqQUgsug6d2RniKQsvbsBxsI8cFy81A=
+github.com/antgan-0226/opentelemetry-go-auto-instrumentation v0.5.1/go.mod h1:MTJEQMbKFcoEct/tBB5Gv4ho6x6Q/E88FSvuePqcmMY=
+github.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=
+github.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=
+github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=
+github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
+github.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=
+github.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=
+github.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=
+github.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=
+github.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=
+github.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=
+github.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=
+github.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=
+github.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=
+github.com/grpc-ecosystem/grpc-gateway/v2 v2.23.0 h1:ad0vkEBuk23VJzZR9nkLVG0YAoN9coASF1GusYX6AlU=
+github.com/grpc-ecosystem/grpc-gateway/v2 v2.23.0/go.mod h1:igFoXX2ELCW06bol23DWPB5BEWfZISOzSP5K2sbLea0=
+github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=
+github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=
+github.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=
+github.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=
+go.opentelemetry.io/otel v1.32.0 h1:WnBN+Xjcteh0zdk01SVqV55d/m62NJLJdIyb4y/WO5U=
+go.opentelemetry.io/otel v1.32.0/go.mod h1:00DCVSB0RQcnzlwyTfqtxSm+DRr9hpYrHjNGiBHVQIg=
+go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.31.0 h1:FZ6ei8GFW7kyPYdxJaV2rgI6M+4tvZzhYsQ2wgyVC08=
+go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.31.0/go.mod h1:MdEu/mC6j3D+tTEfvI15b5Ci2Fn7NneJ71YMoiS3tpI=
+go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.31.0 h1:ZsXq73BERAiNuuFXYqP4MR5hBrjXfMGSO+Cx7qoOZiM=
+go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.31.0/go.mod h1:hg1zaDMpyZJuUzjFxFsRYBoccE86tM9Uf4IqNMUxvrY=
+go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.31.0 h1:K0XaT3DwHAcV4nKLzcQvwAgSyisUghWoY20I7huthMk=
+go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.31.0/go.mod h1:B5Ki776z/MBnVha1Nzwp5arlzBbE3+1jk+pGmaP5HME=
+go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.31.0 h1:FFeLy03iVTXP6ffeN2iXrxfGsZGCjVx0/4KlizjyBwU=
+go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.31.0/go.mod h1:TMu73/k1CP8nBUpDLc71Wj/Kf7ZS9FK5b53VapRsP9o=
+go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.31.0 h1:lUsI2TYsQw2r1IASwoROaCnjdj2cvC2+Jbxvk6nHnWU=
+go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.31.0/go.mod h1:2HpZxxQurfGxJlJDblybejHB6RX6pmExPNe517hREw4=
+go.opentelemetry.io/otel/metric v1.32.0 h1:xV2umtmNcThh2/a/aCP+h64Xx5wsj8qqnkYZktzNa0M=
+go.opentelemetry.io/otel/metric v1.32.0/go.mod h1:jH7CIbbK6SH2V2wE16W05BHCtIDzauciCRLoc/SyMv8=
+go.opentelemetry.io/otel/sdk v1.32.0 h1:RNxepc9vK59A8XsgZQouW8ue8Gkb4jpWtJm9ge5lEG4=
+go.opentelemetry.io/otel/sdk v1.32.0/go.mod h1:LqgegDBjKMmb2GC6/PrTnteJG39I8/vJCAP9LlJXEjU=
+go.opentelemetry.io/otel/sdk/metric v1.32.0 h1:rZvFnvmvawYb0alrYkjraqJq0Z4ZUJAiyYCU9snn1CU=
+go.opentelemetry.io/otel/sdk/metric v1.32.0/go.mod h1:PWeZlq0zt9YkYAp3gjKZ0eicRYvOh1Gd+X99x6GHpCQ=
+go.opentelemetry.io/otel/trace v1.32.0 h1:WIC9mYrXf8TmY/EXuULKc8hR17vE+Hjv2cssQDe03fM=
+go.opentelemetry.io/otel/trace v1.32.0/go.mod h1:+i4rkvCraA+tG6AzwloGaCtkx53Fa+L+V8e9a7YvhT8=
+go.opentelemetry.io/proto/otlp v1.3.1 h1:TrMUixzpM0yuc/znrFTP9MMRh8trP93mkCiDVeXrui0=
+go.opentelemetry.io/proto/otlp v1.3.1/go.mod h1:0X1WI4de4ZsLrrJNLAQbFeLCm3T7yBkR0XqQ7niQU+8=
+go.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=
+go.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=
+golang.org/x/net v0.30.0 h1:AcW1SDZMkb8IpzCdQUaIq2sP4sZ4zw+55h6ynffypl4=
+golang.org/x/net v0.30.0/go.mod h1:2wGyMJ5iFasEhkwi13ChkO/t1ECNC4X4eBKkVFyYFlU=
+golang.org/x/sys v0.27.0 h1:wBqf8DvsY9Y/2P8gAfPDEYNuS30J4lPHJxXSb/nJZ+s=
+golang.org/x/sys v0.27.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
+golang.org/x/text v0.20.0 h1:gK/Kv2otX8gz+wn7Rmb3vT96ZwuoxnQlY+HlJVj7Qug=
+golang.org/x/text v0.20.0/go.mod h1:D4IsuqiFMhST5bX19pQ9ikHC2GsaKyk/oF+pn3ducp4=
+google.golang.org/genproto/googleapis/api v0.0.0-20241104194629-dd2ea8efbc28 h1:M0KvPgPmDZHPlbRbaNU1APr28TvwvvdUPlSv7PUvy8g=
+google.golang.org/genproto/googleapis/api v0.0.0-20241104194629-dd2ea8efbc28/go.mod h1:dguCy7UOdZhTvLzDyt15+rOrawrpM4q7DD9dQ1P11P4=
+google.golang.org/genproto/googleapis/rpc v0.0.0-20241104194629-dd2ea8efbc28 h1:XVhgTWWV3kGQlwJHR3upFWZeTsei6Oks1apkZSeonIE=
+google.golang.org/genproto/googleapis/rpc v0.0.0-20241104194629-dd2ea8efbc28/go.mod h1:GX3210XPVPUjJbTUbvwI8f2IpZDMZuPJWDzDuebbviI=
+google.golang.org/grpc v1.67.1 h1:zWnc1Vrcno+lHZCOofnIMvycFcc0QRGIzm9dhnDX68E=
+google.golang.org/grpc v1.67.1/go.mod h1:1gLDyUQU7CTLJI90u3nXZ9ekeghjeM7pTDZlqFNg2AA=
+google.golang.org/protobuf v1.35.1 h1:m3LfL6/Ca+fqnjnlqQXNpFPABW1UD7mjh8KO2mKFytA=
+google.golang.org/protobuf v1.35.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=
+gopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=
+gopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
Index: .otel-build/preprocess/otel_rules/otel_setup_sdk.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.otel-build/preprocess/otel_rules/otel_setup_sdk.go b/.otel-build/preprocess/otel_rules/otel_setup_sdk.go
new file mode 100644
--- /dev/null	(date 1732095815303)
+++ b/.otel-build/preprocess/otel_rules/otel_setup_sdk.go	(date 1732095815303)
@@ -0,0 +1,146 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package otel_rules
+
+import (
+	"context"
+	"errors"
+	"log"
+	"os"
+	"strings"
+
+	"otelbuild-demo/otel_pkgdep/core/meter"
+	"otelbuild-demo/otel_pkgdep/inst-api-semconv/instrumenter/http"
+	"github.com/antgan-0226/opentelemetry-go-auto-instrumentation/test/verifier"
+	"go.opentelemetry.io/contrib/instrumentation/runtime"
+	"go.opentelemetry.io/otel"
+	_ "go.opentelemetry.io/otel"
+	_ "go.opentelemetry.io/otel/baggage"
+	"go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc"
+	"go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp"
+	"go.opentelemetry.io/otel/exporters/otlp/otlptrace"
+	"go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc"
+	"go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp"
+	"go.opentelemetry.io/otel/propagation"
+	"go.opentelemetry.io/otel/sdk/metric"
+	"go.opentelemetry.io/otel/sdk/trace"
+	_ "go.opentelemetry.io/otel/sdk/trace"
+)
+
+// set the following environment variables based on https://opentelemetry.io/docs/specs/otel/configuration/sdk-environment-variables
+// your service name: OTEL_SERVICE_NAME
+// your otlp endpoint: OTEL_EXPORTER_OTLP_ENDPOINT OTEL_EXPORTER_OTLP_TRACES_ENDPOINT OTEL_EXPORTER_OTLP_METRICS_ENDPOINT OTEL_EXPORTER_OTLP_LOGS_ENDPOINT
+// your otlp header: OTEL_EXPORTER_OTLP_HEADERS
+const exec_name = "otelbuild"
+const report_protocol = "OTEL_EXPORTER_OTLP_PROTOCOL"
+const trace_report_protocol = "OTEL_EXPORTER_OTLP_TRACES_PROTOCOL"
+
+func init() {
+	path, err := os.Executable()
+	if err != nil {
+		panic(err)
+	}
+	// skip when the executable is otelbuild itself
+	if strings.HasSuffix(path, exec_name) {
+		return
+	}
+	if err = initOpenTelemetry(); err != nil {
+		log.Fatalf("%s: %v", "Failed to initialize opentelemetry resource", err)
+	}
+}
+
+func newSpanProcessor(ctx context.Context) trace.SpanProcessor {
+	if verifier.IsInTest() {
+		traceExporter := verifier.GetSpanExporter()
+		// in test, we just send the span immediately
+		simpleProcessor := trace.NewSimpleSpanProcessor(traceExporter)
+		return simpleProcessor
+	} else {
+		var traceExporter trace.SpanExporter
+		var err error
+		if os.Getenv(report_protocol) == "grpc" || os.Getenv(trace_report_protocol) == "grpc" {
+			traceExporter, err = otlptrace.New(ctx, otlptracegrpc.NewClient())
+			if err != nil {
+				log.Fatalf("%s: %v", "Failed to create the OpenTelemetry trace exporter", err)
+			}
+		} else {
+			traceExporter, err = otlptrace.New(ctx, otlptracehttp.NewClient())
+			if err != nil {
+				log.Fatalf("%s: %v", "Failed to create the OpenTelemetry trace exporter", err)
+			}
+		}
+		batchSpanProcessor := trace.NewBatchSpanProcessor(traceExporter)
+		return batchSpanProcessor
+	}
+}
+
+func initOpenTelemetry() error {
+	ctx := context.Background()
+
+	var batchSpanProcessor trace.SpanProcessor
+
+	batchSpanProcessor = newSpanProcessor(ctx)
+
+	var traceProvider *trace.TracerProvider
+	if batchSpanProcessor != nil {
+		traceProvider = trace.NewTracerProvider(
+			trace.WithSpanProcessor(batchSpanProcessor))
+	} else {
+		traceProvider = trace.NewTracerProvider()
+	}
+
+	otel.SetTracerProvider(traceProvider)
+	otel.SetTextMapPropagator(propagation.NewCompositeTextMapPropagator(propagation.TraceContext{}, propagation.Baggage{}))
+	return initMetrics()
+}
+
+func initMetrics() error {
+	ctx := context.Background()
+	var mp *metric.MeterProvider
+	// TODO: abstract the if-else
+	if verifier.IsInTest() {
+		mp = metric.NewMeterProvider(
+			metric.WithReader(verifier.ManualReader),
+		)
+	} else {
+		if os.Getenv(report_protocol) == "grpc" || os.Getenv(trace_report_protocol) == "grpc" {
+			exporter, err := otlpmetricgrpc.New(ctx)
+			if err != nil {
+				log.Fatalf("new otlp metric grpc exporter failed: %v", err)
+			}
+			mp = metric.NewMeterProvider(
+				metric.WithReader(metric.NewPeriodicReader(exporter)),
+			)
+		} else {
+			exporter, err := otlpmetrichttp.New(ctx)
+			if err != nil {
+				log.Fatalf("new otlp metric http exporter failed: %v", err)
+			}
+			mp = metric.NewMeterProvider(
+				metric.WithReader(metric.NewPeriodicReader(exporter)),
+			)
+		}
+	}
+	if mp == nil {
+		return errors.New("No MeterProvider is provided")
+	}
+	otel.SetMeterProvider(mp)
+	m := mp.Meter("opentelemetry-global-meter")
+	meter.SetMeter(m)
+	// init http metrics
+	http.InitHttpMetrics(m)
+	// DefaultMinimumReadMemStatsInterval is 15 second
+	return runtime.Start(runtime.WithMeterProvider(mp))
+}
Index: .otel-build/preprocess/otel_user/main.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.otel-build/preprocess/otel_user/main.go b/.otel-build/preprocess/otel_user/main.go
new file mode 100644
--- /dev/null	(date 1732095815306)
+++ b/.otel-build/preprocess/otel_user/main.go	(date 1732095815306)
@@ -0,0 +1,50 @@
+package main
+
+import _ "otelbuild-demo/otel_rules"
+
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlptrace"
+import _ "go.opentelemetry.io/otel"
+
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlptrace"
+import _ "go.opentelemetry.io/otel/sdk"
+import _ "go.opentelemetry.io/otel"
+
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlptrace"
+import _ "go.opentelemetry.io/otel"
+
+import (
+	"context"
+	"fmt"
+	"net/http"
+	"otelbuild-demo/service"
+)
+
+func main() {
+	//测试net/http::RoundTrip的hook效果
+	req, err := http.NewRequestWithContext(context.Background(), "GET", "http://www.baidu.com", nil)
+	if err != nil {
+		panic(err)
+	}
+	req.Header.Set("otelbuild", "true")
+	client := &http.Client{}
+	resp, err := client.Do(req)
+	defer resp.Body.Close()
+
+	//测试service::CreateUser的hook效果
+	u, _ := service.CreateUser(context.Background(), 1, "test")
+
+	//model.UserModel注入了新字段age
+	fmt.Println(fmt.Sprintf("UserModel: %+v", u))
+}
Index: .otel-build/preprocess/otel_rules/service95044/user_service_hook.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.otel-build/preprocess/otel_rules/service95044/user_service_hook.go b/.otel-build/preprocess/otel_rules/service95044/user_service_hook.go
new file mode 100644
--- /dev/null	(date 1732095815304)
+++ b/.otel-build/preprocess/otel_rules/service95044/user_service_hook.go	(date 1732095815304)
@@ -0,0 +1,23 @@
+package service95044
+
+import (
+	"context"
+	"fmt"
+	"otelbuild-demo/model"
+	"otelbuild-demo/service"
+)
+
+func CreateUserEnterHook(call service.CallContext, ctx context.Context, id int64, nickname string) {
+	fmt.Println(fmt.Sprintf("[service hook]create user enter hook, id :%d, name:%s", id, nickname))
+
+}
+
+func CreateUserExitHook(call service.CallContext, user *model.UserModel, err error) {
+	oldUserId := call.GetParam(1)
+	oldNickname := call.GetParam(2)
+	fmt.Println(fmt.Sprintf("[service hook]create user exit hook, id :%d, name:%s", oldUserId, oldNickname))
+	//赋予新值
+	user.Id = 2
+	user.Nickname = "ant"
+	fmt.Println(fmt.Sprintf("[service hook]create user exit hook, id :%d, name:%s", user.Id, user.Nickname))
+}
Index: .otel-build/preprocess/otel_rules/http87548/hook.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.otel-build/preprocess/otel_rules/http87548/hook.go b/.otel-build/preprocess/otel_rules/http87548/hook.go
new file mode 100644
--- /dev/null	(date 1732095815302)
+++ b/.otel-build/preprocess/otel_rules/http87548/hook.go	(date 1732095815302)
@@ -0,0 +1,31 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package http87548
+
+import (
+	"encoding/json"
+	"fmt"
+	"net/http"
+)
+
+func HttpClientEnterHook(call http.CallContext, t *http.Transport, req *http.Request) {
+	header, _ := json.Marshal(req.Header)
+	fmt.Println("[http hook]request header is ", string(header))
+}
+
+func HttpClientExitHook(call http.CallContext, res *http.Response, err error) {
+	header, _ := json.Marshal(res.Header)
+	fmt.Println("[http hook]response header is ", string(header))
+}
Index: .otel-build/preprocess/otel_rules/otel_setup_inst.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.otel-build/preprocess/otel_rules/otel_setup_inst.go b/.otel-build/preprocess/otel_rules/otel_setup_inst.go
new file mode 100644
--- /dev/null	(date 1732095815303)
+++ b/.otel-build/preprocess/otel_rules/otel_setup_inst.go	(date 1732095815303)
@@ -0,0 +1,17 @@
+package otel_rules
+import service39054 "otelbuild-demo/service"
+import service95044 "otelbuild-demo/otel_rules/service95044"
+import http55767 "net/http"
+import http87548 "otelbuild-demo/otel_rules/http87548"
+import otel_log "log"
+import otel_runtime_debug "runtime/debug"
+func init() {
+	service39054.CreateUserEnterHookImpl = service95044.CreateUserEnterHook
+	service39054.CreateUserExitHookImpl = service95044.CreateUserExitHook
+	service39054.OtelGetStackImpl = otel_runtime_debug.Stack
+	service39054.OtelPrintStackImpl = func(bt []byte){ otel_log.Printf(string(bt)) }
+	http55767.HttpClientEnterHookImpl = http87548.HttpClientEnterHook
+	http55767.HttpClientExitHookImpl = http87548.HttpClientExitHook
+	http55767.OtelGetStackImpl = otel_runtime_debug.Stack
+	http55767.OtelPrintStackImpl = func(bt []byte){ otel_log.Printf(string(bt)) }
+}
Index: otel_pkgdep/core/meter/meter.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/core/meter/meter.go b/otel_pkgdep/core/meter/meter.go
new file mode 100644
--- /dev/null	(date 1732095811426)
+++ b/otel_pkgdep/core/meter/meter.go	(date 1732095811426)
@@ -0,0 +1,35 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package meter
+
+import (
+	"go.opentelemetry.io/otel/metric"
+	"sync"
+)
+
+var globalMeter metric.Meter
+var mu sync.Mutex
+
+func SetMeter(meter metric.Meter) {
+	mu.Lock()
+	defer mu.Unlock()
+	globalMeter = meter
+}
+
+func GetMeter() metric.Meter {
+	mu.Lock()
+	defer mu.Unlock()
+	return globalMeter
+}
Index: otel_pkgdep/inst-api/utils/span_key.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api/utils/span_key.go b/otel_pkgdep/inst-api/utils/span_key.go
new file mode 100644
--- /dev/null	(date 1732095811428)
+++ b/otel_pkgdep/inst-api/utils/span_key.go	(date 1732095811428)
@@ -0,0 +1,25 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package utils
+
+import "go.opentelemetry.io/otel/attribute"
+
+const DB_CLIENT_KEY = attribute.Key("opentelemetry-traces-span-key-db-client")
+const RPC_SERVER_KEY = attribute.Key("opentelemetry-traces-span-key-rpc-server")
+const RPC_CLIENT_KEY = attribute.Key("opentelemetry-traces-span-key-rpc-client")
+const PRODUCER_KEY = attribute.Key("opentelemetry-traces-span-key-producer")
+const CONSUMER_RECEIVE_KEY = attribute.Key("opentelemetry-traces-span-key-consumer-receive")
+const CONSUMER_PROCESS_KEY = attribute.Key("opentelemetry-traces-span-key-consumer-process")
+const OTEL_CONTEXT_KEY = attribute.Key("opentelemetry-http-server-route-key")
Index: otel_pkgdep/inst-api/utils/filter.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api/utils/filter.go b/otel_pkgdep/inst-api/utils/filter.go
new file mode 100644
--- /dev/null	(date 1732095811428)
+++ b/otel_pkgdep/inst-api/utils/filter.go	(date 1732095811428)
@@ -0,0 +1,32 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package utils
+
+import "net/url"
+
+type UrlFilter interface {
+	FilterUrl(url *url.URL) bool
+}
+
+type SpanNameFilter interface {
+	FilterSpanName(spanName string) bool
+}
+
+type DefaultUrlFilter struct {
+}
+
+func (d DefaultUrlFilter) FilterUrl(url *url.URL) bool {
+	return false
+}
Index: otel_pkgdep/inst-api/instrumenter/hook.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api/instrumenter/hook.go b/otel_pkgdep/inst-api/instrumenter/hook.go
new file mode 100644
--- /dev/null	(date 1732095811427)
+++ b/otel_pkgdep/inst-api/instrumenter/hook.go	(date 1732095811427)
@@ -0,0 +1,43 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package instrumenter
+
+import (
+	"context"
+	"time"
+
+	"go.opentelemetry.io/otel/attribute"
+)
+
+type OperationListener interface {
+	OnBeforeStart(parentContext context.Context, startTimestamp time.Time) context.Context
+	OnBeforeEnd(context context.Context, startAttributes []attribute.KeyValue, startTimestamp time.Time) context.Context
+	OnAfterStart(context context.Context, endTimestamp time.Time)
+	OnAfterEnd(context context.Context, endAttributes []attribute.KeyValue, endTimestamp time.Time)
+}
+
+type AttrsShadower interface {
+	Shadow(attrs []attribute.KeyValue) (int, []attribute.KeyValue)
+}
+
+type NoopAttrsShadower struct{}
+
+func (n NoopAttrsShadower) Shadow(attrs []attribute.KeyValue) (int, []attribute.KeyValue) {
+	return len(attrs), attrs
+}
+
+type ContextCustomizer[REQUEST interface{}] interface {
+	OnStart(context context.Context, request REQUEST, startAttributes []attribute.KeyValue) context.Context
+}
Index: otel_pkgdep/inst-api/instrumenter/extractor.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api/instrumenter/extractor.go b/otel_pkgdep/inst-api/instrumenter/extractor.go
new file mode 100644
--- /dev/null	(date 1732095811426)
+++ b/otel_pkgdep/inst-api/instrumenter/extractor.go	(date 1732095811426)
@@ -0,0 +1,88 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package instrumenter
+
+import (
+	"context"
+
+	"go.opentelemetry.io/otel/attribute"
+	"go.opentelemetry.io/otel/codes"
+	"go.opentelemetry.io/otel/trace"
+)
+
+type AttributesExtractor[REQUEST any, RESPONSE any] interface {
+	OnStart(attributes []attribute.KeyValue, parentContext context.Context, request REQUEST) ([]attribute.KeyValue, context.Context)
+	OnEnd(attributes []attribute.KeyValue, ctx context.Context, request REQUEST, response RESPONSE, err error) ([]attribute.KeyValue, context.Context)
+}
+
+type SpanKindExtractor[REQUEST any] interface {
+	Extract(request REQUEST) trace.SpanKind
+}
+
+type SpanNameExtractor[REQUEST any] interface {
+	Extract(request REQUEST) string
+}
+
+type SpanStatusExtractor[REQUEST any, RESPONSE any] interface {
+	Extract(span trace.Span, request REQUEST, response RESPONSE, err error)
+}
+
+type SpanKeyProvider interface {
+	GetSpanKey() attribute.Key
+}
+
+type AlwaysInternalExtractor[REQUEST any] struct {
+}
+
+func (a *AlwaysInternalExtractor[any]) Extract(request any) trace.SpanKind {
+	return trace.SpanKindInternal
+}
+
+type AlwaysClientExtractor[REQUEST any] struct {
+}
+
+func (a *AlwaysClientExtractor[any]) Extract(request any) trace.SpanKind {
+	return trace.SpanKindClient
+}
+
+type AlwaysServerExtractor[REQUEST any] struct {
+}
+
+func (a *AlwaysServerExtractor[any]) Extract(request any) trace.SpanKind {
+	return trace.SpanKindServer
+}
+
+type AlwaysProducerExtractor[REQUEST any] struct {
+}
+
+func (a *AlwaysProducerExtractor[any]) Extract(request any) trace.SpanKind {
+	return trace.SpanKindProducer
+}
+
+type AlwaysConsumerExtractor[REQUEST any] struct {
+}
+
+func (a *AlwaysConsumerExtractor[any]) Extract(request any) trace.SpanKind {
+	return trace.SpanKindConsumer
+}
+
+type defaultSpanStatusExtractor[REQUEST any, RESPONSE any] struct {
+}
+
+func (d *defaultSpanStatusExtractor[REQUEST, RESPONSE]) Extract(span trace.Span, request REQUEST, response RESPONSE, err error) {
+	if err != nil {
+		span.SetStatus(codes.Error, "")
+	}
+}
Index: otel_pkgdep/inst-api/instrumenter/instrumenter_builder.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api/instrumenter/instrumenter_builder.go b/otel_pkgdep/inst-api/instrumenter/instrumenter_builder.go
new file mode 100644
--- /dev/null	(date 1732095811428)
+++ b/otel_pkgdep/inst-api/instrumenter/instrumenter_builder.go	(date 1732095811428)
@@ -0,0 +1,171 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package instrumenter
+
+import (
+	"go.opentelemetry.io/otel"
+	"go.opentelemetry.io/otel/attribute"
+	"go.opentelemetry.io/otel/propagation"
+	"go.opentelemetry.io/otel/trace"
+)
+
+// TODO: add route updater here, now we do not support such controller layer to update route.
+
+type InstrumentEnabler interface {
+	Enable() bool
+}
+
+type defaultInstrumentEnabler struct {
+}
+
+func NewDefaultInstrumentEnabler() InstrumentEnabler {
+	return &defaultInstrumentEnabler{}
+}
+
+func (a *defaultInstrumentEnabler) Enable() bool {
+	return true
+}
+
+type Builder[REQUEST any, RESPONSE any] struct {
+	Enabler              InstrumentEnabler
+	SpanNameExtractor    SpanNameExtractor[REQUEST]
+	SpanKindExtractor    SpanKindExtractor[REQUEST]
+	SpanStatusExtractor  SpanStatusExtractor[REQUEST, RESPONSE]
+	AttributesExtractors []AttributesExtractor[REQUEST, RESPONSE]
+	OperationListeners   []OperationListener
+	ContextCustomizers   []ContextCustomizer[REQUEST]
+	SpanSuppressor       SpanSuppressor
+	Tracer               trace.Tracer
+	InstVersion          string
+}
+
+func (b *Builder[REQUEST, RESPONSE]) Init() *Builder[REQUEST, RESPONSE] {
+	b.Enabler = &defaultInstrumentEnabler{}
+	b.AttributesExtractors = make([]AttributesExtractor[REQUEST, RESPONSE], 0)
+	b.ContextCustomizers = make([]ContextCustomizer[REQUEST], 0)
+	b.SpanSuppressor = b.buildSpanSuppressor()
+	b.SpanStatusExtractor = &defaultSpanStatusExtractor[REQUEST, RESPONSE]{}
+	b.Tracer = otel.GetTracerProvider().Tracer("")
+	return b
+}
+
+func (b *Builder[REQUEST, RESPONSE]) SetInstrumentEnabler(enabler InstrumentEnabler) *Builder[REQUEST, RESPONSE] {
+	b.Enabler = enabler
+	return b
+}
+
+func (b *Builder[REQUEST, RESPONSE]) SetInstVersion(instVersion string) *Builder[REQUEST, RESPONSE] {
+	b.InstVersion = instVersion
+	return b
+}
+
+func (b *Builder[REQUEST, RESPONSE]) SetSpanNameExtractor(spanNameExtractor SpanNameExtractor[REQUEST]) *Builder[REQUEST, RESPONSE] {
+	b.SpanNameExtractor = spanNameExtractor
+	return b
+}
+
+func (b *Builder[REQUEST, RESPONSE]) SetSpanStatusExtractor(spanStatusExtractor SpanStatusExtractor[REQUEST, RESPONSE]) *Builder[REQUEST, RESPONSE] {
+	b.SpanStatusExtractor = spanStatusExtractor
+	return b
+}
+
+func (b *Builder[REQUEST, RESPONSE]) SetSpanKindExtractor(spanKindExtractor SpanKindExtractor[REQUEST]) *Builder[REQUEST, RESPONSE] {
+	b.SpanKindExtractor = spanKindExtractor
+	return b
+}
+
+func (b *Builder[REQUEST, RESPONSE]) AddAttributesExtractor(attributesExtractor ...AttributesExtractor[REQUEST, RESPONSE]) *Builder[REQUEST, RESPONSE] {
+	b.AttributesExtractors = append(b.AttributesExtractors, attributesExtractor...)
+	return b
+}
+
+func (b *Builder[REQUEST, RESPONSE]) AddOperationListeners(operationListener ...OperationListener) *Builder[REQUEST, RESPONSE] {
+	b.OperationListeners = append(b.OperationListeners, operationListener...)
+	return b
+}
+
+func (b *Builder[REQUEST, RESPONSE]) AddContextCustomizers(contextCustomizers ...ContextCustomizer[REQUEST]) *Builder[REQUEST, RESPONSE] {
+	b.ContextCustomizers = append(b.ContextCustomizers, contextCustomizers...)
+	return b
+}
+
+func (b *Builder[REQUEST, RESPONSE]) BuildInstrumenter() *InternalInstrumenter[REQUEST, RESPONSE] {
+	return &InternalInstrumenter[REQUEST, RESPONSE]{
+		enabler:              b.Enabler,
+		spanNameExtractor:    b.SpanNameExtractor,
+		spanKindExtractor:    b.SpanKindExtractor,
+		spanStatusExtractor:  b.SpanStatusExtractor,
+		attributesExtractors: b.AttributesExtractors,
+		operationListeners:   b.OperationListeners,
+		contextCustomizers:   b.ContextCustomizers,
+		spanSuppressor:       b.SpanSuppressor,
+		tracer:               b.Tracer,
+		instVersion:          b.InstVersion,
+	}
+}
+
+func (b *Builder[REQUEST, RESPONSE]) BuildPropagatingToDownstreamInstrumenter(carrierGetter func(REQUEST) propagation.TextMapCarrier, prop propagation.TextMapPropagator) *PropagatingToDownstreamInstrumenter[REQUEST, RESPONSE] {
+	return &PropagatingToDownstreamInstrumenter[REQUEST, RESPONSE]{
+		base: InternalInstrumenter[REQUEST, RESPONSE]{
+			enabler:              b.Enabler,
+			spanNameExtractor:    b.SpanNameExtractor,
+			spanKindExtractor:    b.SpanKindExtractor,
+			spanStatusExtractor:  b.SpanStatusExtractor,
+			attributesExtractors: b.AttributesExtractors,
+			operationListeners:   b.OperationListeners,
+			contextCustomizers:   b.ContextCustomizers,
+			spanSuppressor:       b.SpanSuppressor,
+			tracer:               b.Tracer,
+			instVersion:          b.InstVersion,
+		},
+		carrierGetter: carrierGetter,
+		prop:          prop,
+	}
+}
+
+func (b *Builder[REQUEST, RESPONSE]) BuildPropagatingFromUpstreamInstrumenter(carrierGetter func(REQUEST) propagation.TextMapCarrier, prop propagation.TextMapPropagator) *PropagatingFromUpstreamInstrumenter[REQUEST, RESPONSE] {
+	return &PropagatingFromUpstreamInstrumenter[REQUEST, RESPONSE]{
+		base: InternalInstrumenter[REQUEST, RESPONSE]{
+			enabler:              b.Enabler,
+			spanNameExtractor:    b.SpanNameExtractor,
+			spanKindExtractor:    b.SpanKindExtractor,
+			spanStatusExtractor:  b.SpanStatusExtractor,
+			attributesExtractors: b.AttributesExtractors,
+			operationListeners:   b.OperationListeners,
+			contextCustomizers:   b.ContextCustomizers,
+			spanSuppressor:       b.SpanSuppressor,
+			tracer:               b.Tracer,
+			instVersion:          b.InstVersion,
+		},
+		carrierGetter: carrierGetter,
+		prop:          prop,
+	}
+}
+
+// TODO: create suppressor by otel.instrumentation.experimental.span-suppression-strategy
+func (b *Builder[REQUEST, RESPONSE]) buildSpanSuppressor() SpanSuppressor {
+	kvs := make(map[attribute.Key]bool)
+	for _, extractor := range b.AttributesExtractors {
+		provider, ok := extractor.(SpanKeyProvider)
+		if ok {
+			kvs[provider.GetSpanKey()] = true
+		}
+	}
+	kSlice := make([]attribute.Key, 0, len(kvs))
+	for k := range kvs {
+		kSlice = append(kSlice, k)
+	}
+	return NewSpanKeySuppressor(kSlice)
+}
Index: otel_pkgdep/inst-api/instrumenter/span_supressor.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api/instrumenter/span_supressor.go b/otel_pkgdep/inst-api/instrumenter/span_supressor.go
new file mode 100644
--- /dev/null	(date 1732095811428)
+++ b/otel_pkgdep/inst-api/instrumenter/span_supressor.go	(date 1732095811428)
@@ -0,0 +1,68 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package instrumenter
+
+import (
+	"context"
+
+	"go.opentelemetry.io/otel/attribute"
+	"go.opentelemetry.io/otel/trace"
+)
+
+type SpanSuppressor interface {
+	StoreInContext(context context.Context, spanKind trace.SpanKind, span trace.Span) context.Context
+	ShouldSuppress(parentContext context.Context, spanKind trace.SpanKind) bool
+}
+
+type NoopSpanSuppressor struct {
+}
+
+func NewNoopSpanSuppressor() *NoopSpanSuppressor {
+	return &NoopSpanSuppressor{}
+}
+
+func (n *NoopSpanSuppressor) StoreInContext(context context.Context, spanKind trace.SpanKind, span trace.Span) context.Context {
+	return context
+}
+
+func (n *NoopSpanSuppressor) ShouldSuppress(parentContext context.Context, spanKind trace.SpanKind) bool {
+	return false
+}
+
+type SpanKeySuppressor struct {
+	spanKeys []attribute.Key
+}
+
+func NewSpanKeySuppressor(spanKeys []attribute.Key) *SpanKeySuppressor {
+	return &SpanKeySuppressor{spanKeys: spanKeys}
+}
+
+func (s *SpanKeySuppressor) StoreInContext(ctx context.Context, spanKind trace.SpanKind, span trace.Span) context.Context {
+	for _, spanKey := range s.spanKeys {
+		ctx = context.WithValue(ctx, spanKey, span)
+	}
+	return ctx
+}
+
+func (s *SpanKeySuppressor) ShouldSuppress(parentContext context.Context, spanKind trace.SpanKind) bool {
+	for _, spanKey := range s.spanKeys {
+		if parentContext.Value(spanKey) == nil {
+			return false
+		}
+	}
+	return true
+}
+
+// TODO: semconv span suppressor
Index: otel_pkgdep/inst-api/instrumenter/instrumenter.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api/instrumenter/instrumenter.go b/otel_pkgdep/inst-api/instrumenter/instrumenter.go
new file mode 100644
--- /dev/null	(date 1732095811427)
+++ b/otel_pkgdep/inst-api/instrumenter/instrumenter.go	(date 1732095811427)
@@ -0,0 +1,237 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package instrumenter
+
+import (
+	"context"
+	"go.opentelemetry.io/otel"
+	"go.opentelemetry.io/otel/attribute"
+	"go.opentelemetry.io/otel/codes"
+	"go.opentelemetry.io/otel/propagation"
+	"go.opentelemetry.io/otel/trace"
+	"sync"
+	"time"
+)
+
+type Instrumenter[REQUEST any, RESPONSE any] interface {
+	StartAndEnd(parentContext context.Context, request REQUEST, response RESPONSE, err error, startTime, endTime time.Time)
+	StartAndEndWithOptions(parentContext context.Context, request REQUEST, response RESPONSE, err error, startTime, endTime time.Time, startOptions []trace.SpanStartOption, endOptions []trace.SpanEndOption)
+	Start(parentContext context.Context, request REQUEST, options ...trace.SpanStartOption) context.Context
+	End(ctx context.Context, request REQUEST, response RESPONSE, err error, options ...trace.SpanEndOption)
+}
+
+type InternalInstrumenter[REQUEST any, RESPONSE any] struct {
+	enabler              InstrumentEnabler
+	spanNameExtractor    SpanNameExtractor[REQUEST]
+	spanKindExtractor    SpanKindExtractor[REQUEST]
+	spanStatusExtractor  SpanStatusExtractor[REQUEST, RESPONSE]
+	attributesExtractors []AttributesExtractor[REQUEST, RESPONSE]
+	operationListeners   []OperationListener
+	contextCustomizers   []ContextCustomizer[REQUEST]
+	spanSuppressor       SpanSuppressor
+	tracer               trace.Tracer
+	instVersion          string
+}
+
+type PropagatingToDownstreamInstrumenter[REQUEST any, RESPONSE any] struct {
+	carrierGetter func(REQUEST) propagation.TextMapCarrier
+	prop          propagation.TextMapPropagator
+	base          InternalInstrumenter[REQUEST, RESPONSE]
+}
+
+type PropagatingFromUpstreamInstrumenter[REQUEST any, RESPONSE any] struct {
+	carrierGetter func(REQUEST) propagation.TextMapCarrier
+	prop          propagation.TextMapPropagator
+	base          InternalInstrumenter[REQUEST, RESPONSE]
+}
+
+var cachePool = &sync.Pool{
+	New: func() interface{} {
+		return make([]attribute.KeyValue, 0, 25)
+	},
+}
+
+func GetCachedAttrs() []attribute.KeyValue {
+	return cachePool.Get().([]attribute.KeyValue)
+}
+
+func PutCachedAttrs(attrs []attribute.KeyValue) {
+	attrs = attrs[:0]
+	cachePool.Put(attrs)
+}
+
+func (i *InternalInstrumenter[REQUEST, RESPONSE]) StartAndEnd(parentContext context.Context, request REQUEST, response RESPONSE, err error, startTime, endTime time.Time) {
+	ctx := i.doStart(parentContext, request, startTime)
+	i.doEnd(ctx, request, response, err, endTime)
+}
+
+func (i *InternalInstrumenter[REQUEST, RESPONSE]) StartAndEndWithOptions(parentContext context.Context, request REQUEST, response RESPONSE, err error, startTime, endTime time.Time, startOptions []trace.SpanStartOption, endOptions []trace.SpanEndOption) {
+	ctx := i.doStart(parentContext, request, startTime, startOptions...)
+	i.doEnd(ctx, request, response, err, endTime, endOptions...)
+}
+
+func (i *InternalInstrumenter[REQUEST, RESPONSE]) Start(parentContext context.Context, request REQUEST, options ...trace.SpanStartOption) context.Context {
+	return i.doStart(parentContext, request, time.Now(), options...)
+}
+
+func (i *InternalInstrumenter[REQUEST, RESPONSE]) doStart(parentContext context.Context, request REQUEST, timestamp time.Time, options ...trace.SpanStartOption) context.Context {
+	if i.enabler != nil && !i.enabler.Enable() {
+		return parentContext
+	}
+	for _, listener := range i.operationListeners {
+		parentContext = listener.OnBeforeStart(parentContext, timestamp)
+	}
+	// extract span name
+	spanName := i.spanNameExtractor.Extract(request)
+	spanKind := i.spanKindExtractor.Extract(request)
+	options = append(options, trace.WithSpanKind(spanKind))
+	newCtx, span := i.tracer.Start(parentContext, spanName, options...)
+	attrs := make([]attribute.KeyValue, 0, 20)
+	// extract span attrs
+	for _, extractor := range i.attributesExtractors {
+		attrs, newCtx = extractor.OnStart(attrs, newCtx, request)
+	}
+	// execute context customizer hook
+	for _, customizer := range i.contextCustomizers {
+		newCtx = customizer.OnStart(newCtx, request, attrs)
+	}
+	for _, listener := range i.operationListeners {
+		newCtx = listener.OnBeforeEnd(newCtx, attrs, timestamp)
+	}
+	span.SetAttributes(attrs...)
+	return i.spanSuppressor.StoreInContext(newCtx, spanKind, span)
+}
+
+func (i *InternalInstrumenter[REQUEST, RESPONSE]) End(ctx context.Context, request REQUEST, response RESPONSE, err error, options ...trace.SpanEndOption) {
+	i.doEnd(ctx, request, response, err, time.Now(), options...)
+}
+
+func (i *InternalInstrumenter[REQUEST, RESPONSE]) doEnd(ctx context.Context, request REQUEST, response RESPONSE, err error, timestamp time.Time, options ...trace.SpanEndOption) {
+	if i.enabler != nil && !i.enabler.Enable() {
+		return
+	}
+	for _, listener := range i.operationListeners {
+		listener.OnAfterStart(ctx, timestamp)
+	}
+	span := trace.SpanFromContext(ctx)
+	if err != nil {
+		span.RecordError(err)
+		span.SetStatus(codes.Error, err.Error())
+	}
+	attrs := GetCachedAttrs()
+	defer PutCachedAttrs(attrs)
+	// extract span attributes
+	for _, extractor := range i.attributesExtractors {
+		attrs, ctx = extractor.OnEnd(attrs, ctx, request, response, err)
+	}
+	i.spanStatusExtractor.Extract(span, request, response, err)
+	span.SetAttributes(attrs...)
+	options = append(options, trace.WithTimestamp(timestamp))
+	span.End(options...)
+	for _, listener := range i.operationListeners {
+		listener.OnAfterEnd(ctx, attrs, timestamp)
+	}
+}
+
+func (p *PropagatingToDownstreamInstrumenter[REQUEST, RESPONSE]) StartAndEnd(parentContext context.Context, request REQUEST, response RESPONSE, err error, startTime, endTime time.Time) {
+	newCtx := p.base.doStart(parentContext, request, startTime)
+	if p.carrierGetter != nil {
+		if p.prop != nil {
+			p.prop.Inject(newCtx, p.carrierGetter(request))
+		} else {
+			otel.GetTextMapPropagator().Inject(newCtx, p.carrierGetter(request))
+		}
+	}
+	p.base.doEnd(newCtx, request, response, err, endTime)
+}
+
+func (p *PropagatingToDownstreamInstrumenter[REQUEST, RESPONSE]) StartAndEndWithOptions(parentContext context.Context, request REQUEST, response RESPONSE, err error, startTime, endTime time.Time, startOptions []trace.SpanStartOption, endOptions []trace.SpanEndOption) {
+	newCtx := p.base.doStart(parentContext, request, startTime, startOptions...)
+	if p.carrierGetter != nil {
+		if p.prop != nil {
+			p.prop.Inject(newCtx, p.carrierGetter(request))
+		} else {
+			otel.GetTextMapPropagator().Inject(newCtx, p.carrierGetter(request))
+		}
+	}
+	p.base.doEnd(newCtx, request, response, err, endTime, endOptions...)
+}
+
+func (p *PropagatingToDownstreamInstrumenter[REQUEST, RESPONSE]) Start(parentContext context.Context, request REQUEST, options ...trace.SpanStartOption) context.Context {
+	newCtx := p.base.Start(parentContext, request)
+	if p.carrierGetter != nil {
+		if p.prop != nil {
+			p.prop.Inject(newCtx, p.carrierGetter(request))
+		} else {
+			otel.GetTextMapPropagator().Inject(newCtx, p.carrierGetter(request))
+		}
+
+	}
+	return newCtx
+}
+
+func (p *PropagatingToDownstreamInstrumenter[REQUEST, RESPONSE]) End(ctx context.Context, request REQUEST, response RESPONSE, err error, options ...trace.SpanEndOption) {
+	p.base.End(ctx, request, response, err)
+}
+
+func (p *PropagatingFromUpstreamInstrumenter[REQUEST, RESPONSE]) StartAndEnd(parentContext context.Context, request REQUEST, response RESPONSE, err error, startTime, endTime time.Time) {
+	var ctx context.Context
+	if p.carrierGetter != nil {
+		var extracted context.Context
+		if p.prop != nil {
+			extracted = p.prop.Extract(parentContext, p.carrierGetter(request))
+		} else {
+			extracted = otel.GetTextMapPropagator().Extract(parentContext, p.carrierGetter(request))
+		}
+		ctx = p.base.doStart(extracted, request, startTime)
+	} else {
+		ctx = parentContext
+	}
+	p.base.doEnd(ctx, request, response, err, endTime)
+}
+
+func (p *PropagatingFromUpstreamInstrumenter[REQUEST, RESPONSE]) StartAndEndWithOptions(parentContext context.Context, request REQUEST, response RESPONSE, err error, startTime, endTime time.Time, startOptions []trace.SpanStartOption, endOptions []trace.SpanEndOption) {
+	var ctx context.Context
+	if p.carrierGetter != nil {
+		var extracted context.Context
+		if p.prop != nil {
+			extracted = p.prop.Extract(parentContext, p.carrierGetter(request))
+		} else {
+			extracted = otel.GetTextMapPropagator().Extract(parentContext, p.carrierGetter(request))
+		}
+		ctx = p.base.doStart(extracted, request, startTime, startOptions...)
+	} else {
+		ctx = parentContext
+	}
+	p.base.doEnd(ctx, request, response, err, endTime, endOptions...)
+}
+
+func (p *PropagatingFromUpstreamInstrumenter[REQUEST, RESPONSE]) Start(parentContext context.Context, request REQUEST, options ...trace.SpanStartOption) context.Context {
+	if p.carrierGetter != nil {
+		var extracted context.Context
+		if p.prop != nil {
+			extracted = p.prop.Extract(parentContext, p.carrierGetter(request))
+		} else {
+			extracted = otel.GetTextMapPropagator().Extract(parentContext, p.carrierGetter(request))
+		}
+		return p.base.Start(extracted, request)
+	} else {
+		return parentContext
+	}
+}
+
+func (p *PropagatingFromUpstreamInstrumenter[REQUEST, RESPONSE]) End(ctx context.Context, request REQUEST, response RESPONSE, err error, options ...trace.SpanEndOption) {
+	p.base.End(ctx, request, response, err)
+}
Index: otel_pkgdep/inst-api-semconv/instrumenter/db/db_client_extractor.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api-semconv/instrumenter/db/db_client_extractor.go b/otel_pkgdep/inst-api-semconv/instrumenter/db/db_client_extractor.go
new file mode 100644
--- /dev/null	(date 1732095811429)
+++ b/otel_pkgdep/inst-api-semconv/instrumenter/db/db_client_extractor.go	(date 1732095811429)
@@ -0,0 +1,107 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package db
+
+import (
+	"context"
+	"fmt"
+	"otelbuild-demo/otel_pkgdep/inst-api/instrumenter"
+	"otelbuild-demo/otel_pkgdep/inst-api/utils"
+	"go.opentelemetry.io/otel/attribute"
+	semconv "go.opentelemetry.io/otel/semconv/v1.26.0"
+	"strconv"
+)
+
+type DbExperimentalAttributesEnabler interface {
+	Enable() bool
+}
+
+type defaultDbExperimentalAttributesEnabler struct {
+}
+
+func (d defaultDbExperimentalAttributesEnabler) Enable() bool {
+	return false
+}
+
+var experimentalAttributesEnabler = instrumenter.NewDefaultInstrumentEnabler()
+
+type DbClientCommonAttrsExtractor[REQUEST any, RESPONSE any, GETTER DbClientCommonAttrsGetter[REQUEST]] struct {
+	Getter           GETTER
+	AttributesFilter func(attrs []attribute.KeyValue) []attribute.KeyValue
+}
+
+func (d *DbClientCommonAttrsExtractor[REQUEST, RESPONSE, GETTER]) GetSpanKey() attribute.Key {
+	return utils.DB_CLIENT_KEY
+}
+
+func (d *DbClientCommonAttrsExtractor[REQUEST, RESPONSE, GETTER]) OnStart(attributes []attribute.KeyValue, parentContext context.Context, request REQUEST) ([]attribute.KeyValue, context.Context) {
+	return attributes, parentContext
+}
+
+func (d *DbClientCommonAttrsExtractor[REQUEST, RESPONSE, GETTER]) OnEnd(attrs []attribute.KeyValue, context context.Context, request REQUEST, response RESPONSE, err error) ([]attribute.KeyValue, context.Context) {
+	attrs = append(attrs, attribute.KeyValue{
+		Key:   semconv.DBSystemKey,
+		Value: attribute.StringValue(d.Getter.GetSystem(request)),
+	})
+	if d.AttributesFilter != nil {
+		attrs = d.AttributesFilter(attrs)
+	}
+	return attrs, context
+}
+
+type DbClientAttrsExtractor[REQUEST any, RESPONSE any, GETTER DbClientAttrsGetter[REQUEST]] struct {
+	Base DbClientCommonAttrsExtractor[REQUEST, RESPONSE, GETTER]
+}
+
+func (d *DbClientAttrsExtractor[REQUEST, RESPONSE, GETTER]) OnStart(attrs []attribute.KeyValue, parentContext context.Context, request REQUEST) ([]attribute.KeyValue, context.Context) {
+	attrs, parentContext = d.Base.OnStart(attrs, parentContext, request)
+	if d.Base.AttributesFilter != nil {
+		attrs = d.Base.AttributesFilter(attrs)
+	}
+	return attrs, parentContext
+}
+
+func (d *DbClientAttrsExtractor[REQUEST, RESPONSE, GETTER]) OnEnd(attrs []attribute.KeyValue, context context.Context, request REQUEST, response RESPONSE, err error) ([]attribute.KeyValue, context.Context) {
+	attrs, context = d.Base.OnEnd(attrs, context, request, response, err)
+	attrs = append(attrs, attribute.KeyValue{
+		Key:   semconv.DBQueryTextKey,
+		Value: attribute.StringValue(d.Base.Getter.GetStatement(request)),
+	}, attribute.KeyValue{
+		Key:   semconv.DBOperationNameKey,
+		Value: attribute.StringValue(d.Base.Getter.GetOperation(request)),
+	}, attribute.KeyValue{
+		Key:   semconv.ServerAddressKey,
+		Value: attribute.StringValue(d.Base.Getter.GetServerAddress(request)),
+	})
+	if d.Base.AttributesFilter != nil {
+		attrs = d.Base.AttributesFilter(attrs)
+	}
+	if experimentalAttributesEnabler.Enable() {
+		params := d.Base.Getter.GetParameters(request)
+		if params != nil && len(params) > 0 {
+			for i, param := range params {
+				attrs = append(attrs, attribute.String("db.query.parameter."+strconv.Itoa(i), fmt.Sprintf("%v", param)))
+			}
+		}
+	}
+	return attrs, context
+}
+
+func (d *DbClientAttrsExtractor[REQUEST, RESPONSE, GETTER]) GetSpanKey() attribute.Key {
+	return utils.DB_CLIENT_KEY
+}
+
+// TODO: sanitize sql
+// TODO: request size & response size
Index: otel_pkgdep/inst-api-semconv/instrumenter/net/network_attrs_extractor.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api-semconv/instrumenter/net/network_attrs_extractor.go b/otel_pkgdep/inst-api-semconv/instrumenter/net/network_attrs_extractor.go
new file mode 100644
--- /dev/null	(date 1732095811432)
+++ b/otel_pkgdep/inst-api-semconv/instrumenter/net/network_attrs_extractor.go	(date 1732095811432)
@@ -0,0 +1,90 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package net
+
+import (
+	"context"
+	"go.opentelemetry.io/otel/attribute"
+	semconv "go.opentelemetry.io/otel/semconv/v1.26.0"
+	"strings"
+)
+
+type NetworkAttrsExtractor[REQUEST any, RESPONSE any, GETTER NetworkAttrsGetter[REQUEST, RESPONSE]] struct {
+	Getter GETTER
+}
+
+func (i *NetworkAttrsExtractor[REQUEST, RESPONSE, GETTER]) OnStart(attributes []attribute.KeyValue, parentContext context.Context, request REQUEST) ([]attribute.KeyValue, context.Context) {
+	return attributes, parentContext
+}
+
+func (i *NetworkAttrsExtractor[REQUEST, RESPONSE, GETTER]) OnEnd(attributes []attribute.KeyValue, context context.Context, request REQUEST, response RESPONSE, err error) ([]attribute.KeyValue, context.Context) {
+	attributes = append(attributes, attribute.KeyValue{
+		Key:   semconv.NetworkTransportKey,
+		Value: attribute.StringValue(i.Getter.GetNetworkTransport(request, response)),
+	}, attribute.KeyValue{
+		Key:   semconv.NetworkTypeKey,
+		Value: attribute.StringValue(strings.ToLower(i.Getter.GetNetworkType(request, response))),
+	}, attribute.KeyValue{
+		Key:   semconv.NetworkProtocolNameKey,
+		Value: attribute.StringValue(strings.ToLower(i.Getter.GetNetworkProtocolName(request, response))),
+	}, attribute.KeyValue{
+		Key:   semconv.NetworkProtocolVersionKey,
+		Value: attribute.StringValue(strings.ToLower(i.Getter.GetNetworkProtocolVersion(request, response))),
+	}, attribute.KeyValue{
+		Key:   semconv.NetworkLocalAddressKey,
+		Value: attribute.StringValue(i.Getter.GetNetworkLocalInetAddress(request, response)),
+	}, attribute.KeyValue{
+		Key:   semconv.NetworkPeerAddressKey,
+		Value: attribute.StringValue(i.Getter.GetNetworkPeerInetAddress(request, response)),
+	})
+	localPort := i.Getter.GetNetworkLocalPort(request, response)
+	if localPort > 0 {
+		attributes = append(attributes, attribute.KeyValue{
+			Key:   semconv.NetworkLocalPortKey,
+			Value: attribute.IntValue(localPort),
+		})
+	}
+	peerPort := i.Getter.GetNetworkPeerPort(request, response)
+	if peerPort > 0 {
+		attributes = append(attributes, attribute.KeyValue{
+			Key:   semconv.NetworkPeerPortKey,
+			Value: attribute.IntValue(peerPort),
+		})
+	}
+	return attributes, context
+}
+
+type UrlAttrsExtractor[REQUEST any, RESPONSE any, GETTER UrlAttrsGetter[REQUEST]] struct {
+	Getter GETTER
+	// TODO: add scheme provider for extension
+}
+
+func (u *UrlAttrsExtractor[REQUEST, RESPONSE, GETTER]) OnStart(attributes []attribute.KeyValue, parentContext context.Context, request REQUEST) ([]attribute.KeyValue, context.Context) {
+	attributes = append(attributes, attribute.KeyValue{
+		Key:   semconv.URLSchemeKey,
+		Value: attribute.StringValue(u.Getter.GetUrlScheme(request)),
+	}, attribute.KeyValue{
+		Key:   semconv.URLPathKey,
+		Value: attribute.StringValue(u.Getter.GetUrlPath(request)),
+	}, attribute.KeyValue{
+		Key:   semconv.URLQueryKey,
+		Value: attribute.StringValue(u.Getter.GetUrlQuery(request)),
+	})
+	return attributes, parentContext
+}
+
+func (u *UrlAttrsExtractor[REQUEST, RESPONSE, GETTER]) OnEnd(attributes []attribute.KeyValue, context context.Context, request REQUEST, response RESPONSE, err error) ([]attribute.KeyValue, context.Context) {
+	return attributes, context
+}
Index: otel_pkgdep/inst-api-semconv/instrumenter/net/network_attrs_getter.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api-semconv/instrumenter/net/network_attrs_getter.go b/otel_pkgdep/inst-api-semconv/instrumenter/net/network_attrs_getter.go
new file mode 100644
--- /dev/null	(date 1732095811433)
+++ b/otel_pkgdep/inst-api-semconv/instrumenter/net/network_attrs_getter.go	(date 1732095811433)
@@ -0,0 +1,32 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package net
+
+type NetworkAttrsGetter[REQUEST any, RESPONSE any] interface {
+	GetNetworkType(request REQUEST, response RESPONSE) string
+	GetNetworkTransport(request REQUEST, response RESPONSE) string
+	GetNetworkProtocolName(request REQUEST, response RESPONSE) string
+	GetNetworkProtocolVersion(request REQUEST, response RESPONSE) string
+	GetNetworkLocalInetAddress(request REQUEST, response RESPONSE) string
+	GetNetworkLocalPort(request REQUEST, response RESPONSE) int
+	GetNetworkPeerInetAddress(request REQUEST, response RESPONSE) string
+	GetNetworkPeerPort(request REQUEST, response RESPONSE) int
+}
+
+type UrlAttrsGetter[REQUEST any] interface {
+	GetUrlScheme(request REQUEST) string
+	GetUrlPath(request REQUEST) string
+	GetUrlQuery(request REQUEST) string
+}
Index: otel_pkgdep/inst-api-semconv/instrumenter/db/db_span_name_extractor.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api-semconv/instrumenter/db/db_span_name_extractor.go b/otel_pkgdep/inst-api-semconv/instrumenter/db/db_span_name_extractor.go
new file mode 100644
--- /dev/null	(date 1732095811429)
+++ b/otel_pkgdep/inst-api-semconv/instrumenter/db/db_span_name_extractor.go	(date 1732095811429)
@@ -0,0 +1,27 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package db
+
+type DBSpanNameExtractor[REQUEST any] struct {
+	Getter DbClientAttrsGetter[REQUEST]
+}
+
+func (d *DBSpanNameExtractor[REQUEST]) Extract(request REQUEST) string {
+	operation := d.Getter.GetOperation(request)
+	if operation == "" {
+		return "DB Query"
+	}
+	return operation
+}
Index: otel_pkgdep/inst-api-semconv/instrumenter/db/db_client_getter.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api-semconv/instrumenter/db/db_client_getter.go b/otel_pkgdep/inst-api-semconv/instrumenter/db/db_client_getter.go
new file mode 100644
--- /dev/null	(date 1732095811429)
+++ b/otel_pkgdep/inst-api-semconv/instrumenter/db/db_client_getter.go	(date 1732095811429)
@@ -0,0 +1,32 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package db
+
+type DbClientCommonAttrsGetter[REQUEST any] interface {
+	GetSystem(REQUEST) string
+	GetServerAddress(REQUEST) string
+}
+
+type DbClientAttrsGetter[REQUEST any] interface {
+	DbClientCommonAttrsGetter[REQUEST]
+	GetStatement(REQUEST) string
+	GetOperation(REQUEST) string
+	GetParameters(REQUEST) []any
+}
+
+type SqlClientAttributesGetter[REQUEST any] interface {
+	DbClientCommonAttrsGetter[REQUEST]
+	GetRawStatement(REQUEST) string
+}
Index: otel_pkgdep/inst-api-semconv/instrumenter/http/http_metrics.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api-semconv/instrumenter/http/http_metrics.go b/otel_pkgdep/inst-api-semconv/instrumenter/http/http_metrics.go
new file mode 100644
--- /dev/null	(date 1732095811430)
+++ b/otel_pkgdep/inst-api-semconv/instrumenter/http/http_metrics.go	(date 1732095811430)
@@ -0,0 +1,242 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package http
+
+import (
+	"context"
+	"errors"
+	"fmt"
+	"otelbuild-demo/otel_pkgdep/core/meter"
+	"go.opentelemetry.io/otel/attribute"
+	"go.opentelemetry.io/otel/metric"
+	semconv "go.opentelemetry.io/otel/semconv/v1.26.0"
+	"log"
+	"sync"
+	"time"
+)
+
+const http_server_request_duration = "http.server.request.duration"
+
+const http_client_request_duration = "http.client.request.duration"
+
+type HttpServerMetric struct {
+	key                   attribute.Key
+	serverRequestDuration metric.Float64Histogram
+}
+
+type HttpClientMetric struct {
+	key                   attribute.Key
+	clientRequestDuration metric.Float64Histogram
+}
+
+var mu sync.Mutex
+var httpServerOperationListener *HttpServerMetric
+var httpClientOperationListener *HttpClientMetric
+var shadower = httpMetricAttributesShadower{}
+
+var httpMetricsConv = map[attribute.Key]bool{
+	semconv.HTTPRequestMethodKey:      true,
+	semconv.URLSchemeKey:              true,
+	semconv.ErrorTypeKey:              true,
+	semconv.HTTPResponseStatusCodeKey: true,
+	semconv.HTTPRouteKey:              true,
+	semconv.NetworkProtocolNameKey:    true,
+	semconv.NetworkProtocolVersionKey: true,
+	semconv.ServerAddressKey:          true,
+	semconv.ServerPortKey:             true,
+}
+
+// InitHttpMetrics TODO: The init function may be executed after the HttpServerOperationListener() method
+// so we need to make sure the otel_setup is executed before all the init() function
+// related to issue https://github.com/antgan-0226/opentelemetry-go-auto-instrumentation/issues/48
+func InitHttpMetrics(meter metric.Meter) {
+	var err error
+	httpServerOperationListener, err = newHttpServerMetric("net.http.server", meter)
+	if err != nil {
+		panic(err)
+	}
+	httpClientOperationListener, err = newHttpClientMetric("net.http.client", meter)
+	if err != nil {
+		panic(err)
+	}
+}
+
+func HttpServerMetrics() *HttpServerMetric {
+	mu.Lock()
+	defer mu.Unlock()
+	if httpServerOperationListener != nil {
+		return httpServerOperationListener
+	} else {
+		return &HttpServerMetric{}
+	}
+}
+
+func HttpClientMetrics() *HttpClientMetric {
+	mu.Lock()
+	defer mu.Unlock()
+	if httpClientOperationListener != nil {
+		return httpClientOperationListener
+	} else {
+		return &HttpClientMetric{}
+	}
+}
+
+func newHttpServerMetric(key string, meter metric.Meter) (*HttpServerMetric, error) {
+	m := &HttpServerMetric{
+		key: attribute.Key(key),
+	}
+	d, err := newHttpServerRequestDurationMeasures(meter)
+	if err != nil {
+		return nil, err
+	}
+	m.serverRequestDuration = d
+	return m, nil
+}
+
+func newHttpServerRequestDurationMeasures(meter metric.Meter) (metric.Float64Histogram, error) {
+	mu.Lock()
+	defer mu.Unlock()
+	if meter == nil {
+		return nil, errors.New("nil meter")
+	}
+	d, err := meter.Float64Histogram(http_server_request_duration,
+		metric.WithUnit("ms"),
+		metric.WithDescription("Duration of HTTP server requests."))
+	if err == nil {
+		return d, nil
+	} else {
+		return d, errors.New(fmt.Sprintf("failed to create http.server.request.duratio histogram, %v", err))
+	}
+}
+
+func newHttpClientMetric(key string, meter metric.Meter) (*HttpClientMetric, error) {
+	m := &HttpClientMetric{
+		key: attribute.Key(key),
+	}
+	d, err := newHttpClientRequestDurationMeasures(meter)
+	if err != nil {
+		return nil, err
+	}
+	m.clientRequestDuration = d
+	return m, nil
+}
+
+func newHttpClientRequestDurationMeasures(meter metric.Meter) (metric.Float64Histogram, error) {
+	mu.Lock()
+	defer mu.Unlock()
+	if meter == nil {
+		return nil, errors.New("nil meter")
+	}
+	d, err := meter.Float64Histogram(http_client_request_duration,
+		metric.WithUnit("ms"),
+		metric.WithDescription("Duration of HTTP client requests."))
+	if err == nil {
+		return d, nil
+	} else {
+		return d, errors.New(fmt.Sprintf("failed to create http.client.request.duratio histogram, %v", err))
+	}
+}
+
+type httpMetricContext struct {
+	startTime       time.Time
+	startAttributes []attribute.KeyValue
+}
+
+func (h *HttpServerMetric) OnBeforeStart(parentContext context.Context, startTime time.Time) context.Context {
+	return parentContext
+}
+
+func (h *HttpServerMetric) OnBeforeEnd(ctx context.Context, startAttributes []attribute.KeyValue, startTime time.Time) context.Context {
+	return context.WithValue(ctx, h.key, httpMetricContext{
+		startTime:       startTime,
+		startAttributes: startAttributes,
+	})
+}
+
+func (h *HttpServerMetric) OnAfterStart(context context.Context, endTime time.Time) {
+	return
+}
+
+func (h *HttpServerMetric) OnAfterEnd(context context.Context, endAttributes []attribute.KeyValue, endTime time.Time) {
+	mc := context.Value(h.key).(httpMetricContext)
+	startTime, startAttributes := mc.startTime, mc.startAttributes
+	// end attributes should be shadowed by AttrsShadower
+	if h.serverRequestDuration == nil {
+		var err error
+		h.serverRequestDuration, err = newHttpServerRequestDurationMeasures(meter.GetMeter())
+		if err != nil {
+			log.Printf("failed to create serverRequestDuration, err is %v\n", err)
+		}
+	}
+	endAttributes = append(endAttributes, startAttributes...)
+	n, metricsAttrs := shadower.Shadow(endAttributes)
+	if h.serverRequestDuration != nil {
+		h.serverRequestDuration.Record(context, float64(endTime.Sub(startTime)), metric.WithAttributeSet(attribute.NewSet(metricsAttrs[0:n]...)))
+	}
+}
+
+func (h HttpClientMetric) OnBeforeStart(parentContext context.Context, startTime time.Time) context.Context {
+	return parentContext
+}
+
+func (h HttpClientMetric) OnBeforeEnd(ctx context.Context, startAttributes []attribute.KeyValue, startTime time.Time) context.Context {
+	return context.WithValue(ctx, h.key, httpMetricContext{
+		startTime:       startTime,
+		startAttributes: startAttributes,
+	})
+}
+
+func (h HttpClientMetric) OnAfterStart(context context.Context, endTime time.Time) {
+	return
+}
+
+func (h HttpClientMetric) OnAfterEnd(context context.Context, endAttributes []attribute.KeyValue, endTime time.Time) {
+	mc := context.Value(h.key).(httpMetricContext)
+	startTime, startAttributes := mc.startTime, mc.startAttributes
+	// end attributes should be shadowed by AttrsShadower
+	if h.clientRequestDuration == nil {
+		var err error
+		// second change to init the metric
+		h.clientRequestDuration, err = newHttpClientRequestDurationMeasures(meter.GetMeter())
+		if err != nil {
+			log.Printf("failed to create clientRequestDuration, err is %v\n", err)
+		}
+	}
+	endAttributes = append(endAttributes, startAttributes...)
+	n, metricsAttrs := shadower.Shadow(endAttributes)
+	if h.clientRequestDuration != nil {
+		h.clientRequestDuration.Record(context, float64(endTime.Sub(startTime)), metric.WithAttributeSet(attribute.NewSet(metricsAttrs[0:n]...)))
+	}
+}
+
+type httpMetricAttributesShadower struct{}
+
+func (h httpMetricAttributesShadower) Shadow(attrs []attribute.KeyValue) (int, []attribute.KeyValue) {
+	swap := func(attrs []attribute.KeyValue, i, j int) {
+		tmp := attrs[i]
+		attrs[i] = attrs[j]
+		attrs[j] = tmp
+	}
+	index := 0
+	for i, attr := range attrs {
+		if _, ok := httpMetricsConv[attr.Key]; ok {
+			if index != i {
+				swap(attrs, i, index)
+			}
+			index++
+		}
+	}
+	return index, attrs
+}
Index: otel_pkgdep/inst-api-semconv/instrumenter/rpc/rpc_span_name_extractor.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api-semconv/instrumenter/rpc/rpc_span_name_extractor.go b/otel_pkgdep/inst-api-semconv/instrumenter/rpc/rpc_span_name_extractor.go
new file mode 100644
--- /dev/null	(date 1732095811434)
+++ b/otel_pkgdep/inst-api-semconv/instrumenter/rpc/rpc_span_name_extractor.go	(date 1732095811434)
@@ -0,0 +1,28 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package rpc
+
+type RpcSpanNameExtractor[REQUEST any] struct {
+	Getter RpcAttrsGetter[REQUEST]
+}
+
+func (r *RpcSpanNameExtractor[REQUEST]) Extract(request REQUEST) string {
+	service := r.Getter.GetService(request)
+	method := r.Getter.GetMethod(request)
+	if service == "" || method == "" {
+		return "RPC request"
+	}
+	return service + "/" + method
+}
Index: otel_pkgdep/inst-api-semconv/instrumenter/rpc/rpc_attrs_getter.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api-semconv/instrumenter/rpc/rpc_attrs_getter.go b/otel_pkgdep/inst-api-semconv/instrumenter/rpc/rpc_attrs_getter.go
new file mode 100644
--- /dev/null	(date 1732095811433)
+++ b/otel_pkgdep/inst-api-semconv/instrumenter/rpc/rpc_attrs_getter.go	(date 1732095811433)
@@ -0,0 +1,21 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package rpc
+
+type RpcAttrsGetter[REQUEST any] interface {
+	GetSystem(request REQUEST) string
+	GetService(request REQUEST) string
+	GetMethod(request REQUEST) string
+}
Index: otel_pkgdep/inst-api-semconv/instrumenter/rpc/rpc_attrs_extractor.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api-semconv/instrumenter/rpc/rpc_attrs_extractor.go b/otel_pkgdep/inst-api-semconv/instrumenter/rpc/rpc_attrs_extractor.go
new file mode 100644
--- /dev/null	(date 1732095811433)
+++ b/otel_pkgdep/inst-api-semconv/instrumenter/rpc/rpc_attrs_extractor.go	(date 1732095811433)
@@ -0,0 +1,76 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package rpc
+
+import (
+	"context"
+	"otelbuild-demo/otel_pkgdep/inst-api/utils"
+	"go.opentelemetry.io/otel/attribute"
+	semconv "go.opentelemetry.io/otel/semconv/v1.26.0"
+)
+
+type RpcAttrsExtractor[REQUEST any, RESPONSE any, GETTER RpcAttrsGetter[REQUEST]] struct {
+	Getter GETTER
+}
+
+func (r *RpcAttrsExtractor[REQUEST, RESPONSE, GETTER]) OnStart(attributes []attribute.KeyValue, parentContext context.Context, request REQUEST) ([]attribute.KeyValue, context.Context) {
+	attributes = append(attributes, attribute.KeyValue{
+		Key:   semconv.RPCSystemKey,
+		Value: attribute.StringValue(r.Getter.GetSystem(request)),
+	}, attribute.KeyValue{
+		Key:   semconv.RPCServiceKey,
+		Value: attribute.StringValue(r.Getter.GetService(request)),
+	}, attribute.KeyValue{
+		Key:   semconv.RPCMethodKey,
+		Value: attribute.StringValue(r.Getter.GetMethod(request)),
+	})
+	return attributes, parentContext
+}
+
+func (r *RpcAttrsExtractor[REQUEST, RESPONSE, GETTER]) OnEnd(attributes []attribute.KeyValue, context context.Context, request REQUEST, response RESPONSE, err error) ([]attribute.KeyValue, context.Context) {
+	return attributes, context
+}
+
+type ServerRpcAttrsExtractor[REQUEST any, RESPONSE any, GETTER RpcAttrsGetter[REQUEST]] struct {
+	Base RpcAttrsExtractor[REQUEST, RESPONSE, GETTER]
+}
+
+func (s *ServerRpcAttrsExtractor[REQUEST, RESPONSE, GETTER]) GetSpanKey() attribute.Key {
+	return utils.RPC_SERVER_KEY
+}
+
+func (s *ServerRpcAttrsExtractor[REQUEST, RESPONSE, GETTER]) OnStart(attributes []attribute.KeyValue, parentContext context.Context, request REQUEST) ([]attribute.KeyValue, context.Context) {
+	return s.Base.OnStart(attributes, parentContext, request)
+}
+
+func (s *ServerRpcAttrsExtractor[REQUEST, RESPONSE, GETTER]) OnEnd(attributes []attribute.KeyValue, context context.Context, request REQUEST, response RESPONSE, err error) ([]attribute.KeyValue, context.Context) {
+	return s.Base.OnEnd(attributes, context, request, response, err)
+}
+
+type ClientRpcAttrsExtractor[REQUEST any, RESPONSE any, GETTER RpcAttrsGetter[REQUEST]] struct {
+	Base RpcAttrsExtractor[REQUEST, RESPONSE, GETTER]
+}
+
+func (s *ClientRpcAttrsExtractor[REQUEST, RESPONSE, GETTER]) GetSpanKey() attribute.Key {
+	return utils.RPC_CLIENT_KEY
+}
+
+func (s *ClientRpcAttrsExtractor[REQUEST, RESPONSE, GETTER]) OnStart(attributes []attribute.KeyValue, parentContext context.Context, request REQUEST) ([]attribute.KeyValue, context.Context) {
+	return s.Base.OnStart(attributes, parentContext, request)
+}
+
+func (s *ClientRpcAttrsExtractor[REQUEST, RESPONSE, GETTER]) OnEnd(attributes []attribute.KeyValue, context context.Context, request REQUEST, response RESPONSE, err error) ([]attribute.KeyValue, context.Context) {
+	return s.Base.OnEnd(attributes, context, request, response, err)
+}
Index: otel_pkgdep/inst-api-semconv/instrumenter/http/http_span_name_extractor.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api-semconv/instrumenter/http/http_span_name_extractor.go b/otel_pkgdep/inst-api-semconv/instrumenter/http/http_span_name_extractor.go
new file mode 100644
--- /dev/null	(date 1732095811431)
+++ b/otel_pkgdep/inst-api-semconv/instrumenter/http/http_span_name_extractor.go	(date 1732095811431)
@@ -0,0 +1,43 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package http
+
+type HttpClientSpanNameExtractor[REQUEST any, RESPONSE any] struct {
+	Getter HttpClientAttrsGetter[REQUEST, RESPONSE]
+}
+
+func (h *HttpClientSpanNameExtractor[REQUEST, RESPONSE]) Extract(request REQUEST) string {
+	method := h.Getter.GetRequestMethod(request)
+	if method == "" {
+		return "HTTP"
+	}
+	return method
+}
+
+type HttpServerSpanNameExtractor[REQUEST any, RESPONSE any] struct {
+	Getter HttpServerAttrsGetter[REQUEST, RESPONSE]
+}
+
+func (h *HttpServerSpanNameExtractor[REQUEST, RESPONSE]) Extract(request REQUEST) string {
+	method := h.Getter.GetRequestMethod(request)
+	route := h.Getter.GetHttpRoute(request)
+	if method == "" {
+		return "HTTP"
+	}
+	if route == "" {
+		return method
+	}
+	return method + " " + route
+}
Index: otel_pkgdep/inst-api-semconv/instrumenter/http/http_attrs_getter.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api-semconv/instrumenter/http/http_attrs_getter.go b/otel_pkgdep/inst-api-semconv/instrumenter/http/http_attrs_getter.go
new file mode 100644
--- /dev/null	(date 1732095811430)
+++ b/otel_pkgdep/inst-api-semconv/instrumenter/http/http_attrs_getter.go	(date 1732095811430)
@@ -0,0 +1,43 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package http
+
+import "otelbuild-demo/otel_pkgdep/inst-api-semconv/instrumenter/net"
+
+type HttpCommonAttrsGetter[REQUEST any, RESPONSE any] interface {
+	GetRequestMethod(request REQUEST) string
+	GetHttpRequestHeader(request REQUEST, name string) []string
+	GetHttpResponseStatusCode(request REQUEST, response RESPONSE, err error) int
+	GetHttpResponseHeader(request REQUEST, response RESPONSE, name string) []string
+	GetErrorType(request REQUEST, response RESPONSE, err error) string
+}
+
+type HttpServerAttrsGetter[REQUEST any, RESPONSE any] interface {
+	HttpCommonAttrsGetter[REQUEST, RESPONSE]
+	net.UrlAttrsGetter[REQUEST]
+	net.NetworkAttrsGetter[REQUEST, RESPONSE]
+	GetUrlScheme(request REQUEST) string
+	GetUrlPath(request REQUEST) string
+	GetUrlQuery(request REQUEST) string
+	GetHttpRoute(request REQUEST) string
+}
+
+type HttpClientAttrsGetter[REQUEST any, RESPONSE any] interface {
+	HttpCommonAttrsGetter[REQUEST, RESPONSE]
+	net.NetworkAttrsGetter[REQUEST, RESPONSE]
+	GetUrlFull(request REQUEST) string
+	GetServerAddress(request REQUEST) string
+	GetServerPort(request REQUEST) int
+}
Index: otel_pkgdep/inst-api-semconv/instrumenter/http/http_attrs_extractor.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api-semconv/instrumenter/http/http_attrs_extractor.go b/otel_pkgdep/inst-api-semconv/instrumenter/http/http_attrs_extractor.go
new file mode 100644
--- /dev/null	(date 1732095811430)
+++ b/otel_pkgdep/inst-api-semconv/instrumenter/http/http_attrs_extractor.go	(date 1732095811430)
@@ -0,0 +1,141 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package http
+
+import (
+	"context"
+	"otelbuild-demo/otel_pkgdep/inst-api-semconv/instrumenter/net"
+	"go.opentelemetry.io/otel/attribute"
+	sdktrace "go.opentelemetry.io/otel/sdk/trace"
+	semconv "go.opentelemetry.io/otel/semconv/v1.26.0"
+	"go.opentelemetry.io/otel/trace"
+	"strings"
+)
+
+// TODO: http.route
+
+type HttpCommonAttrsExtractor[REQUEST any, RESPONSE any, GETTER1 HttpCommonAttrsGetter[REQUEST, RESPONSE], GETTER2 net.NetworkAttrsGetter[REQUEST, RESPONSE]] struct {
+	HttpGetter       GETTER1
+	NetGetter        GETTER2
+	AttributesFilter func(attrs []attribute.KeyValue) []attribute.KeyValue
+}
+
+func (h *HttpCommonAttrsExtractor[REQUEST, RESPONSE, GETTER1, GETTER2]) OnStart(attributes []attribute.KeyValue, parentContext context.Context, request REQUEST) ([]attribute.KeyValue, context.Context) {
+	attributes = append(attributes, attribute.KeyValue{
+		Key:   semconv.HTTPRequestMethodKey,
+		Value: attribute.StringValue(h.HttpGetter.GetRequestMethod(request)),
+	})
+	return attributes, parentContext
+}
+
+func (h *HttpCommonAttrsExtractor[REQUEST, RESPONSE, GETTER, GETTER2]) OnEnd(attributes []attribute.KeyValue, context context.Context, request REQUEST, response RESPONSE, err error) ([]attribute.KeyValue, context.Context) {
+	statusCode := h.HttpGetter.GetHttpResponseStatusCode(request, response, err)
+	protocolName := h.NetGetter.GetNetworkProtocolName(request, response)
+	protocolVersion := h.NetGetter.GetNetworkProtocolVersion(request, response)
+	attributes = append(attributes, attribute.KeyValue{
+		Key:   semconv.HTTPResponseStatusCodeKey,
+		Value: attribute.IntValue(statusCode),
+	}, attribute.KeyValue{
+		Key:   semconv.NetworkProtocolNameKey,
+		Value: attribute.StringValue(protocolName),
+	}, attribute.KeyValue{
+		Key:   semconv.NetworkProtocolVersionKey,
+		Value: attribute.StringValue(protocolVersion),
+	})
+	return attributes, context
+}
+
+type HttpClientAttrsExtractor[REQUEST any, RESPONSE any, GETTER1 HttpClientAttrsGetter[REQUEST, RESPONSE], GETTER2 net.NetworkAttrsGetter[REQUEST, RESPONSE]] struct {
+	Base             HttpCommonAttrsExtractor[REQUEST, RESPONSE, GETTER1, GETTER2]
+	NetworkExtractor net.NetworkAttrsExtractor[REQUEST, RESPONSE, GETTER2]
+}
+
+func (h *HttpClientAttrsExtractor[REQUEST, RESPONSE, GETTER1, GETTER2]) OnStart(attributes []attribute.KeyValue, parentContext context.Context, request REQUEST) ([]attribute.KeyValue, context.Context) {
+	attributes, parentContext = h.Base.OnStart(attributes, parentContext, request)
+	attributes, parentContext = h.NetworkExtractor.OnStart(attributes, parentContext, request)
+	fullUrl := h.Base.HttpGetter.GetUrlFull(request)
+	// TODO: add resend count
+	attributes = append(attributes, attribute.KeyValue{
+		Key:   semconv.URLFullKey,
+		Value: attribute.StringValue(fullUrl),
+	}, attribute.KeyValue{
+		Key:   semconv.ServerAddressKey,
+		Value: attribute.StringValue(h.Base.HttpGetter.GetServerAddress(request)),
+	}, attribute.KeyValue{
+		Key:   semconv.ServerPortKey,
+		Value: attribute.IntValue(h.Base.HttpGetter.GetServerPort(request)),
+	})
+	if h.Base.AttributesFilter != nil {
+		attributes = h.Base.AttributesFilter(attributes)
+	}
+	return attributes, parentContext
+}
+
+func (h *HttpClientAttrsExtractor[REQUEST, RESPONSE, GETTER1, GETTER2]) OnEnd(attributes []attribute.KeyValue, context context.Context, request REQUEST, response RESPONSE, err error) ([]attribute.KeyValue, context.Context) {
+	attributes, context = h.Base.OnEnd(attributes, context, request, response, err)
+	attributes, context = h.NetworkExtractor.OnEnd(attributes, context, request, response, err)
+	if h.Base.AttributesFilter != nil {
+		attributes = h.Base.AttributesFilter(attributes)
+	}
+	return attributes, context
+}
+
+type HttpServerAttrsExtractor[REQUEST any, RESPONSE any, GETTER1 HttpServerAttrsGetter[REQUEST, RESPONSE], GETTER2 net.NetworkAttrsGetter[REQUEST, RESPONSE], GETTER3 net.UrlAttrsGetter[REQUEST]] struct {
+	Base             HttpCommonAttrsExtractor[REQUEST, RESPONSE, GETTER1, GETTER2]
+	NetworkExtractor net.NetworkAttrsExtractor[REQUEST, RESPONSE, GETTER2]
+	UrlExtractor     net.UrlAttrsExtractor[REQUEST, RESPONSE, GETTER3]
+}
+
+func (h *HttpServerAttrsExtractor[REQUEST, RESPONSE, GETTER1, GETTER2, GETTER3]) OnStart(attributes []attribute.KeyValue, parentContext context.Context, request REQUEST) ([]attribute.KeyValue, context.Context) {
+	attributes, parentContext = h.Base.OnStart(attributes, parentContext, request)
+	attributes, parentContext = h.UrlExtractor.OnStart(attributes, parentContext, request)
+	userAgent := h.Base.HttpGetter.GetHttpRequestHeader(request, "User-Agent")
+	var firstUserAgent string
+	if len(userAgent) > 0 {
+		firstUserAgent = userAgent[0]
+	} else {
+		firstUserAgent = ""
+	}
+	attributes = append(attributes, attribute.KeyValue{
+		Key:   semconv.UserAgentOriginalKey,
+		Value: attribute.StringValue(firstUserAgent),
+	})
+	if h.Base.AttributesFilter != nil {
+		attributes = h.Base.AttributesFilter(attributes)
+	}
+	return attributes, parentContext
+}
+
+func (h *HttpServerAttrsExtractor[REQUEST, RESPONSE, GETTER1, GETTER2, GETTER3]) OnEnd(attributes []attribute.KeyValue, context context.Context, request REQUEST, response RESPONSE, err error) ([]attribute.KeyValue, context.Context) {
+	attributes, context = h.Base.OnEnd(attributes, context, request, response, err)
+	attributes, context = h.UrlExtractor.OnEnd(attributes, context, request, response, err)
+	attributes, context = h.NetworkExtractor.OnEnd(attributes, context, request, response, err)
+	span := trace.SpanFromContext(context)
+	localRootSpan, ok := span.(sdktrace.ReadOnlySpan)
+	if ok {
+		route := h.Base.HttpGetter.GetHttpRoute(request)
+		if !strings.Contains(localRootSpan.Name(), route) {
+			route = localRootSpan.Name()
+		}
+		attributes = append(attributes, attribute.KeyValue{
+			Key:   semconv.HTTPRouteKey,
+			Value: attribute.StringValue(route),
+		})
+	}
+	if h.Base.AttributesFilter != nil {
+		attributes = h.Base.AttributesFilter(attributes)
+	}
+	return attributes, context
+}
Index: otel_pkgdep/inst-api-semconv/instrumenter/http/http_status_code_extractor.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api-semconv/instrumenter/http/http_status_code_extractor.go b/otel_pkgdep/inst-api-semconv/instrumenter/http/http_status_code_extractor.go
new file mode 100644
--- /dev/null	(date 1732095811431)
+++ b/otel_pkgdep/inst-api-semconv/instrumenter/http/http_status_code_extractor.go	(date 1732095811431)
@@ -0,0 +1,54 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package http
+
+import (
+	"go.opentelemetry.io/otel/codes"
+	"go.opentelemetry.io/otel/trace"
+)
+
+const invalidHttpStatusCode = "INVALID_HTTP_STATUS_CODE"
+
+type HttpClientSpanStatusExtractor[REQUEST any, RESPONSE any] struct {
+	Getter HttpCommonAttrsGetter[REQUEST, RESPONSE]
+}
+
+func (h HttpClientSpanStatusExtractor[REQUEST, RESPONSE]) Extract(span trace.Span, request REQUEST, response RESPONSE, err error) {
+	statusCode := h.Getter.GetHttpResponseStatusCode(request, response, err)
+	if statusCode >= 400 || statusCode < 100 {
+		if err != nil {
+			span.RecordError(err)
+			span.SetStatus(codes.Error, err.Error())
+		} else {
+			span.SetStatus(codes.Error, invalidHttpStatusCode)
+		}
+	}
+}
+
+type HttpServerSpanStatusExtractor[REQUEST any, RESPONSE any] struct {
+	Getter HttpCommonAttrsGetter[REQUEST, RESPONSE]
+}
+
+func (h HttpServerSpanStatusExtractor[REQUEST, RESPONSE]) Extract(span trace.Span, request REQUEST, response RESPONSE, err error) {
+	statusCode := h.Getter.GetHttpResponseStatusCode(request, response, err)
+	if statusCode >= 500 || statusCode < 100 {
+		if err != nil {
+			span.RecordError(err)
+			span.SetStatus(codes.Error, err.Error())
+		} else {
+			span.SetStatus(codes.Error, invalidHttpStatusCode)
+		}
+	}
+}
Index: otel_pkgdep/inst-api-semconv/instrumenter/message/message_span_name_extractor.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api-semconv/instrumenter/message/message_span_name_extractor.go b/otel_pkgdep/inst-api-semconv/instrumenter/message/message_span_name_extractor.go
new file mode 100644
--- /dev/null	(date 1732095811432)
+++ b/otel_pkgdep/inst-api-semconv/instrumenter/message/message_span_name_extractor.go	(date 1732095811432)
@@ -0,0 +1,38 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package message
+
+const temp_destination_name = "(temporary)"
+
+type MessageSpanNameExtractor[REQUEST any, RESPONSE any] struct {
+	getter        MessageAttrsGetter[REQUEST, RESPONSE]
+	operationName MessageOperation
+}
+
+func (m *MessageSpanNameExtractor[REQUEST, RESPONSE]) Extract(request REQUEST) string {
+	destinationName := ""
+	if m.getter.IsTemporaryDestination(request) {
+		destinationName = temp_destination_name
+	} else {
+		destinationName = m.getter.GetDestination(request)
+	}
+	if destinationName == "" {
+		destinationName = "unknown"
+	}
+	if m.operationName != "" {
+		destinationName = destinationName + " " + string(m.operationName)
+	}
+	return destinationName
+}
Index: otel_pkgdep/inst-api-semconv/instrumenter/message/message_attrs_extractor.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api-semconv/instrumenter/message/message_attrs_extractor.go b/otel_pkgdep/inst-api-semconv/instrumenter/message/message_attrs_extractor.go
new file mode 100644
--- /dev/null	(date 1732095811431)
+++ b/otel_pkgdep/inst-api-semconv/instrumenter/message/message_attrs_extractor.go	(date 1732095811431)
@@ -0,0 +1,106 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package message
+
+import (
+	"context"
+	"otelbuild-demo/otel_pkgdep/inst-api/utils"
+	"go.opentelemetry.io/otel/attribute"
+	semconv "go.opentelemetry.io/otel/semconv/v1.26.0"
+)
+
+type MessageOperation string
+
+const PUBLISH MessageOperation = "publish"
+const RECEIVE MessageOperation = "receive"
+const PROCESS MessageOperation = "process"
+
+type MessageAttrsExtractor[REQUEST any, RESPONSE any, GETTER MessageAttrsGetter[REQUEST, RESPONSE]] struct {
+	getter    GETTER
+	operation MessageOperation
+}
+
+func (m *MessageAttrsExtractor[REQUEST, RESPONSE, GETTER]) GetSpanKey() attribute.Key {
+	switch m.operation {
+	case PUBLISH:
+		return utils.PRODUCER_KEY
+	case RECEIVE:
+		return utils.CONSUMER_RECEIVE_KEY
+	case PROCESS:
+		return utils.CONSUMER_PROCESS_KEY
+	}
+	panic("Operation" + m.operation + "not supported")
+}
+
+func (m *MessageAttrsExtractor[REQUEST, RESPONSE, GETTER]) OnStart(attributes []attribute.KeyValue, parentContext context.Context, request REQUEST) ([]attribute.KeyValue, context.Context) {
+	messageAttrSystem := m.getter.GetSystem(request)
+	isTemporaryDestination := m.getter.IsTemporaryDestination(request)
+	if isTemporaryDestination {
+		attributes = append(attributes, attribute.KeyValue{
+			Key:   semconv.MessagingDestinationTemporaryKey,
+			Value: attribute.BoolValue(true),
+		}, attribute.KeyValue{
+			Key:   semconv.MessagingDestinationNameKey,
+			Value: attribute.StringValue("(temporary)"),
+		})
+	} else {
+		attributes = append(attributes, attribute.KeyValue{
+			Key:   semconv.MessagingDestinationNameKey,
+			Value: attribute.StringValue(m.getter.GetDestination(request)),
+		}, attribute.KeyValue{
+			Key:   semconv.MessagingDestinationTemplateKey,
+			Value: attribute.StringValue(m.getter.GetDestinationTemplate(request)),
+		})
+	}
+	isAnonymousDestination := m.getter.isAnonymousDestination(request)
+	if isAnonymousDestination {
+		attributes = append(attributes, attribute.KeyValue{
+			Key:   semconv.MessagingDestinationAnonymousKey,
+			Value: attribute.BoolValue(true),
+		})
+	}
+	attributes = append(attributes, attribute.KeyValue{
+		Key:   semconv.MessagingMessageConversationIDKey,
+		Value: attribute.StringValue(m.getter.GetConversationId(request)),
+	}, attribute.KeyValue{
+		Key:   semconv.MessagingMessageBodySizeKey,
+		Value: attribute.Int64Value(m.getter.GetMessageBodySize(request)),
+	}, attribute.KeyValue{
+		Key:   semconv.MessagingMessageEnvelopeSizeKey,
+		Value: attribute.Int64Value(m.getter.GetMessageEnvelopSize(request)),
+	}, attribute.KeyValue{
+		Key:   semconv.MessagingClientIDKey,
+		Value: attribute.StringValue(m.getter.GetClientId(request)),
+	}, attribute.KeyValue{
+		Key:   semconv.MessagingOperationNameKey,
+		Value: attribute.StringValue(string(m.operation)),
+	}, attribute.KeyValue{
+		Key:   semconv.MessagingSystemKey,
+		Value: attribute.StringValue(messageAttrSystem),
+	})
+	return attributes, parentContext
+}
+
+func (m *MessageAttrsExtractor[REQUEST, RESPONSE, GETTER]) OnEnd(attributes []attribute.KeyValue, context context.Context, request REQUEST, response RESPONSE, err error) ([]attribute.KeyValue, context.Context) {
+	attributes = append(attributes, attribute.KeyValue{
+		Key:   semconv.MessagingMessageIDKey,
+		Value: attribute.StringValue(m.getter.GetMessageId(request, response)),
+	}, attribute.KeyValue{
+		Key:   semconv.MessagingBatchMessageCountKey,
+		Value: attribute.Int64Value(m.getter.GetBatchMessageCount(request, response)),
+	})
+	// TODO: add custom captured headers attributes
+	return attributes, context
+}
Index: otel_pkgdep/inst-api-semconv/instrumenter/message/message_attrs_getter.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_pkgdep/inst-api-semconv/instrumenter/message/message_attrs_getter.go b/otel_pkgdep/inst-api-semconv/instrumenter/message/message_attrs_getter.go
new file mode 100644
--- /dev/null	(date 1732095811432)
+++ b/otel_pkgdep/inst-api-semconv/instrumenter/message/message_attrs_getter.go	(date 1732095811432)
@@ -0,0 +1,30 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package message
+
+type MessageAttrsGetter[REQUEST any, RESPONSE any] interface {
+	GetSystem(request REQUEST) string
+	GetDestination(request REQUEST) string
+	GetDestinationTemplate(request REQUEST) string
+	IsTemporaryDestination(request REQUEST) bool
+	isAnonymousDestination(request REQUEST) bool
+	GetConversationId(request REQUEST) string
+	GetMessageBodySize(request REQUEST) int64
+	GetMessageEnvelopSize(request REQUEST) int64
+	GetMessageId(request REQUEST, response RESPONSE) string
+	GetClientId(request REQUEST) string
+	GetBatchMessageCount(request REQUEST, response RESPONSE) int64
+	GetMessageHeader(request REQUEST, name string) []string
+}
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1732096600077)
+++ b/.idea/.gitignore	(date 1732096600077)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1732096599411)
+++ b/.idea/vcs.xml	(date 1732096599411)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1732096599360)
+++ b/.idea/modules.xml	(date 1732096599360)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/otelbuild-demo.iml" filepath="$PROJECT_DIR$/.idea/otelbuild-demo.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/otelbuild-demo.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/otelbuild-demo.iml b/.idea/otelbuild-demo.iml
new file mode 100644
--- /dev/null	(date 1732096599310)
+++ b/.idea/otelbuild-demo.iml	(date 1732096599310)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="WEB_MODULE" version="4">
+  <component name="Go" enabled="true" />
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: main.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.go b/main.go
new file mode 100644
--- /dev/null	(date 1732096035301)
+++ b/main.go	(date 1732096035301)
@@ -0,0 +1,37 @@
+package main
+
+import _ "otelbuild-demo/otel_rules"
+
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc"
+import _ "go.opentelemetry.io/otel/exporters/otlp/otlptrace"
+import _ "go.opentelemetry.io/otel"
+
+import _ "go.opentelemetry.io/otel/sdk"
+
+import (
+	"context"
+	"fmt"
+	"net/http"
+	"otelbuild-demo/service"
+)
+
+func main() {
+	//测试net/http::RoundTrip的hook效果
+	req, err := http.NewRequestWithContext(context.Background(), "GET", "http://www.baidu.com", nil)
+	if err != nil {
+		panic(err)
+	}
+	req.Header.Set("otelbuild", "true")
+	client := &http.Client{}
+	resp, err := client.Do(req)
+	defer resp.Body.Close()
+
+	//测试service::CreateUser的hook效果
+	u, _ := service.CreateUser(context.Background(), 1, "test")
+
+	//model.UserModel注入了新字段age
+	fmt.Println(fmt.Sprintf("UserModel: %+v", u))
+}
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-16LE
===================================================================
diff --git a/README.md b/README.md
new file mode 100644
--- /dev/null	(date 1732096376414)
+++ b/README.md	(date 1732096376414)
@@ -0,0 +1,3 @@
+# otelbuild-demo
+
+演示demo
\ No newline at end of file
Index: config.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config.json b/config.json
new file mode 100644
--- /dev/null	(date 1732093473994)
+++ b/config.json	(date 1732093473994)
@@ -0,0 +1,23 @@
+[
+  {
+    "ImportPath":"net/http",
+    "Function":"RoundTrip",
+    "OnEnter":"httpClientEnterHook",
+    "ReceiverType": "*Transport",
+    "OnExit": "httpClientExitHook",
+    "Path": "hook/http"
+  },
+  {
+    "ImportPath":"otelbuild-demo/service",
+    "Function":"CreateUser",
+    "OnEnter":"createUserEnterHook",
+    "OnExit": "createUserExitHook",
+    "Path": "hook/service"
+  },
+  {
+    "ImportPath": "otelbuild-demo/model",
+    "StructType": "UserModel",
+    "FieldName": "Age",
+    "FieldType": "int"
+  }
+]
\ No newline at end of file
Index: go.sum
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/go.sum b/go.sum
new file mode 100644
--- /dev/null	(date 1732095815296)
+++ b/go.sum	(date 1732095815296)
@@ -0,0 +1,67 @@
+github.com/antgan-0226/opentelemetry-go-auto-instrumentation v0.5.1 h1:eGySlODbwEWbOqQUgsug6d2RniKQsvbsBxsI8cFy81A=
+github.com/antgan-0226/opentelemetry-go-auto-instrumentation v0.5.1/go.mod h1:MTJEQMbKFcoEct/tBB5Gv4ho6x6Q/E88FSvuePqcmMY=
+github.com/antgan-0226/opentelemetry-go-auto-instrumentation/test/verifier v0.0.0-20241120080835-df6534803198 h1:FmmIJwtAZYKOLPuJy4N5XAUMBCyZi98T7tcWNZuciMQ=
+github.com/antgan-0226/opentelemetry-go-auto-instrumentation/test/verifier v0.0.0-20241120080835-df6534803198/go.mod h1:qu1XZXTC05H1PhNCIpmEHw8dhGm5krb4kUMTvs8A2Os=
+github.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=
+github.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=
+github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=
+github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
+github.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=
+github.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=
+github.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=
+github.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=
+github.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=
+github.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=
+github.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=
+github.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=
+github.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=
+github.com/grpc-ecosystem/grpc-gateway/v2 v2.23.0 h1:ad0vkEBuk23VJzZR9nkLVG0YAoN9coASF1GusYX6AlU=
+github.com/grpc-ecosystem/grpc-gateway/v2 v2.23.0/go.mod h1:igFoXX2ELCW06bol23DWPB5BEWfZISOzSP5K2sbLea0=
+github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826 h1:RWengNIwukTxcDr9M+97sNutRR1RKhG96O6jWumTTnw=
+github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826/go.mod h1:TaXosZuwdSHYgviHp1DAtfrULt5eUgsSMsZf+YrPgl8=
+github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=
+github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=
+github.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=
+github.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=
+go.opentelemetry.io/contrib/instrumentation/runtime v0.56.0 h1:s7wHG+t8bEoH7ibWk1nk682h7EoWLJ5/8j+TSO3bX/o=
+go.opentelemetry.io/contrib/instrumentation/runtime v0.56.0/go.mod h1:Q8Hsv3d9DwryfIl+ebj4mY81IYVRSPy4QfxroVZwqLo=
+go.opentelemetry.io/otel v1.32.0 h1:WnBN+Xjcteh0zdk01SVqV55d/m62NJLJdIyb4y/WO5U=
+go.opentelemetry.io/otel v1.32.0/go.mod h1:00DCVSB0RQcnzlwyTfqtxSm+DRr9hpYrHjNGiBHVQIg=
+go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.31.0 h1:FZ6ei8GFW7kyPYdxJaV2rgI6M+4tvZzhYsQ2wgyVC08=
+go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.31.0/go.mod h1:MdEu/mC6j3D+tTEfvI15b5Ci2Fn7NneJ71YMoiS3tpI=
+go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.31.0 h1:ZsXq73BERAiNuuFXYqP4MR5hBrjXfMGSO+Cx7qoOZiM=
+go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.31.0/go.mod h1:hg1zaDMpyZJuUzjFxFsRYBoccE86tM9Uf4IqNMUxvrY=
+go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.31.0 h1:K0XaT3DwHAcV4nKLzcQvwAgSyisUghWoY20I7huthMk=
+go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.31.0/go.mod h1:B5Ki776z/MBnVha1Nzwp5arlzBbE3+1jk+pGmaP5HME=
+go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.31.0 h1:FFeLy03iVTXP6ffeN2iXrxfGsZGCjVx0/4KlizjyBwU=
+go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.31.0/go.mod h1:TMu73/k1CP8nBUpDLc71Wj/Kf7ZS9FK5b53VapRsP9o=
+go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.31.0 h1:lUsI2TYsQw2r1IASwoROaCnjdj2cvC2+Jbxvk6nHnWU=
+go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.31.0/go.mod h1:2HpZxxQurfGxJlJDblybejHB6RX6pmExPNe517hREw4=
+go.opentelemetry.io/otel/metric v1.32.0 h1:xV2umtmNcThh2/a/aCP+h64Xx5wsj8qqnkYZktzNa0M=
+go.opentelemetry.io/otel/metric v1.32.0/go.mod h1:jH7CIbbK6SH2V2wE16W05BHCtIDzauciCRLoc/SyMv8=
+go.opentelemetry.io/otel/sdk v1.32.0 h1:RNxepc9vK59A8XsgZQouW8ue8Gkb4jpWtJm9ge5lEG4=
+go.opentelemetry.io/otel/sdk v1.32.0/go.mod h1:LqgegDBjKMmb2GC6/PrTnteJG39I8/vJCAP9LlJXEjU=
+go.opentelemetry.io/otel/sdk/metric v1.32.0 h1:rZvFnvmvawYb0alrYkjraqJq0Z4ZUJAiyYCU9snn1CU=
+go.opentelemetry.io/otel/sdk/metric v1.32.0/go.mod h1:PWeZlq0zt9YkYAp3gjKZ0eicRYvOh1Gd+X99x6GHpCQ=
+go.opentelemetry.io/otel/trace v1.32.0 h1:WIC9mYrXf8TmY/EXuULKc8hR17vE+Hjv2cssQDe03fM=
+go.opentelemetry.io/otel/trace v1.32.0/go.mod h1:+i4rkvCraA+tG6AzwloGaCtkx53Fa+L+V8e9a7YvhT8=
+go.opentelemetry.io/proto/otlp v1.3.1 h1:TrMUixzpM0yuc/znrFTP9MMRh8trP93mkCiDVeXrui0=
+go.opentelemetry.io/proto/otlp v1.3.1/go.mod h1:0X1WI4de4ZsLrrJNLAQbFeLCm3T7yBkR0XqQ7niQU+8=
+go.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=
+go.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=
+golang.org/x/net v0.30.0 h1:AcW1SDZMkb8IpzCdQUaIq2sP4sZ4zw+55h6ynffypl4=
+golang.org/x/net v0.30.0/go.mod h1:2wGyMJ5iFasEhkwi13ChkO/t1ECNC4X4eBKkVFyYFlU=
+golang.org/x/sys v0.27.0 h1:wBqf8DvsY9Y/2P8gAfPDEYNuS30J4lPHJxXSb/nJZ+s=
+golang.org/x/sys v0.27.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
+golang.org/x/text v0.20.0 h1:gK/Kv2otX8gz+wn7Rmb3vT96ZwuoxnQlY+HlJVj7Qug=
+golang.org/x/text v0.20.0/go.mod h1:D4IsuqiFMhST5bX19pQ9ikHC2GsaKyk/oF+pn3ducp4=
+google.golang.org/genproto/googleapis/api v0.0.0-20241104194629-dd2ea8efbc28 h1:M0KvPgPmDZHPlbRbaNU1APr28TvwvvdUPlSv7PUvy8g=
+google.golang.org/genproto/googleapis/api v0.0.0-20241104194629-dd2ea8efbc28/go.mod h1:dguCy7UOdZhTvLzDyt15+rOrawrpM4q7DD9dQ1P11P4=
+google.golang.org/genproto/googleapis/rpc v0.0.0-20241104194629-dd2ea8efbc28 h1:XVhgTWWV3kGQlwJHR3upFWZeTsei6Oks1apkZSeonIE=
+google.golang.org/genproto/googleapis/rpc v0.0.0-20241104194629-dd2ea8efbc28/go.mod h1:GX3210XPVPUjJbTUbvwI8f2IpZDMZuPJWDzDuebbviI=
+google.golang.org/grpc v1.67.1 h1:zWnc1Vrcno+lHZCOofnIMvycFcc0QRGIzm9dhnDX68E=
+google.golang.org/grpc v1.67.1/go.mod h1:1gLDyUQU7CTLJI90u3nXZ9ekeghjeM7pTDZlqFNg2AA=
+google.golang.org/protobuf v1.35.1 h1:m3LfL6/Ca+fqnjnlqQXNpFPABW1UD7mjh8KO2mKFytA=
+google.golang.org/protobuf v1.35.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=
+gopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=
+gopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
Index: go.mod
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/go.mod b/go.mod
new file mode 100644
--- /dev/null	(date 1732095815296)
+++ b/go.mod	(date 1732095815296)
@@ -0,0 +1,37 @@
+module otelbuild-demo
+
+go 1.23.3
+
+require (
+	github.com/antgan-0226/opentelemetry-go-auto-instrumentation v0.5.1
+	github.com/antgan-0226/opentelemetry-go-auto-instrumentation/test/verifier v0.0.0-20241120080835-df6534803198
+	go.opentelemetry.io/otel v1.32.0
+	go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.31.0
+	go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.31.0
+	go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.31.0
+	go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.31.0
+	go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.31.0
+)
+
+require github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826 // indirect
+
+require (
+	github.com/cenkalti/backoff/v4 v4.3.0 // indirect
+	github.com/go-logr/logr v1.4.2 // indirect
+	github.com/go-logr/stdr v1.2.2 // indirect
+	github.com/google/uuid v1.6.0 // indirect
+	github.com/grpc-ecosystem/grpc-gateway/v2 v2.23.0 // indirect
+	go.opentelemetry.io/contrib/instrumentation/runtime v0.56.0
+	go.opentelemetry.io/otel/metric v1.32.0
+	go.opentelemetry.io/otel/sdk v1.32.0
+	go.opentelemetry.io/otel/sdk/metric v1.32.0
+	go.opentelemetry.io/otel/trace v1.32.0
+	go.opentelemetry.io/proto/otlp v1.3.1 // indirect
+	golang.org/x/net v0.30.0 // indirect
+	golang.org/x/sys v0.27.0 // indirect
+	golang.org/x/text v0.20.0 // indirect
+	google.golang.org/genproto/googleapis/api v0.0.0-20241104194629-dd2ea8efbc28 // indirect
+	google.golang.org/genproto/googleapis/rpc v0.0.0-20241104194629-dd2ea8efbc28 // indirect
+	google.golang.org/grpc v1.67.1 // indirect
+	google.golang.org/protobuf v1.35.1 // indirect
+)
Index: model/user.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/model/user.go b/model/user.go
new file mode 100644
--- /dev/null	(date 1732093438380)
+++ b/model/user.go	(date 1732093438380)
@@ -0,0 +1,6 @@
+package model
+
+type UserModel struct {
+	Id       int64
+	Nickname string
+}
Index: hook/service/user_service_hook.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hook/service/user_service_hook.go b/hook/service/user_service_hook.go
new file mode 100644
--- /dev/null	(date 1732093946798)
+++ b/hook/service/user_service_hook.go	(date 1732093946798)
@@ -0,0 +1,23 @@
+package biz
+
+import (
+	"context"
+	"fmt"
+	"github.com/antgan-0226/opentelemetry-go-auto-instrumentation/pkg/api"
+	"otelbuild-demo/model"
+)
+
+func createUserEnterHook(call api.CallContext, ctx context.Context, id int64, nickname string) {
+	fmt.Println(fmt.Sprintf("[service hook]create user enter hook, id :%d, name:%s", id, nickname))
+
+}
+
+func createUserExitHook(call api.CallContext, user *model.UserModel, err error) {
+	oldUserId := call.GetParam(1)
+	oldNickname := call.GetParam(2)
+	fmt.Println(fmt.Sprintf("[service hook]create user exit hook, id :%d, name:%s", oldUserId, oldNickname))
+	//赋予新值
+	user.Id = 2
+	user.Nickname = "ant"
+	fmt.Println(fmt.Sprintf("[service hook]create user exit hook, id :%d, name:%s", user.Id, user.Nickname))
+}
Index: hook/http/hook.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hook/http/hook.go b/hook/http/hook.go
new file mode 100644
--- /dev/null	(date 1732093604148)
+++ b/hook/http/hook.go	(date 1732093604148)
@@ -0,0 +1,32 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package http
+
+import (
+	"encoding/json"
+	"fmt"
+	"github.com/antgan-0226/opentelemetry-go-auto-instrumentation/pkg/api"
+	"net/http"
+)
+
+func httpClientEnterHook(call api.CallContext, t *http.Transport, req *http.Request) {
+	header, _ := json.Marshal(req.Header)
+	fmt.Println("[http hook]request header is ", string(header))
+}
+
+func httpClientExitHook(call api.CallContext, res *http.Response, err error) {
+	header, _ := json.Marshal(res.Header)
+	fmt.Println("[http hook]response header is ", string(header))
+}
Index: otel_rules/otel_setup_sdk.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_rules/otel_setup_sdk.go b/otel_rules/otel_setup_sdk.go
new file mode 100644
--- /dev/null	(date 1732095811424)
+++ b/otel_rules/otel_setup_sdk.go	(date 1732095811424)
@@ -0,0 +1,146 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package otel_rules
+
+import (
+	"context"
+	"errors"
+	"log"
+	"os"
+	"strings"
+
+	"otelbuild-demo/otel_pkgdep/core/meter"
+	"otelbuild-demo/otel_pkgdep/inst-api-semconv/instrumenter/http"
+	"github.com/antgan-0226/opentelemetry-go-auto-instrumentation/test/verifier"
+	"go.opentelemetry.io/contrib/instrumentation/runtime"
+	"go.opentelemetry.io/otel"
+	_ "go.opentelemetry.io/otel"
+	_ "go.opentelemetry.io/otel/baggage"
+	"go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc"
+	"go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp"
+	"go.opentelemetry.io/otel/exporters/otlp/otlptrace"
+	"go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc"
+	"go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp"
+	"go.opentelemetry.io/otel/propagation"
+	"go.opentelemetry.io/otel/sdk/metric"
+	"go.opentelemetry.io/otel/sdk/trace"
+	_ "go.opentelemetry.io/otel/sdk/trace"
+)
+
+// set the following environment variables based on https://opentelemetry.io/docs/specs/otel/configuration/sdk-environment-variables
+// your service name: OTEL_SERVICE_NAME
+// your otlp endpoint: OTEL_EXPORTER_OTLP_ENDPOINT OTEL_EXPORTER_OTLP_TRACES_ENDPOINT OTEL_EXPORTER_OTLP_METRICS_ENDPOINT OTEL_EXPORTER_OTLP_LOGS_ENDPOINT
+// your otlp header: OTEL_EXPORTER_OTLP_HEADERS
+const exec_name = "otelbuild"
+const report_protocol = "OTEL_EXPORTER_OTLP_PROTOCOL"
+const trace_report_protocol = "OTEL_EXPORTER_OTLP_TRACES_PROTOCOL"
+
+func init() {
+	path, err := os.Executable()
+	if err != nil {
+		panic(err)
+	}
+	// skip when the executable is otelbuild itself
+	if strings.HasSuffix(path, exec_name) {
+		return
+	}
+	if err = initOpenTelemetry(); err != nil {
+		log.Fatalf("%s: %v", "Failed to initialize opentelemetry resource", err)
+	}
+}
+
+func newSpanProcessor(ctx context.Context) trace.SpanProcessor {
+	if verifier.IsInTest() {
+		traceExporter := verifier.GetSpanExporter()
+		// in test, we just send the span immediately
+		simpleProcessor := trace.NewSimpleSpanProcessor(traceExporter)
+		return simpleProcessor
+	} else {
+		var traceExporter trace.SpanExporter
+		var err error
+		if os.Getenv(report_protocol) == "grpc" || os.Getenv(trace_report_protocol) == "grpc" {
+			traceExporter, err = otlptrace.New(ctx, otlptracegrpc.NewClient())
+			if err != nil {
+				log.Fatalf("%s: %v", "Failed to create the OpenTelemetry trace exporter", err)
+			}
+		} else {
+			traceExporter, err = otlptrace.New(ctx, otlptracehttp.NewClient())
+			if err != nil {
+				log.Fatalf("%s: %v", "Failed to create the OpenTelemetry trace exporter", err)
+			}
+		}
+		batchSpanProcessor := trace.NewBatchSpanProcessor(traceExporter)
+		return batchSpanProcessor
+	}
+}
+
+func initOpenTelemetry() error {
+	ctx := context.Background()
+
+	var batchSpanProcessor trace.SpanProcessor
+
+	batchSpanProcessor = newSpanProcessor(ctx)
+
+	var traceProvider *trace.TracerProvider
+	if batchSpanProcessor != nil {
+		traceProvider = trace.NewTracerProvider(
+			trace.WithSpanProcessor(batchSpanProcessor))
+	} else {
+		traceProvider = trace.NewTracerProvider()
+	}
+
+	otel.SetTracerProvider(traceProvider)
+	otel.SetTextMapPropagator(propagation.NewCompositeTextMapPropagator(propagation.TraceContext{}, propagation.Baggage{}))
+	return initMetrics()
+}
+
+func initMetrics() error {
+	ctx := context.Background()
+	var mp *metric.MeterProvider
+	// TODO: abstract the if-else
+	if verifier.IsInTest() {
+		mp = metric.NewMeterProvider(
+			metric.WithReader(verifier.ManualReader),
+		)
+	} else {
+		if os.Getenv(report_protocol) == "grpc" || os.Getenv(trace_report_protocol) == "grpc" {
+			exporter, err := otlpmetricgrpc.New(ctx)
+			if err != nil {
+				log.Fatalf("new otlp metric grpc exporter failed: %v", err)
+			}
+			mp = metric.NewMeterProvider(
+				metric.WithReader(metric.NewPeriodicReader(exporter)),
+			)
+		} else {
+			exporter, err := otlpmetrichttp.New(ctx)
+			if err != nil {
+				log.Fatalf("new otlp metric http exporter failed: %v", err)
+			}
+			mp = metric.NewMeterProvider(
+				metric.WithReader(metric.NewPeriodicReader(exporter)),
+			)
+		}
+	}
+	if mp == nil {
+		return errors.New("No MeterProvider is provided")
+	}
+	otel.SetMeterProvider(mp)
+	m := mp.Meter("opentelemetry-global-meter")
+	meter.SetMeter(m)
+	// init http metrics
+	http.InitHttpMetrics(m)
+	// DefaultMinimumReadMemStatsInterval is 15 second
+	return runtime.Start(runtime.WithMeterProvider(mp))
+}
Index: service/user.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/service/user.go b/service/user.go
new file mode 100644
--- /dev/null	(date 1732093554093)
+++ b/service/user.go	(date 1732093554093)
@@ -0,0 +1,19 @@
+package service
+
+import (
+	"context"
+	"otelbuild-demo/model"
+)
+
+type User struct {
+	Id       int64
+	Nickname string
+}
+
+func CreateUser(ctx context.Context, id int64, nickname string) (u *model.UserModel, err error) {
+	user := &model.UserModel{
+		Id:       id,
+		Nickname: nickname,
+	}
+	return user, nil
+}
Index: otel_rules/service95044/user_service_hook.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_rules/service95044/user_service_hook.go b/otel_rules/service95044/user_service_hook.go
new file mode 100644
--- /dev/null	(date 1732095811424)
+++ b/otel_rules/service95044/user_service_hook.go	(date 1732095811424)
@@ -0,0 +1,23 @@
+package service95044
+
+import (
+	"context"
+	"fmt"
+	"otelbuild-demo/model"
+	"otelbuild-demo/service"
+)
+
+func CreateUserEnterHook(call service.CallContext, ctx context.Context, id int64, nickname string) {
+	fmt.Println(fmt.Sprintf("[service hook]create user enter hook, id :%d, name:%s", id, nickname))
+
+}
+
+func CreateUserExitHook(call service.CallContext, user *model.UserModel, err error) {
+	oldUserId := call.GetParam(1)
+	oldNickname := call.GetParam(2)
+	fmt.Println(fmt.Sprintf("[service hook]create user exit hook, id :%d, name:%s", oldUserId, oldNickname))
+	//赋予新值
+	user.Id = 2
+	user.Nickname = "ant"
+	fmt.Println(fmt.Sprintf("[service hook]create user exit hook, id :%d, name:%s", user.Id, user.Nickname))
+}
Index: otel_rules/http87548/hook.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_rules/http87548/hook.go b/otel_rules/http87548/hook.go
new file mode 100644
--- /dev/null	(date 1732095811423)
+++ b/otel_rules/http87548/hook.go	(date 1732095811423)
@@ -0,0 +1,31 @@
+// Copyright (c) 2024 Alibaba Group Holding Ltd.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package http87548
+
+import (
+	"encoding/json"
+	"fmt"
+	"net/http"
+)
+
+func HttpClientEnterHook(call http.CallContext, t *http.Transport, req *http.Request) {
+	header, _ := json.Marshal(req.Header)
+	fmt.Println("[http hook]request header is ", string(header))
+}
+
+func HttpClientExitHook(call http.CallContext, res *http.Response, err error) {
+	header, _ := json.Marshal(res.Header)
+	fmt.Println("[http hook]response header is ", string(header))
+}
Index: otel_rules/otel_setup_inst.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/otel_rules/otel_setup_inst.go b/otel_rules/otel_setup_inst.go
new file mode 100644
--- /dev/null	(date 1732095811424)
+++ b/otel_rules/otel_setup_inst.go	(date 1732095811424)
@@ -0,0 +1,17 @@
+package otel_rules
+import service39054 "otelbuild-demo/service"
+import service95044 "otelbuild-demo/otel_rules/service95044"
+import http55767 "net/http"
+import http87548 "otelbuild-demo/otel_rules/http87548"
+import otel_log "log"
+import otel_runtime_debug "runtime/debug"
+func init() {
+	service39054.CreateUserEnterHookImpl = service95044.CreateUserEnterHook
+	service39054.CreateUserExitHookImpl = service95044.CreateUserExitHook
+	service39054.OtelGetStackImpl = otel_runtime_debug.Stack
+	service39054.OtelPrintStackImpl = func(bt []byte){ otel_log.Printf(string(bt)) }
+	http55767.HttpClientEnterHookImpl = http87548.HttpClientEnterHook
+	http55767.HttpClientExitHookImpl = http87548.HttpClientExitHook
+	http55767.OtelGetStackImpl = otel_runtime_debug.Stack
+	http55767.OtelPrintStackImpl = func(bt []byte){ otel_log.Printf(string(bt)) }
+}
